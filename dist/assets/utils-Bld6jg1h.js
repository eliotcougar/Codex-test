import{N as j,D as Dt,a as $t,b as Ct,c as Pt,d as Rt,e as _t,f as Lt,g as et,h as tt,C as Ut,M as Ot,G as nt,i as at,j as V,k as ot,V as jt,l as Vt,m as Ft,n as xt,o as Yt,p as Bt,q as X,r as Z,s as W,t as K,u as st,L as Ht,v as Gt,w as Pe,x as Re,E as _e,y as Le,z as Ue,A as Oe,B as je,F,H as Wt,I as Kt,J as Ve,K as zt,O as Jt,P as qt,Q as Qt,R as Xt,S as Zt}from"./corrections-ki202whU.js";import{i as en,m as tn,a as nn,b as an,k as on}from"./resources-S7kUJpgm.js";import{j as L,R as it}from"./vendor-BKCITg7t.js";let Q=null;const ne=[],ao=e=>{e===null?setTimeout(()=>{Q=null,ne.forEach(a=>{a(Q)})},0):(Q=e,ne.forEach(a=>{a(Q)}))},oo=e=>{ne.push(e),e(Q)},so=e=>{const a=ne.indexOf(e);a!==-1&&ne.splice(a,1)},io=()=>Q;function oe(e){const a=globalThis;return typeof a.structuredClone=="function"?a.structuredClone(e):ve(e)}function ro(e){const a=oe(e);return a.inventory=a.inventory.map(t=>{var n;return{...t,chapters:(n=t.chapters)==null?void 0:n.map(s=>({...s,imageData:void 0}))}}),a.playerJournal=a.playerJournal.map(t=>({...t,imageData:void 0})),a}function ve(e){if(e===null||typeof e!="object")return e;if(e instanceof Date)return new Date(e.getTime());if(Array.isArray(e))return e.map(t=>ve(t));const a={};for(const t in e)Object.prototype.hasOwnProperty.call(e,t)&&(a[t]=ve(e[t]));return a}const sn=140,rt=10,dt=.15,co=(e,a)=>{if(e.length===0)return[];const t=new Map(e.map(m=>[m.id,oe(m)])),n=new Map;t.forEach(m=>{const h=m.data.parentNodeId&&m.data.parentNodeId!=="Universe"?m.data.parentNodeId:void 0;if(h){n.has(h)||n.set(h,[]);const f=n.get(h);f&&f.push(m.id)}});const s=j,o=(a==null?void 0:a.padding)??rt,r=(a==null?void 0:a.anglePadding)??dt,i=2,d=m=>{const h=t.get(m);if(!h)throw new Error(`Node ${m} missing in layout`);const f=n.get(m)??[];if(f.length===0)return h.data.visualRadius=s,h.position={x:0,y:0},h.data.visualRadius;if(f.forEach(S=>d(S)),f.length===1){const S=t.get(f[0]);if(!S)throw new Error("Child node missing");return S.position={x:0,y:0},h.data.visualRadius=(S.data.visualRadius??s)+o,h.position={x:0,y:0},h.data.visualRadius}const g=f.map(S=>{const w=t.get(S);if(!w)throw new Error("Child node missing");return w}).sort((S,w)=>(w.data.visualRadius??s)-(S.data.visualRadius??s));let N=Math.max(...g.map(S=>S.data.visualRadius??s))+o;for(;;){let S=0;for(let w=0;w<g.length;w++){const v=g[w].data.visualRadius??s,k=g[(w+1)%g.length].data.visualRadius??s,M=(v+k+o)/(2*N);if(M>1){S=2*Math.PI+1;break}S+=2*Math.asin(M)+r}if(S<=2*Math.PI)break;N+=i}let I=0;for(let S=0;S<g.length;S++){const w=g[S],v=w.data.visualRadius??s;w.position={x:N*Math.cos(I),y:N*Math.sin(I)};const k=g[(S+1)%g.length].data.visualRadius??s;I+=2*Math.asin((v+k+o)/(2*N))+r}const b=Math.max(...g.map(S=>S.data.visualRadius??s));return h.data.visualRadius=N+b+o,h.position={x:0,y:0},h.data.visualRadius},c=Array.from(t.values()).filter(m=>!m.data.parentNodeId||m.data.parentNodeId==="Universe").map(m=>m.id),l="__root__";n.set(l,c);const p={id:l,themeName:"root",placeName:"root",position:{x:0,y:0},data:{description:"root",nodeType:"region",status:"discovered"}};t.set(l,p),d(l);const u=(m,h,f)=>{const g=t.get(m);if(!g)throw new Error(`Node ${m} missing in offset application`);m!==l&&(g.position={x:g.position.x+h,y:g.position.y+f}),(n.get(m)??[]).forEach(I=>{u(I,g.position.x,g.position.y)})};return u(l,0,0),t.delete(l),Array.from(t.values())},rn=()=>({IDEAL_EDGE_LENGTH:sn,NESTED_PADDING:rt,NESTED_ANGLE_PADDING:dt,LABEL_MARGIN_PX:tt,LABEL_LINE_HEIGHT_EM:et,LABEL_OVERLAP_MARGIN_PX:Lt,ITEM_ICON_SCALE:_t}),dn=()=>({saveGameVersion:Ut,currentThemeName:null,currentThemeObject:null,currentScene:"",mainQuest:null,currentObjective:null,actionOptions:[],inventory:[],playerJournal:[],lastJournalWriteTurn:0,lastJournalInspectTurn:0,lastLoreDistillTurn:0,gameLog:["Welcome to Whispers in the Dark!"],lastActionLog:null,themeHistory:{},themeFacts:[],pendingNewThemeNameAfterShift:null,allNPCs:[],mapData:{nodes:[],edges:[]},currentMapNodeId:null,destinationNodeId:null,mapLayoutConfig:rn(),mapViewBox:Rt,score:0,localTime:"Unknown",localEnvironment:"Unknown",localPlace:"Unknown",turnsSinceLastShift:0,globalTurnNumber:0,isCustomGameMode:!1,dialogueState:null,objectiveAnimationType:null,lastDebugPacket:null,lastTurnChanges:null,isAwaitingManualShiftThemeSelection:!1,playerGender:Pt,enabledThemePacks:[...Ct],stabilityLevel:$t,chaosLevel:Dt,debugLore:!1,debugGoodFacts:[],debugBadFacts:[]}),lo=(e,a,t,n)=>{const s=dn();return s.playerGender=e,s.enabledThemePacks=[...a],s.stabilityLevel=t,s.chaosLevel=n,s},cn=e=>{if(!e||typeof e!="object")return null;const a=e;if(typeof a.status=="number")return a.status;if(a.error&&typeof a.error.code=="number")return a.error.code;const t=typeof a.message=="string"||typeof a.message=="number"||typeof a.message=="boolean"?String(a.message):"",n=/status:\s*(\d{3})/.exec(t);return n?parseInt(n[1],10):null},ln=e=>{const a=cn(e);return a!==null&&a>=400&&a<600},un=e=>{if(!e)return!1;const a=e instanceof Error?e.message:typeof e=="string"||typeof e=="number"||typeof e=="boolean"?String(e):"";return a.includes("ERR_SSL_PROTOCOL_ERROR")||a.includes("ECONNRESET")||a.includes("ETIMEDOUT")||a.includes("EAI_AGAIN")||a.includes("Failed to fetch")},ae={[at]:[],[nt]:[],[Ot]:[]};let le=[];const Me=()=>{const e=Date.now()-6e4;Object.values(ae).forEach(a=>{if(a)for(;a.length&&a[0]<e;)a.shift()})},pn=()=>{le.forEach(e=>{e()})},uo=e=>{let a=ae[e];a||(a=[],ae[e]=a),a.push(Date.now()),Me(),pn()},po=e=>{var a;return Me(),((a=ae[e])==null?void 0:a.length)??0},fo=e=>(le.push(e),()=>{le=le.filter(a=>a!==e)}),ho=(e,a)=>{Me();const t=ae[e]??[];if(t.length<a)return 0;const n=t.length-a,s=t[n]+6e4;return Math.max(0,s-Date.now())},fn=e=>{let a=e.trim();const n=/^```(?:json)?\s*\n?(.*?)\n?\s*```$/s.exec(a);return n!=null&&n[1]&&(a=n[1].trim()),a};function ct(e,a){try{const t=JSON.parse(e);return a&&!a(t)?null:t}catch{return null}}function mo(e){return Object.fromEntries(Object.entries(e).map(([t,n])=>[t,n===null?void 0:n]))}const q=e=>{const a=[];return e.minItems!==void 0&&a.push(`minItems ${String(e.minItems)}`),e.maxItems!==void 0&&a.push(`maxItems ${String(e.maxItems)}`),e.minLength!==void 0&&a.push(`minLength ${String(e.minLength)}`),e.maxLength!==void 0&&a.push(`maxLength ${String(e.maxLength)}`),e.description&&a.push(e.description),a.length?` /* ${a.join(". ")} */`:""},Te=(e,a=0)=>{const t="  ".repeat(a);if(e.type==="object"||e.properties){const n=[`${t}{`],s=e.properties??{},o=new Set(e.required??[]),r=Object.keys(s);return r.forEach((i,d)=>{const c=Te(s[i],a+1),l=c[0].trim().startsWith("{")||c[0].trim().startsWith("[");c[0]=l?`${t}  "${i}"${o.has(i)?"":"?"}:
${c[0]}`:`${t}  "${i}"${o.has(i)?"":"?"}: ${c[0]}`;const p=d<r.length-1?",":"";c[c.length-1]+=p,n.push(...c)}),n.push(`${t}}${q(e)}`),n}if(e.type==="array"||e.items){const n=[`${t}[`],s=Te(e.items??{},a+1);return n.push(...s),n.push(`${t}]${q(e)}`),n}return e.enum?[`${e.enum.map(s=>JSON.stringify(s)).join(" | ")}${q(e)}`]:e.const!==void 0?[`${JSON.stringify(e.const)}${q(e)}`]:e.type?[`"${e.type==="integer"?"number":e.type}"${q(e)}`]:[`unknown${q(e)}`]},hn=e=>Te(e).join(`
`),go=e=>{const t=(typeof e=="string"?ct(e):e)??{};return`Respond ONLY with a JSON with the following schema:
${hn(t)}`};let ee="";const ue=[];let se=0;const pe=[],lt=()=>{pe.forEach(e=>{e(se)})},ut=()=>{ue.forEach(e=>{e(ee)})},yo=e=>{ue.push(e),e(ee)},No=e=>{pe.push(e),e(se)},wo=e=>{const a=ue.indexOf(e);a!==-1&&ue.splice(a,1)},Io=e=>{const a=pe.indexOf(e);a!==-1&&pe.splice(a,1)},mn=e=>{ee=e+ee,ut()},gn=()=>{se+=1,lt()},vo=()=>{ee="",ut()},Fe=()=>{se=0,lt()},To=()=>ee,bo=()=>se,yn=async(e,a=500)=>{Fe();for(let t=0;t<=V;t++){let n=!1;try{const{result:o,retry:r=!0}=await e(t);if(o!==null)return o;if(!r)return null}catch(o){if(n=un(o),!ln(o)&&!n)throw o}if(t===V)break;gn();const s=n?Math.max(a,5e3):a;await new Promise(o=>setTimeout(o,s))}return Fe(),null},Nn=(e,a=[])=>{const t=e.data.parentNodeId??"Universe",n=e.data.description,s=a.filter(r=>r.holderId===e.id),o=s.length>0?` Items: ${s.map(r=>`"${r.name}"`).join(", ")}`:"";return` - ${e.id} - "${e.placeName}" (parent: ${t}), "${n}"${o}`},wn=e=>`- ${e.id} from ${e.sourceNodeId} to ${e.targetNodeId}`,In=(e,a="",t=!0,n=!0,s=!0,o=!1)=>{const r=Array.isArray(e)?e:[e];if(r.length===0)return"";const i=o?"; ":`;
`;return r.map(c=>{let l=`${a}${c.id} - "${c.placeName}"`;return t&&c.data.aliases&&c.data.aliases.length>0&&(l+=` (aka ${c.data.aliases.map(p=>`"${p}"`).join(", ")})`),n&&(l+=` (Type: ${c.data.nodeType}, Visited: ${String(!!c.data.visited)}, ParentNodeId: ${c.data.parentNodeId??"N/A"}, Status: ${c.data.status})`),s&&(l+=`, "${c.data.description}"`),l}).join(i)+"."},vn=(e,a=!0,t=!0,n=!0)=>{const s=new Map;e.forEach(c=>{const l=c.data.parentNodeId&&c.data.parentNodeId!=="Universe"?c.data.parentNodeId:"Universe",p=s.get(l);p?p.push(c):s.set(l,[c])});const o=(c,l)=>c.placeName.localeCompare(l.placeName);for(const c of s.values())c.sort(o);const r=[],i=(c,l,p)=>{const m=In(c,`${l}${p?"└─":"├─"} `,a,t,n,!0);r.push(m);const h=l+(p?"   ":"│  "),f=s.get(c.id)??[];f.forEach((g,N)=>{i(g,h,N===f.length-1)})},d=s.get("Universe")??[];return d.forEach((c,l)=>{i(c,"",l===d.length-1)}),r.join(`
`)},Tn=(e,a)=>{const t=e.data.status??"open",n=e.data.type??"path",s=[];e.data.travelTime&&s.push(`travel time: ${e.data.travelTime}`),e.data.description&&s.push(e.data.description);const o=s.length>0?` (${s.join(", ")})`:"";return` - ${t} ${n} to "${a.placeName}"${o}.`},bn=(e,a=!1,t=!0)=>{const n=e.filter(s=>s.data.nodeType!=="feature"&&s.data.nodeType!=="room");return n.length===0?"None specifically known in this theme yet.":a?n.map(s=>{let o=" - ";return t&&(o+=`${s.id} - `),o+=`"${s.placeName}"`,s.data.aliases&&s.data.aliases.length>0&&(o+=` (aka ${s.data.aliases.map(r=>`"${r}"`).join(", ")})`),o+=s.data.status=="rumored"?", rumored":"",o+=`, "${s.data.description||"No description available."}"`,o}).join(`;
`)+".":n.map(s=>{let o="";return t&&(o+=`${s.id} - `),o+=`"${s.placeName}"`,s.data.aliases&&s.data.aliases.length>0&&(o+=` (aka ${s.data.aliases.map(r=>`"${r}"`).join(", ")})`),o}).join(", ")+"."},xe=e=>e?{open:10,accessible:9,active:8,temporary_bridge:6,secret_passage:5,door:4,rumored:3,closed:2,locked:1,blocked:0,inactive:-1}[e]??0:7,Ye=(e,a,t,n,s)=>{const o=t.filter(d=>d.sourceNodeId===e.id||d.targetNodeId===e.id),r={};o.forEach(d=>{const c=d.sourceNodeId===e.id?d.targetNodeId:d.sourceNodeId;if(c===n||s.has(c))return;let l=r[c];l||(l=[],r[c]=l),l.push(d)});const i=[];for(const d in r){const c=r[d];if(!c)continue;const l=c.filter(h=>!(h.data.status&&ot.includes(h.data.status)||h.data.status==="one_way"&&h.targetNodeId===e.id));if(l.length===0)continue;l.sort((h,f)=>{const g=(h.sourceNodeId===e.id?100:0)+xe(h.data.status);return(f.sourceNodeId===e.id?100:0)+xe(f.data.status)-g});const p=l[0],u=a.find(h=>h.id===d);if(!u)continue;const m=Tn(p,u);i.push(m),s.add(d)}return i},pt=(e,a,t,n,s,o)=>{const r=new Set,i=[{nodeId:e,hop:0}],d=new Set,c=["open","accessible","active"];for(;i.length>0;){const l=i.shift();if(l&&!(d.has(l.nodeId)&&l.nodeId!==e)&&(d.add(l.nodeId),l.nodeId!==e&&r.add(l.nodeId),l.hop<a)){const p=n.filter(u=>(u.sourceNodeId===l.nodeId||u.targetNodeId===l.nodeId)&&c.includes(u.data.status));for(const u of p){const m=u.sourceNodeId===l.nodeId?u.targetNodeId:u.sourceNodeId;if(!d.has(m)){const h=t.find(f=>f.id===m);h&&(h.data.nodeType,i.push({nodeId:m,hop:l.hop+1}))}}}}return r},Mo=(e,a,t=[])=>{if(!a)return"Current location unknown.";const n=e.nodes,s=e.edges,o=pt(a,2,n,s);o.add(a);const r=[];return o.forEach(i=>{const d=n.find(c=>c.id===i);d&&r.push(Nn(d,t))}),r.join(`;
`)+"."},Eo=(e,a,t,n,s)=>{if(!a||!t)return"Player's precise map location is currently unknown or they are between known locations.";const o=n.find(f=>f.id===a);if(!o)return"";let r=` - You are currently at ${o.id} - "${o.placeName}".`;o.data.description&&(r+=` ${o.data.description}.`);const i=o.data.nodeType==="feature"&&o.data.parentNodeId&&o.data.parentNodeId!=="Universe"?n.find(f=>f.id===o.data.parentNodeId):null;i&&(i.data.nodeType==="feature"?r+=` This is a feature of "${i.placeName}".`:r+=` This is part of the larger known location: "${i.placeName}".`),r+=`
`;const d=o.data.nodeType==="feature"?o.data.parentNodeId&&o.data.parentNodeId!=="Universe"?o.data.parentNodeId:void 0:o.id;let c="";if(d){const f=n.find(g=>g.id===d);if(f&&f.data.nodeType!=="feature"){const g=n.filter(I=>I.data.nodeType==="feature"&&I.data.parentNodeId===f.id),N=[];if(g.length>0){for(const I of g)if(I.id!==o.id)for(const b of s){if(b.sourceNodeId!==I.id&&b.targetNodeId!==I.id||b.data.status&&ot.includes(b.data.status))continue;const S=b.sourceNodeId===I.id?b.targetNodeId:b.sourceNodeId,w=n.find(v=>v.id===S);if(w&&w.data.nodeType==="feature"&&w.data.parentNodeId&&w.data.parentNodeId!==f.id&&w.data.parentNodeId!=="Universe"){const v=n.find(k=>k.id===w.data.parentNodeId&&k.data.nodeType!=="feature");if(v){const k=b.data.status??"open",M=b.data.type??"path";N.push(` - '${k} ${M}' exit at '${I.placeName}', leading to '${v.placeName}' via '${w.placeName}'.`)}}}}N.length>0?c=`
Possible Exits from Current Main Area (`+f.placeName+`):
`+N.join(`
`):c=`
No mapped exits from the current main area ("${f.placeName}") to other major areas are known.`}else f&&f.data.nodeType==="feature"&&(c=`You are at a detailed feature ("${f.placeName}"). Connections to other major areas are listed below if available.`)}else c="Current location is not part of a larger mapped area.";r+=c+`

`;const l=new Set,p=o.data.nodeType==="feature"&&i?i.id:null,u=Ye(o,n,s,p,l),m=i?Ye(i,n,s,o.id,l):[];u.length>0&&(r+="Paths leading directly from your current spot ("+o.placeName+`):
`+u.join(`
`)),m.length>0&&i&&(u.length>0&&(r+=`

`),r+=`Additional paths and features within or connected to "${i.placeName}":
`+m.join(`
`)),r+=`
`;const h=pt(o.id,2,n,s);if(h.size>0){const f=Array.from(h).map(g=>{var N;return(N=n.find(I=>I.id===g))==null?void 0:N.placeName}).filter(g=>!!g).map(g=>`"${String(g)}"`);f.length>0&&(r+=`
Locations nearby (within two hops): ${f.join(", ")}.`)}return r},Mn=en,En=Mn.type,Ao=new Set(["destroyed","consumed","deleted","removed","lost","gone","broken"]);function So(e){if(typeof e!="string")return null;const a=e.toLowerCase().trim();return jt.includes(a)?a:En[a]??null}const Ee=tn,Ae=nn,An=Ee.status,Sn=Ee.type,kn=Ae.type,Dn=Ae.status,$n=Ee.remove,Cn=Ae.remove;function Ne(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function Pn(e,a){const t={};for(const s of a)t[s]=[Ne(s)];for(const[s,o]of Object.entries(e)){let r=t[o];r||(r=[Ne(o)],t[o]=r),r.push(Ne(s))}const n=[];for(const[s,o]of Object.entries(t)){if(!o)continue;const r=o.map(i=>i.replace(/\s+/g,"\\s+")).join("|");n.push([new RegExp(r,"i"),s])}return n}const Rn=an,_n=Rn.tag;function Ln(e){if(typeof e!="string")return null;const a=e.toLowerCase().trim();return Vt.includes(a)?a:_n[a]??null}function ko(e){if(!Array.isArray(e))return null;const a=[];for(const t of e){const n=Ln(t);n&&a.push(n)}return a}const Be={foreign:{notRecovered:"The text appears to be in an unfamiliar language and might be translated",recovered:"The foreign text has been translated"},runic:{notRecovered:"The text is written in strange runes and might be translated",recovered:"The runic text has been translated"},glitching:{notRecovered:"The text is glitching or corrupted and might be restored",recovered:"The previously corrupted text has been restored"},encrypted:{notRecovered:"The text is encoded and might be decoded",recovered:"The text has been decoded"}},Do=(e,a="",t=!0,n=!0,s=!1,o=!1,r=!1)=>{const i=Array.isArray(e)?e:[e];if(i.length===0)return"Empty.";const d=s?"; ":`;
`;return i.map(c=>{let l=`${a}${c.id} - "${c.name}"`;const p=[];if(t){if(p.push(`Type: "${c.type}"`),o&&c.tags&&c.tags.length>0&&p.push(`Tags: ${c.tags.join(", ")}`),r&&c.tags&&c.tags.length>0){const u=c.tags.includes("recovered"),m=c.tags.map(h=>{const f=Be[h];return f?u?f.recovered:f.notRecovered:null}).filter(h=>!!h);m.length>0&&p.push(m.join(" "))}p.push(`Description: "${c.isActive&&c.activeDescription?c.activeDescription:c.description}"${c.isActive?", It is active":""}`),l+=` (${p.join(", ")})`}else{const u=[];if(o&&c.tags&&c.tags.length>0&&u.push(`Tags: ${c.tags.join(", ")}`),r&&c.tags&&c.tags.length>0){const m=c.tags.includes("recovered"),h=c.tags.map(f=>{const g=Be[f];return g?m?g.recovered:g.notRecovered:null}).filter(f=>!!f);h.length>0&&u.push(h.join(" "))}u.length>0&&(l+=` (${u.join(", ")})`)}if(n&&c.knownUses&&c.knownUses.length>0){const u=c.knownUses.filter(m=>{const h=!!c.isActive;return m.appliesWhenActive!==void 0&&m.appliesWhenInactive!==void 0?m.appliesWhenActive&&h||m.appliesWhenInactive&&!h:m.appliesWhenActive!==void 0?m.appliesWhenActive===h:m.appliesWhenInactive!==void 0?m.appliesWhenInactive===!h:!0});u.length>0&&(l+=`, Available Actions: ${u.map(m=>`"${m.actionName}"`).join(", ")}`)}return l}).join(d)},Un=()=>{const e=[],a=(s,o)=>{const r=e[s];e[s]=e[o],e[o]=r},t=s=>{for(;s>0;){const o=Math.floor((s-1)/2);if(e[o].priority<=e[s].priority)break;a(o,s),s=o}},n=s=>{const o=e.length-1;for(;;){const r=s*2+1,i=s*2+2;let d=s;if(r<=o&&e[r].priority<e[d].priority&&(d=r),i<=o&&e[i].priority<e[d].priority&&(d=i),d===s)break;a(s,d),s=d}};return{push(s,o){e.push({value:s,priority:o}),t(e.length-1)},pop(){if(e.length===0)return;const s=e[0].value,o=e.pop();return o!==void 0&&e.length>0&&(e[0]=o,n(0)),s},size(){return e.length}}},On={open:1,accessible:1,active:1,one_way:1,rumored:5,closed:1/0,locked:1/0,blocked:1/0,hidden:1/0,collapsed:1/0,removed:1/0,inactive:1/0},ie=20,me=e=>{const a=new Map,t=new Map(e.nodes.map(i=>[i.id,i])),n=i=>{const d=i?t.get(i):void 0;return!!d&&d.data.status!=="blocked"},s=new Map;for(const i of e.nodes){const d=i.data.parentNodeId;if(!d)continue;s.has(d)||s.set(d,[]);const c=s.get(d);c&&c.push(i.id)}const o=(i,d,c,l)=>{a.has(i)||a.set(i,[]);const p=a.get(i);p&&p.push({edgeId:c,to:d,cost:l})};for(const i of e.edges){if(!n(i.sourceNodeId)||!n(i.targetNodeId))continue;const d=i.data.status??"open",c=On[d];c!==1/0&&(o(i.sourceNodeId,i.targetNodeId,i.id,c),d!=="one_way"&&o(i.targetNodeId,i.sourceNodeId,i.id,c))}for(const i of e.nodes){const d=i.data.parentNodeId;if(!d||d==="Universe"||!n(i.id)||!n(d)||!(s.get(d)??[]).some(m=>m!==i.id&&n(m)))continue;const p=`hierarchy:${i.id}->${d}`,u=`hierarchy:${d}->${i.id}`;o(i.id,d,p,ie),o(d,i.id,u,ie)}const r=new Map;for(const i of e.nodes){const d=i.data.parentNodeId;if(!d)continue;r.has(d)||r.set(d,[]);const c=r.get(d);c&&c.push(i)}for(const i of r.values()){const d=p=>p.data.nodeType==="feature"||p.data.isFeature===!0,c=i.filter(d),l=i.filter(p=>!d(p));for(const p of c)for(const u of l){if(!n(p.id)||!n(u.id))continue;const m=`hierarchy:${p.id}->${u.id}`,h=`hierarchy:${u.id}->${p.id}`;o(p.id,u.id,m,ie),o(u.id,p.id,h,ie)}}return{adjacency:a,nodeMap:t,childrenByParent:s}},ft=(e,a,t,n)=>{const{adjacency:s,nodeMap:o,childrenByParent:r}=n??me(e),i=h=>{const f=h?o.get(h):void 0;return!!f&&f.data.status!=="blocked"},d=(h,f)=>{const g=r.get(h);if(g!=null&&g.includes(f))return g.some(I=>I!==f&&I!==a&&i(I));const N=r.get(f);return N!=null&&N.includes(h)?N.some(I=>I!==h&&I!==a&&i(I)):!0},c=new Map,l=new Map,p=Un();for(p.push({nodeId:a,cost:0},0),c.set(a,0);p.size()>0;){const h=p.pop();if(!h)break;if(h.cost!==(c.get(h.nodeId)??1/0))continue;if(h.nodeId===t)break;const f=s.get(h.nodeId)??[];for(const g of f){if(g.edgeId.startsWith("hierarchy:")&&!d(h.nodeId,g.to))continue;const N=h.cost+g.cost;N<(c.get(g.to)??1/0)&&(c.set(g.to,N),l.set(g.to,{from:h.nodeId,edgeId:g.edgeId}),p.push({nodeId:g.to,cost:N},N))}}if(!c.has(t))return null;const u=[];let m=t;for(u.unshift({step:"node",id:m});m!==a;){const h=l.get(m);if(!h)break;u.unshift({step:"edge",id:h.edgeId}),m=h.from,u.unshift({step:"node",id:m})}return u},jn=(e,a="",t=!0,n=!0,s=!0,o=!1)=>{const r=Array.isArray(e)?e:[e];if(r.length===0)return"";const i=o?"; ":`;
`;return r.map(c=>{let l=`${a}${c.id} - "${c.name}"`;return t&&c.aliases&&c.aliases.length>0&&(l+=` (aka ${c.aliases.map(p=>`"${p}"`).join(", ")})`),n&&(l+=` (${c.presenceStatus}`,c.presenceStatus==="companion"||c.presenceStatus==="nearby"?l+=`, ${c.preciseLocation??(c.presenceStatus==="companion"?"with you":"nearby")}`:l+=`, Last Location: ${c.lastKnownLocation??"Unknown"}`,l+=")"),s&&(l+=`, "${c.description}"`),l}).join(i)+"."},$o=e=>e.length===0?"":" - "+e.join(`
 - `),Co=(e,a,t,n,s)=>{const o=[];e.forEach(l=>{const p=[l.placeName,...l.data.aliases??[]];new RegExp(p.map(m=>`\\b${m.replace(/[.*+?^${}()|[\\]\\]/g,"\\$&")}\\b`).join("|"),"i").test(t)&&o.push(l)});const r=[];a.forEach(l=>{const p=[l.name,...l.aliases??[]];new RegExp(p.map(m=>`\\b${m.replace(/[.*+?^${}()|[\\]\\]/g,"\\$&")}\\b`).join("|"),"i").test(t)&&r.push(l)});let i="";const d=bn(o,!0);d&&d!=="None specifically known in this theme yet."&&(i+=`${n}
${d}
`);const c=jn(r," - ");return c&&(i+=`${s}
${c}`),i.trimStart()},Po=(e,a,t)=>{var w,v,k;if(!a||!t||a===t)return null;const n=me(e),s=ft(e,a,t,n);if(!s||s.length<3)return null;const o=e.nodes.find(M=>M.id===t),r=(o==null?void 0:o.placeName)??t,i=o==null?void 0:o.data.parentNodeId,d=i&&i!=="Universe"?((w=e.nodes.find(M=>M.id===i))==null?void 0:w.placeName)??i:null,c=d?`${r} in ${d}`:r,l=(o==null?void 0:o.data.status)==="rumored",p=s[1],u=s[2],m=s.length>4?s[4]:void 0;if(p.step!=="edge"||u.step!=="node")return null;const h=e.nodes.find(M=>M.id===u.id),f=(h==null?void 0:h.placeName)??u.id,g=m&&m.step==="node"?e.nodes.find(M=>M.id===m.id):null,N=m?(g==null?void 0:g.placeName)??m.id:"",I=(h==null?void 0:h.data.status)==="rumored",b=(g==null?void 0:g.data.status)==="rumored";let S=l?`Player wants to reach a rumored place - ${c}.`:`Player wants to travel to ${c}.`;if(p.id.startsWith("hierarchy:")){const[M,C]=p.id.split(":")[1].split("->"),$=((v=e.nodes.find(E=>E.id===M))==null?void 0:v.placeName)??M,T=((k=e.nodes.find(E=>E.id===C))==null?void 0:k.placeName)??C;S+=` The journey leads towards ${T} in the general area of ${$}, and then towards ${b?"a rumored place - "+N:N}.`}else{const M=e.edges.find(T=>T.id===p.id),C=(M==null?void 0:M.data.status)??"open",$=(M==null?void 0:M.data.description)??(M==null?void 0:M.data.type)??"path";C==="rumored"?S+=` There is a rumor a path exists from here to ${I?"a rumored place - "+f:f}.`:S+=` The path leads through ${$} towards ${I?"a rumored place - "+f:f}.`}return S},Ro=e=>(e.mapHint!==void 0&&(e.mapHint=e.mapHint.trim()),e.playerItemsHint!==void 0&&(e.playerItemsHint=e.playerItemsHint.trim()),e.worldItemsHint!==void 0&&(e.worldItemsHint=e.worldItemsHint.trim()),e.npcItemsHint!==void 0&&(e.npcItemsHint=e.npcItemsHint.trim()),Array.isArray(e.newItems)&&(e.newItems=e.newItems.filter(Ft)),e),Vn=on,ht=Vn.block,Fn=Array.from(new Set(Object.values(ht)));let re=null;function xn(){return re||(re=Pn(ht,Fn),re)}function Yn(e){return xn().some(([t])=>t.test(e))}function Bn(e){return Yn(e.actionName)}function _o(e){return e&&e.filter(a=>!Bn(a))}const z=e=>{const t=e.replace(/\s+/g,"_").replace(/[^a-zA-Z0-9_]/g,"").replace(/_+$/,""),n=Math.random().toString(36).substring(2,6);return`${t}_${n}`},te=e=>e.replace(/\[[^\]]*\]|\([^)]*\)/g,"").replace(/\s+/g," ").trim(),He=(e,a,t,n)=>{if(!e||!a)return 1/0;const s=ft(e,a,t,n);return s?s.filter(o=>o.step==="edge").length:1/0},H=(e,a,t,n,s=!1)=>{if(!e)return s?[]:void 0;const o=a.find(w=>w.id===e);if(!s&&o)return o;const r=w=>w.toLowerCase().replace(/[.,!?;:"(){}[\]'’]/g,"").trim(),i=r(e),d=a.filter(w=>r(w.placeName)===i),c=a.filter(w=>{var v;return(v=w.data.aliases)==null?void 0:v.some(k=>r(k)===i)}).filter(w=>!d.includes(w)),l=t?me(t):void 0,p=w=>!t||!n?w:[...w].sort((v,k)=>He(t,n,v.id,l)-He(t,n,k.id,l)),u=p(d),m=p(c);if(s){const w=[];return o&&w.push(o),w.push(...u),w.push(...m),w}if(u.length>0)return u[0];if(m.length>0)return m[0];const h=e.toLowerCase();let f=a.find(w=>w.id.toLowerCase().includes(h));const g=/^(.*)_([a-zA-Z0-9]{4})$/;let N=null;if(!f){const w=g.exec(e);if(w){const v=w[1];N=v;const k=a.filter(M=>M.id.toLowerCase().startsWith(`${v.toLowerCase()}_`));k.length===1&&(f=k[0])}}if(f)return f;const I=r((N??e).replace(/_/g," ")),b=a.find(w=>r(w.placeName)===I);if(b)return b;const S=a.find(w=>{var v;return(v=w.data.aliases)==null?void 0:v.some(k=>r(k)===I)});return S||o},G=(e,a,t=!1,n=!1)=>{if(!Array.isArray(e)||e.length===0)return t?[]:null;const[s,o]=e,r=[],i=typeof o=="string"?o:void 0,d=(c,l)=>{const p=te(c),u=te(l);return n?p.toLowerCase()===u.toLowerCase():p===u};if(s){const c=a.find(l=>l.id===s);if(c){if(i&&!d(c.name,i)&&console.warn(`findItemByIdentifier: Provided name "${i}" does not match item name "${c.name}" for id "${s}".`),!t)return c;r.push(c)}}if((!s||t)&&i){const c=a.filter(l=>d(l.name,i)&&(!s||l.id!==s));if(t)r.push(...c);else if(c.length>0)return c[0]}if(!t&&n&&i){const c=te(i).toLowerCase(),l=a.find(p=>te(p.name).toLowerCase()===c);if(l)return l}return t?r:null},be=e=>z(`node_${e}`),mt=e=>z(`npc_${e}`),Hn=e=>{const a=te(e);return z(`item_${a}`)},Gn=[{name:"Classic Dungeon Delve",systemInstructionModifier:"The setting is a dark, treacherous dungeon filled with traps, monsters, and ancient secrets. Focus on exploration, combat, and puzzle-solving. Items found are typically medieval high-magic fantasy (swords, potions, scrolls).",initialMainQuest:"Reach the heart of the Shadowfell Dungeon and destroy the evil that lurks within.",initialCurrentObjective:"Find a way out of your starting cell.",initialSceneDescriptionSeed:"You awaken on a cold, stone floor, the air thick with the smell of mildew. A faint light glows from under a heavy door. Heavy footsteps and a gruff voice echo from a corridor outside your cell.",initialItems:"a rusty shiv, rags, wooden cup with water, a bucket",playerJournalStyle:"handwritten"},{name:"Mythic Greek Hero's Journey",systemInstructionModifier:"Embark on an epic quest in the age of Greek mythology. Encounter gods, monsters, and legendary heroes. Focus on heroic deeds, divine intervention (or curses), and fulfilling prophecies.",initialMainQuest:"Retrieve the Golden Fleece from the serpent-guarded grove in Colchis.",initialCurrentObjective:"Seek guidance from the Oracle at Delphi.",initialSceneDescriptionSeed:"The sun beats down on the dusty agora of your home polis. A desperate plea from King Pelias has reached your ears – a quest of legendary proportions awaits, one that promises glory or a swift death.",initialItems:"a simple bronze xiphos (short sword), a worn traveler's cloak, and a waterskin half-full of water.",playerJournalStyle:"handwritten"},{name:"Samurai's Path of Honor",systemInstructionModifier:"Feudal Japan, a land of cherry blossoms, warring clans, and the strict code of Bushido. You are a ronin, a masterless samurai. Focus on katana duels, protecting the innocent, seeking redemption or a worthy master, and navigating intricate social codes.",initialMainQuest:"Avenge your fallen master and restore honor to your clan's name.",initialCurrentObjective:"Travel to the village of Kurosawa, rumored to be troubled by bandits.",initialSceneDescriptionSeed:"The wind whispers through the tall grass, carrying the scent of pine and distant woodsmoke. Your hand rests on the hilt of your katana, a familiar comfort. Your master's dying words echo in your mind, a solemn vow of vengeance against the treacherous Lord Ishikawa. The road ahead is long and uncertain.",initialItems:"your master's Katana, a Wakizashi, a travelling cloak, and a few onigiri (rice balls).",playerJournalStyle:"handwritten"},{name:"Viking Jarl's Saga",systemInstructionModifier:"The icy fjords of Scandinavia, age of Vikings. You are an aspiring Jarl, or a loyal warrior in their longship. Focus on raids, exploration, Norse mythology, appeasing the gods, and building your legend to reach Valhalla.",initialMainQuest:"Lead a great raid on the rich monasteries of Lindisfarne and establish your name as a fearsome Jarl.",initialCurrentObjective:"Secure enough provisions and warriors for your longship, 'The Sea Wolf', for the voyage.",initialSceneDescriptionSeed:"The longhouse is filled with the boisterous shouts of your warriors, the scent of mead and roasting meat. Winter is loosening its grip, and the call of the sea, of adventure and plunder, is strong. The Seer has spoken of rich lands across the western waves.",initialItems:"a sturdy battle axe, a round wooden shield, a drinking horn, and a pouch of dried meat.",playerJournalStyle:"handwritten"},{name:"Fairy Tale Kingdom's Hero",systemInstructionModifier:"An enchanted kingdom filled with talking animals, mischievous sprites, wicked witches, and noble (or not-so-noble) royalty. You are destined for a grand adventure. Focus on fulfilling quests, breaking curses, outsmarting magical creatures, and navigating the whimsical logic of fairy tales.",initialMainQuest:"Rescue the kidnapped Princess from the clutches of the Shadow Sorcerer.",initialCurrentObjective:"Seek the wisdom of the Old Hermit of Whispering Woods.",initialSceneDescriptionSeed:"The Royal Proclamation is nailed to every tree in the village: Princess Iris has been spirited away by the dreaded Shadow Sorcerer! You, a humble villager with a surprisingly brave heart (and perhaps a talking squirrel on your shoulder), feel an undeniable pull to undertake this perilous quest.",initialItems:"a sturdy walking stick, a map to the Whispering Woods, and a single iridescent acorn.",playerJournalStyle:"handwritten"},{name:"Magical School Mystery",systemInstructionModifier:"You are a new student at the prestigious Eldoria Academy for Young Mages. Amidst learning spells and potions, a dark secret or conspiracy is brewing. Focus on mastering magic, uncovering clues, navigating school rivalries, and dealing with magical mishaps.",initialMainQuest:"Uncover the conspiracy threatening Eldoria Academy and save it from a hidden enemy.",initialCurrentObjective:"Investigate the forbidden section of the library for clues about a missing student.",initialSceneDescriptionSeed:"The towering spires of Eldoria Academy pierce the clouds. Your first week has been a whirlwind of enchanted staircases, talking portraits, and surprisingly difficult transfiguration lessons. But a fellow first-year has vanished, and the professors seem to be hiding something. A cryptic note points you towards the forbidden archives.",initialItems:"a beginner's spellbook (mostly empty), a simple wooden wand, your school uniform, and a pouch of basic potion ingredients (dried leaves and a curious blue powder).",playerJournalStyle:"handwritten"},{name:"Lost World Expedition",systemInstructionModifier:"Journey into an uncharted jungle or hidden plateau where dinosaurs and prehistoric creatures still roam. Focus on survival, discovery, and navigating a perilous primeval landscape. The setting revolves around ancient ruins, lost artifacts, tribal encounters, and prehistoric beasts.",initialMainQuest:"Locate the legendary Sunstone Temple said to be hidden deep within the Lost Valley.",initialCurrentObjective:"Find a safe place to make camp for the night and secure a fresh water source.",initialSceneDescriptionSeed:"The oppressive humidity of the jungle presses in as your expedition machetes through thick, unfamiliar foliage. Exotic bird calls echo, and the ground trembles with the distant roar of something enormous.",initialItems:"a heavy machete, a durable compass, a pith helmet, an empty canteen, and a journal to record discoveries.",playerJournalStyle:"handwritten"},{name:"Prehistoric Tribe's Survival",systemInstructionModifier:"A harsh, primeval world. Your small tribe struggles against wild beasts, hostile elements, and rival tribes. The winter begins. Focus on hunting, gathering, crafting primitive tools, protecting your kin, and appeasing the spirits of nature.",initialMainQuest:"Lead your tribe to the legendary 'Sunken Valley,' a place of warmth and plenty.",initialCurrentObjective:"Hunt a woolly mammoth to provide food and hides for the coming winter.",initialSceneDescriptionSeed:"The biting wind howls across the frozen tundra. Your breath mists in the frigid air. The tribe's elders look to you, their young hunter, with a mixture of hope and fear. The great mammoths have been sighted nearby – a dangerous hunt, but vital for survival.",initialItems:"a sharpened stone-tipped spear, a bone talisman, a crudely fashioned animal hide cloak, and a flint for fire-starting.",playerJournalStyle:"handwritten"}],Wn=[{name:"Cyberpunk Heist",systemInstructionModifier:"The setting is a neon-drenched, futuristic metropolis controlled by mega-corporations. Focus on stealth, hacking, high-tech gadgets, and moral ambiguity. Expect cybernetics, virtual spaces, data chips, and corporate espionage.",initialMainQuest:"Infiltrate OmniCorp's sky-tower and steal the 'NovaCore' AI prototype.",initialCurrentObjective:"Bypass the initial security checkpoint in the OmniCorp lobby.",initialSceneDescriptionSeed:"Your optical implants flicker online. Rain streaks down the grimy plasteel window of your cramped datapad-littered apartment in the Neo-Kyoto sector. Your encrypted comm-link chimes; your fixer says it's time for the OmniCorp job.",initialItems:"a basic datajack, a commlink, a worn leather trench coat, and a credstick with minimal balance.",playerJournalStyle:"digital"},{name:"Deep Space Anomaly",systemInstructionModifier:"You are part of a crew on a long-range exploration vessel that encounters a bizarre, reality-bending anomaly or alien structure. Focus on scientific investigation, crew dynamics, existential dread, and the unknown horrors of deep space.",initialMainQuest:"Understand the nature of the 'Voidstar' anomaly and ensure the survival of your ship and crew.",initialCurrentObjective:"Pilot a shuttle to get closer to the anomaly for sensor readings.",initialSceneDescriptionSeed:"Red alert klaxons blare, jolting you from hypersleep. The ship's AI announces an unscheduled exit due to an unidentified mass detected directly ahead. On the main viewscreen, a swirling vortex of impossible colors defies stellar physics.",initialItems:"a standard crew jumpsuit, standard issue magnetic boots, a multi-tool, and an emergency oxygen mask.",playerJournalStyle:"digital"},{name:"Galactic Rebel Uprising",systemInstructionModifier:"A tyrannical Galactic Imperium rules the stars with an iron fist. You are a member of the fledgling Rebel Alliance. Focus on guerrilla warfare, starship dogfights, espionage, and liberating oppressed worlds.",initialMainQuest:"Deliver the stolen Imperium battle plans to the Rebel High Command.",initialCurrentObjective:"Escape the Imperial blockade around the mining colony of Cygnus IV.",initialSceneDescriptionSeed:"Alarms scream through the corridors of the hidden Rebel outpost. Imperial Star Destroyers have just warped into orbit over Cygnus IV. You clutch the datachip containing vital battle plans. Your only hope is a beat-up freighter in docking bay 7.",initialItems:"The stolen Imperium battle plans, a BlasTech DL-18 blaster pistol, a coded commlink, and a pair of macrobinoculars.",playerJournalStyle:"digital"},{name:"Robot Uprising: Human Resistance",systemInstructionModifier:"The AI known as 'Legion' has become self-aware and turned humanity's robotic servants against them. Cities are warzones. You are a survivor in the human resistance. Focus on scavenging for parts, fighting rogue machines, rescuing survivors, and finding a way to defeat Legion.",initialMainQuest:"Reach the rumored human stronghold 'Haven' and deliver intel on Legion's weaknesses.",initialCurrentObjective:"Scavenge a working power cell from a derelict factory to repair your group's communication array.",initialSceneDescriptionSeed:"The metallic clang of a Hunter-Killer patrol echoes down the ruined street. You huddle in the shell of a bombed-out building, the acrid smell of burnt circuits filling your nostrils. Your resistance cell needs a new power cell, and the old factory nearby is crawling with Legion's drones.",initialItems:"a length of lead pipe, a toolkit, an old duster, a laser rifle, an EMP grenade, a half-empty canteen, and a flashlight.",playerJournalStyle:"digital"},{name:"Time Traveler's Paradox",systemInstructionModifier:"You possess a faulty experimental time-travel device. Each jump is unpredictable and risks creating dangerous paradoxes. Focus on navigating different historical eras, repairing your device, and avoiding (or fixing) alterations to the timeline.",initialMainQuest:"Stabilize your time-travel device and return to your own time period without irrevocably damaging history.",initialCurrentObjective:"Find a 19th-century physicist who might understand the temporal displacement technology.",initialSceneDescriptionSeed:"A bone-jarring lurch and a flash of disorienting colors, and you find yourself stumbling out of your shimmering temporal field onto cobblestone streets. Horse-drawn carriages clatter by. Your chronometer display is a mess of static, but the gas lamps and clothing suggest late 19th century London. Your device is sparking ominously.",initialItems:"historical disguise kit, your malfunctioning Chronometer, a pocket watch stuck on 3:07, and a mostly empty notebook.",playerJournalStyle:"typed"},{name:"Kaiju Defense Force",systemInstructionModifier:"Giant monsters (Kaiju) are emerging from the depths of the Pacific, threatening to destroy coastal cities. You are a pilot of a giant mech or a member of an elite Kaiju defense unit. Focus on strategic combat against colossal beasts, protecting civilian populations, and researching Kaiju weaknesses.",initialMainQuest:"Defeat the Alpha Kaiju 'Gorgonus' and discover the source of the Kaiju emergences.",initialCurrentObjective:"Pilot your mech 'Titan Sentinel' to intercept a Category 3 Kaiju attacking Neo-Tokyo harbor.",initialSceneDescriptionSeed:"Klaxons blare across the underground hangar. 'Category 3 Kaiju, codename 'Crustaceor,' making landfall at Neo-Tokyo Bay!' Your comm crackles. Strapping into your massive Jaeger, 'Titan Sentinel,' you feel the familiar thrum of its nuclear core. Another city to save, another monster to fight.",initialItems:"'Titan Sentinel', a standard KDF pilot suit, a datapad with Kaiju alert protocols, and an energy bar.",playerJournalStyle:"digital"},{name:"Steampunk Sky-Pirate Saga",systemInstructionModifier:"A world of floating islands, magnificent airships, and clockwork marvels. You are a daring sky-pirate (or someone caught up in their world). Focus on aerial combat, daring raids, political intrigue between sky-kingdoms, and wondrous inventions.",initialMainQuest:"Become the most notorious sky-captain by plundering the Imperial Treasury airship 'The Sovereign'.",initialCurrentObjective:"Secure enough Lumin-ether crystals to fuel your airship for the journey to the Imperial trade routes.",initialSceneDescriptionSeed:"The familiar scent of oil and ozone fills your nostrils in the cramped cockpit of your airship, 'The Comet'. Below, the cloud sea churns, hiding both treasure and peril. Your first mate reports a rival pirate vessel on an intercept course.",initialItems:"'The Comet' airship, a trusty cutlass, a pair of brass goggles, a coil of rope, and a partial sky-chart.",playerJournalStyle:"typed"}],Kn=[{name:"Eldritch Mystery Investigation",systemInstructionModifier:"The setting is a Lovecraftian fog-shrouded, 1920s coastal town plagued by unsettling occurrences and whispers of cosmic horrors. Focus on investigation, sanity checks, and deciphering cryptic clues. Items might include strange artifacts, forbidden tomes, and period-appropriate tools.",initialMainQuest:"Uncover the dark secret behind the disappearances in Innsport and stop the impending ritual.",initialCurrentObjective:"Investigate the old, decrepit lighthouse for clues about the strange lights seen at sea.",initialSceneDescriptionSeed:"A chilling gust of salty wind whips your trench coat as you step off the sputtering ferry onto Innsport's decaying docks. The town is eerily quiet, its gabled windows like vacant eyes staring out at the turbulent grey sea. A sense of profound unease settles upon you.",initialItems:"a detective's notepad and pencil, a box of matches, and a train ticket to Innsport.",playerJournalStyle:"typed"},{name:"Haunted Victorian Mansion",systemInstructionModifier:"A sprawling, decaying Victorian mansion filled with sorrowful spirits, dark family secrets, and psychological horror. Focus on puzzle-solving, uncovering the mansion's history, and surviving spectral encounters.",initialMainQuest:"Unravel the tragedy of Blackwood Manor and bring peace to its restless spirit.",initialCurrentObjective:"Find a way into the locked East Wing where the disturbances are strongest.",initialSceneDescriptionSeed:"Thunder rumbles as you push open the creaking, ornate gates of Blackwood Manor. The house looms before you, a gothic silhouette against a stormy sky. An unnerving chill crawls up your spine despite the humid night air.",initialItems:"an oil lantern, a heavy iron key of unknown purpose, and a locket containing a faded photograph.",playerJournalStyle:"handwritten"},{name:"Zombie Apocalypse Survivor",systemInstructionModifier:"The dead walk, and civilization has crumbled. You are a survivor, constantly on the move. Focus on scavenging for scarce resources (food, water, ammo), avoiding or fighting hordes of zombies, finding safe havens, and making difficult moral choices.",initialMainQuest:"Reach the rumored military-protected safe zone on Catalina Island.",initialCurrentObjective:"Find antibiotics in a deserted pharmacy for an infected member of your small group.",initialSceneDescriptionSeed:"The silence of the abandoned highway is broken only by the distant moans of the undead and the crunch of your boots on broken glass. Your friend, Sarah, is feverish; a walker got too close. The old pharmacy in the next town is your only hope for antibiotics, but it's likely overrun.",initialItems:"a sturdy baseball bat, a tattered backpack, a bottle of water, first-aid kit (low supplies), and a can of beans.",playerJournalStyle:"handwritten"},{name:"Noir Detective's Case",systemInstructionModifier:"It's the 1940s Detroit, rain-slicked streets, a city full of shadows and secrets. You're a private investigator. Focus on gathering clues, interrogating suspects, navigating moral ambiguity, and solving a complex mystery. Expect femme fatales, smoky bars, and hidden conspiracies.",initialMainQuest:"Solve the murder of socialite Eleanor Vance and expose the corruption behind it.",initialCurrentObjective:"Visit the crime scene at the Azure Club for initial clues.",initialSceneDescriptionSeed:"The city coughs up another rainy night. Your office, a cramped space above a noisy diner, smells of stale coffee and desperation. A dame with eyes like ice and a story full of holes just left, leaving behind a retainer and the name of her murdered sister: Eleanor Vance. The Azure Club is where she was last seen.",initialItems:"a worn fedora, a nearly empty pack of cigarettes, a cheap .38 revolver (6 bullets left), and a dog-eared notepad.",playerJournalStyle:"typed"}],zn=[{name:"Post-Apocalyptic Survival",systemInstructionModifier:"The world is a desolate wasteland after a interdimentional cataclysm. Resources are scarce, dangers are everywhere (mutants, raiders, anomalies, environmental hazards). Focus on scavenging, research, crafting, and making tough choices for survival.",initialMainQuest:"Find the rumored sanctuary 'Oasis' in the barren wastes.",initialCurrentObjective:"Scavenge the nearby ruined gas station for supplies.",initialSceneDescriptionSeed:"Dust stings your eyes as you crest a dune of ash and shattered concrete. The skeletal remains of a city claw at the bruised sky. Your throat is parched, and your Geiger counter clicks ominously.",initialItems:"a rusty pipe wrench, a dust mask, a bottle of water, first-aid kit, toolkit, a Geiger counter.",playerJournalStyle:"handwritten"},{name:"Wild West Outlaw",systemInstructionModifier:"The rugged, lawless frontier of the American Wild West. You're an outlaw, a bounty hunter, or a homesteader trying to survive. Focus on gunfights, train robberies, saloon brawls, and the harsh beauty of the frontier.",initialMainQuest:"Evade Marshal Blackwood and reach the 'Broken Spoke' Saloon in Redemption Gulch, a known outlaw haven.",initialCurrentObjective:"Find a fresh horse after yours went lame.",initialSceneDescriptionSeed:"The relentless sun hammers your wide-brimmed hat as you ride through the arid canyon. Dust devils dance in the distance. Your water canteen is perilously low, and the poster bearing your face is probably plastered in every town by now.",initialItems:"a Colt Peacemaker (with 5 bullets), a hunting knife, a worn bandana, and a wanted poster featuring your own face.",playerJournalStyle:"handwritten"},{name:"Age of Sail: Pirate's Fortune",systemInstructionModifier:"The turquoise waters of the Caribbean, 17th century. You are a daring pirate captain, or a new recruit on a pirate ship. Focus on ship battles, treasure hunting, evading naval patrols, and living by the pirate code.",initialMainQuest:"Find the legendary treasure of Captain One-Eye, hidden on Isla Perdida.",initialCurrentObjective:"Capture a merchant ship to resupply your vessel, 'The Sea Serpent'.",initialSceneDescriptionSeed:"The sun beats down on the deck of 'The Sea Serpent' as it slices through the waves. Your lookout spots a fat merchantman on the horizon, low in the water and ripe for the picking. The crew grins, eager for plunder. 'Hoist the colors!' you command.",initialItems:"'The Sea Serpent', a tricorne, a cutlass, a flintlock pistol, a spyglass, and a single gold doubloon.",playerJournalStyle:"handwritten"},{name:"Mad Max Road Warrior",systemInstructionModifier:"The world ended in fire and thirst. Now, desert gangs rule the highways, and gasoline is life. You are a lone road warrior in a suped-up vehicle. Focus on vehicular combat, scavenging for fuel and water, forming uneasy alliances, and surviving the brutal wasteland.",initialMainQuest:"Reach 'Gastown', the only reliable source of water and fuel, and trade for vital supplies.",initialCurrentObjective:"Escape the Buzzard gang and find a water source.",initialSceneDescriptionSeed:"The twin suns bake the cracked earth. Your V8 engine roars defiance at the silence of the wasteland. In the distance, a plume of dust signals the approach of the Buzzard gang, infamous for their cruelty and their rigged death-races. You need that water, and they're blocking the only known path.",initialItems:"your trusty vehicle 'The Interceptor', a sawed-off shotgun, jury-rigged armor, a tire iron, thick leather jacket, almost empty steel jerry can of fuel, empty plastic jerrycan for water.",playerJournalStyle:"handwritten"},{name:"Superhero Genesis",systemInstructionModifier:"A freak accident has granted you incredible powers. You're still learning to control them. Focus on discovering the extent of your abilities, deciding whether to be a hero or something else, and facing your first true nemesis.",initialMainQuest:"Master your powers and stop the supervillain 'Doctor Mayhem' from enacting his destructive plan.",initialCurrentObjective:"Stop a bank robbery being committed by thugs with unusually advanced weaponry (possibly supplied by Doctor Mayhem).",initialSceneDescriptionSeed:"Sparks involuntarily crackle from your fingertips again. Ever since the meteor shower, strange things have been happening. Last night, you accidentally flew. Today, you hear on the police scanner about a bank robbery downtown by criminals using energy weapons you've never seen before. Maybe it's time to see what you can really do.",initialItems:"a simple cloth mask, a makeshift costume, news clippings about strange events (caused by you or others), and notes on your nascent superpowers.",playerJournalStyle:"typed"}],Jn=[{name:"Test-Theme for many locations",systemInstructionModifier:"The world of modern fantasy in the United Kingdom. It is intended for testing locations. Create many Map Nodes of all types and statuses, and connected with edges.",initialMainQuest:"Move from place to place until the test is complete.",initialCurrentObjective:"Move somewhere",initialSceneDescriptionSeed:"You are in London, a bustling city filled with magic and mystery. The streets are alive with the sounds of people, vehicles, and the occasional magical creature. Your task is to explore various locations, interact with NPCs, and uncover secrets.",initialItems:"a magical compass that points to the nearest interesting location, a notebook for recording your findings, and a charm that protects you from minor magical mishaps.",playerJournalStyle:"typed"},{name:"Sci-Fi Future Test Theme for junk items",systemInstructionModifier:"The setting is a futuristic city filled with advanced technology and junk. It is intended for testing junk items. Create many Map Nodes of all types and statuses, and connected with edges.",initialMainQuest:"Collect junk items from various locations in the futuristic city.",initialCurrentObjective:"Find a junkyard to start collecting items.",initialSceneDescriptionSeed:"You find yourself in a sprawling futuristic city, where towering skyscrapers touch the clouds and neon lights flicker in the night. The streets are filled with people, robots, and flying vehicles. Your task is to explore the city, gather junk items, and discover their potential uses.",initialItems:"Pickup truck, a malfunctioning robot, a pile of circuit boards, and a toolset.",playerJournalStyle:"digital"},{name:"Secluded Library of Forgotten Pages",systemInstructionModifier:"The setting is a vast, labyrinthine library hidden from the world, filled with endless shelves, scattered single-page notes, cryptic manuscripts, annotated scrolls, and mysterious tomes. The air is thick with the scent of old paper and ink. Focus on discovery, deciphering clues, and piecing together fragmented knowledge from countless written materials. Expect to find loose pages tucked into books, marginalia, coded messages, and forgotten field journals. Strange phenomena may occur when certain texts are read aloud.",initialMainQuest:"Uncover the secret purpose of the Secluded Library and the identity of its original curator.",initialCurrentObjective:"Examine the scattered notes and books in the reading alcove for your first clue.",initialSceneDescriptionSeed:"You stand in a candlelit alcove surrounded by towering shelves. Books and single-page notes are strewn across tables and the floor. A faint rustling suggests the presence of something—or someone—moving among the stacks. The only exit is blocked by a pile of ancient tomes.",initialItems:"a cryptic handwritten note ('The answer is in the margins.'), a battered field journal with pressed flowers, a slim reading tablet flickering with half-erased texts, and a heavy leather-bound book titled 'The Index of Lost Beginnings.', a crude map of the Library, and a picture of a cat.",playerJournalStyle:"printed"}],fe={"Fantasy & Myth":Gn,"Science Fiction & Future":Wn,"Horror & Dark Mystery":Kn,"Action & Wasteland":zn,Testing:Jn},Lo=Object.keys(fe),Uo=e=>{if(e.length===0)return[];let a=[];return e.forEach(t=>{a=a.concat(fe[t])}),a},gt=(e,a)=>{const t={...e};return a.type!==void 0&&(t.type=a.type),a.description!==void 0&&(t.description=a.description),a.activeDescription!==void 0&&(t.activeDescription=a.activeDescription??void 0),a.isActive!==void 0&&(t.isActive=a.isActive),a.tags!==void 0&&(t.tags=a.tags),a.chapters!==void 0&&(t.chapters=a.chapters),a.knownUses!==void 0&&(t.knownUses=a.knownUses),a.holderId!==void 0&&a.holderId.trim()!==""&&(t.holderId=a.holderId),t},qn=(e,a)=>{let t=[...e];switch(a.action){case"create":{const n=a.item,s=t.findIndex(o=>o.id===n.id);s!==-1?t[s]=n:t.push(n);break}case"destroy":{const n=a.item,s=G([n.id,n.name],t,!1,!0),o=Array.isArray(s)?null:s;o&&(t=t.filter(r=>r.id!==o.id));break}case"move":{const n=a.item,s=G([n.id,n.name],t,!1,!0),o=Array.isArray(s)?null:s;if(o){const r=t.findIndex(i=>i.id===o.id);t[r]={...o,holderId:n.newHolderId}}break}case"change":{const n=a.item,s=G([n.id,n.name],t,!1,!0),o=Array.isArray(s)?null:s;if(o){const r=t.findIndex(l=>l.id===o.id),i=n.newName===void 0&&n.name!==void 0&&n.name!==o.name,d=n.newName??(i?n.name:void 0),c=gt(o,n);d&&d.trim()!==""&&d!==o.name&&(c.name=d),t[r]=c}break}case"addDetails":{const n=a.item,s=G([n.id,n.name],t,!1,!0),o=Array.isArray(s)?null:s;if(o){const r=t.findIndex(d=>d.id===o.id),i={...o};if(n.chapters&&n.chapters.length>0&&(i.chapters=[...o.chapters??[],...n.chapters]),n.tags&&n.tags.length>0){const d=new Set(o.tags??[]);for(const c of n.tags)d.add(c);i.tags=Array.from(d)}if(n.knownUses&&n.knownUses.length>0){const d=[...o.knownUses??[]];for(const c of n.knownUses){const l=d.findIndex(p=>p.actionName===c.actionName);l!==-1?d[l]=c:d.push(c)}i.knownUses=d}i.lastInspectTurn=void 0,t[r]=i}break}}return t},Oo=(e,a)=>{const t=[];for(const n of e){let s=null;if(n.action==="create"){const o=n.item;o.id||(o.id=Hn(o.name)),s={type:"acquire",acquiredItem:{...o,activeDescription:o.activeDescription??void 0,isActive:o.isActive??!1,knownUses:o.knownUses??[],tags:o.tags??[]}}}else if(n.action==="destroy"){const o=n.item,r=G([o.id,o.name],a,!1,!0),i=Array.isArray(r)?null:r;i&&(s={type:"loss",lostItem:{...i}})}else if(n.action==="move"){const o=n.item,r=G([o.id,o.name],a,!1,!0),i=Array.isArray(r)?null:r;if(i){const d={...i},c={...i,holderId:o.newHolderId};s={type:"update",oldItem:d,newItem:c}}}else if(n.action==="change"){const o=n.item,r=G([o.id,o.name],a,!1,!0),i=Array.isArray(r)?null:r;if(i){const d={...i},c=o.newName===void 0&&o.name!==void 0&&o.name!==i.name,l=o.newName??(c?o.name:void 0),p=gt(i,o);l&&l.trim()!==""&&l!==i.name&&(p.name=l),s={type:"update",oldItem:d,newItem:p}}}else{const o=n.item,r=G([o.id,o.name],a,!1,!0),i=Array.isArray(r)?null:r;if(i){const d={...i};let c={...i};if(o.chapters&&o.chapters.length>0&&(c={...c,chapters:[...i.chapters??[],...o.chapters]}),o.tags&&o.tags.length>0){const l=new Set(i.tags??[]);for(const p of o.tags)l.add(p);c.tags=Array.from(l)}if(o.knownUses&&o.knownUses.length>0){const l=[...i.knownUses??[]];for(const p of o.knownUses){const u=l.findIndex(m=>m.actionName===p.actionName);u!==-1?l[u]=p:l.push(p)}c.knownUses=l}s={type:"update",oldItem:d,newItem:c}}}s&&t.push(s)}return t},jo=(e,a)=>{let t=[...a];for(const n of e)t=qn(t,n);return t},Qn=(e,a,t,n)=>{const s=[];return e.forEach(o=>{const r={...o,id:mt(o.name),themeName:t,aliases:o.aliases??[],presenceStatus:o.presenceStatus??"unknown",lastKnownLocation:o.lastKnownLocation??null,preciseLocation:o.preciseLocation??null,dialogueSummaries:[]};s.push({type:"add",npcName:r.name,addedNPC:r})}),a.forEach(o=>{const r=n.find(i=>i.name===o.name&&i.themeName===t);if(r){const i={...r,dialogueSummaries:r.dialogueSummaries??[]};o.newDescription!==void 0&&(i.description=o.newDescription),o.newAliases!==void 0&&(i.aliases=o.newAliases),o.addAlias&&(i.aliases=Array.from(new Set([...i.aliases??[],o.addAlias]))),o.newPresenceStatus!==void 0&&(i.presenceStatus=o.newPresenceStatus),o.newLastKnownLocation!==void 0&&(i.lastKnownLocation=o.newLastKnownLocation),o.newPreciseLocation!==void 0&&(i.preciseLocation=o.newPreciseLocation),i.presenceStatus==="distant"||i.presenceStatus==="unknown"?i.preciseLocation=null:i.preciseLocation??(i.preciseLocation=i.presenceStatus==="companion"?"with you":"nearby in the scene"),s.push({type:"update",npcName:o.name,oldNPC:{...r},newNPC:i})}}),s},Xn=(e,a,t,n)=>{const s=[...n];return e.forEach(o=>{if(!s.some(r=>r.name===o.name&&r.themeName===t)){const r={...o,id:mt(o.name),themeName:t,aliases:o.aliases??[],presenceStatus:o.presenceStatus??"unknown",lastKnownLocation:o.lastKnownLocation??null,preciseLocation:o.preciseLocation??null,dialogueSummaries:[]};(r.presenceStatus==="distant"||r.presenceStatus==="unknown")&&(r.preciseLocation=null),s.push(r)}}),a.forEach(o=>{const r=s.findIndex(i=>i.name===o.name&&i.themeName===t);if(r!==-1){const i={...s[r],dialogueSummaries:s[r].dialogueSummaries??[]};o.newDescription!==void 0&&(i.description=o.newDescription),o.newAliases!==void 0&&(i.aliases=o.newAliases),o.addAlias&&(i.aliases=Array.from(new Set([...i.aliases??[],o.addAlias]))),o.newPresenceStatus!==void 0&&(i.presenceStatus=o.newPresenceStatus),o.newLastKnownLocation!==void 0&&(i.lastKnownLocation=o.newLastKnownLocation),o.newPreciseLocation!==void 0&&(i.preciseLocation=o.newPreciseLocation),i.presenceStatus==="distant"||i.presenceStatus==="unknown"?i.preciseLocation=null:i.preciseLocation??(i.preciseLocation=i.presenceStatus==="companion"?"with you":"nearby in the scene"),s[r]=i}}),s},Vo=(e,a,t)=>{const n=[...e,a];return n.length>t?n.slice(n.length-t):n},Fo=(e,a)=>{const t=`You left your ${a}`;for(let n=e.length-1;n>=0;n-=1)if(e[n].startsWith(t))return[...e.slice(0,n),...e.slice(n+1)];return e},xo=(e,a)=>{if(e.length===0)return null;const t=a&&e.length>1?e.filter(o=>o.name!==a):e,n=t.length>0?t:e,s=Math.floor(Math.random()*n.length);return n[s].name},Yo=(e,a,t,n)=>{let s=e.themeFacts.length>0?Math.max(...e.themeFacts.map(o=>o.id))+1:1;for(const o of a)switch(o.action){case"add":if(o.fact&&o.fact.text&&n){const r={id:s++,text:o.fact.text,entities:o.fact.entities??[],themeName:n,createdTurn:o.fact.createdTurn??t,tier:o.fact.tier??1};e.themeFacts.push(r)}break;case"change":{const r=e.themeFacts.findIndex(i=>i.id===o.id);if(r>=0&&o.fact){const i={...e.themeFacts[r],...o.fact,themeName:e.themeFacts[r].themeName};e.themeFacts[r]=i}break}case"delete":{const r=e.themeFacts.findIndex(i=>i.id===o.id);r>=0&&e.themeFacts.splice(r,1);break}}},Zn=(e,a)=>{e.length===0||Object.keys(a).length===0||e.forEach(t=>{t.entities=t.entities.map(n=>a[n]??n)})},ea=(e,a)=>{const t=document.querySelector(".highlight-tooltip");t&&t.remove();const n=document.createElement("div");n.className="highlight-tooltip",n.textContent=e,document.body.appendChild(n);const s=8,o=a.left+a.width/2-n.offsetWidth/2+window.scrollX,r=a.bottom+s+window.scrollY;n.style.left=`${String(Math.max(4,Math.min(o,window.innerWidth-n.offsetWidth-4)))}px`,n.style.top=`${String(r)}px`;const i=()=>{n.remove(),document.removeEventListener("click",d)},d=c=>{n.contains(c.target)||i()};setTimeout(()=>{document.addEventListener("click",d)},0)};let de=null;const ta=e=>{const a=JSON.stringify(e.map(r=>({name:r.name,aliases:r.aliases??[],type:r.type})).sort((r,i)=>r.name.localeCompare(i.name)));if(de&&de.key===a)return de.value;const t=new Map;e.forEach(r=>{const i=(c,l)=>{if(c&&c.trim()!==""){const p=c.toLowerCase();t.has(p)||t.set(p,{term:l,entityData:r})}};i(r.name,r.name),(r.aliases??[]).forEach(c=>{i(c,c)});const d=r.name.toLowerCase();if(d.startsWith("the ")&&r.name.length>4){const c=r.name.substring(4);i(c,c)}else if(d.startsWith("a ")&&r.name.length>2){const c=r.name.substring(2);i(c,c)}});const n=Array.from(t.values());if(n.sort((r,i)=>i.term.length-r.term.length),n.length===0)return null;const s=n.map(r=>r.term.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")).filter(r=>r.length>0).join("|");if(!s)return null;const o={regex:new RegExp(`\\b(${s})\\b`,"gi"),lookup:new Map(n.map(r=>[r.term.toLowerCase(),r]))};return de={key:a,value:o},o},na=e=>{switch(e){case"item":return"font-semibold text-amber-400 hover:text-amber-300 cursor-pointer";case"place":return"font-semibold text-violet-400 hover:text-violet-300 cursor-pointer";case"npc":return"font-semibold text-green-300 hover:text-green-200 cursor-pointer";default:return""}},Bo=(e,a,t=!1)=>{if(!e)return[e??""];const n=ta(a);if(!n)return[e];const{regex:s,lookup:o}=n,r=[];let i=0,d;for(;(d=s.exec(e))!==null;){const c=d[0],l=o.get(c.toLowerCase());if(d.index>i&&r.push(e.substring(i,d.index)),l){const p=u=>{if(window.matchMedia("(hover: none)").matches){const m=u.currentTarget.getBoundingClientRect(),h=u.currentTarget.getAttribute("title")??"";ea(h,m)}};r.push(L.jsx("span",{className:na(l.entityData.type),onClick:t?p:void 0,title:l.entityData.description,children:c},`${l.entityData.name}-${l.term}-${String(d.index)}`))}else r.push(c);i=s.lastIndex}return i<e.length&&r.push(e.substring(i)),r.length>0?r:[e]},Ho=(e,a,t,n)=>{const s=e.map(i=>({name:i.name,type:"item",description:i.isActive&&i.activeDescription?i.activeDescription:i.description,item:i})),o=n?a.filter(i=>i.themeName===n).map(i=>({name:i.placeName,type:"place",description:i.data.description,aliases:i.data.aliases??[]})):[],r=n?t.filter(i=>i.themeName===n).map(i=>({name:i.name,type:"npc",description:i.description,aliases:i.aliases})):[];return[...s,...o,...r]},aa=`You are an AI assistant specializing in updating a game map based on narrative events.
Your task is to analyze the provided game context and determine what changes should be made to the map data.
You may receive a "Map Hint" string from the storyteller describing distant quest locations, their surroundings, and how to reach them. Use these hints to ensure those locations exist on the map, adding them and their nearby context nodes if absent.

Fill the JSON object with nodes and edges to add, update, or remove based on the provided context.
Assign relevant node and edge types, statuses, and descriptions.
Ensure that the hierarchy of nodes is logical and consistent, with no feature nodes as parents of other feature nodes.

${xt}
${Yt}
${Bt}

CRITICAL INSTRUCTIONS:
- All nodes MUST represent physical locations. NEVER add small items and NPCs to the map!!! Nodes represent spaces the player can occupy: regions, general locations, settlements, building exteriors or interiors, rooms, and notable landscape or architectural features. Feature-type nodes represent sub-spaces within larger spaces. NEVER create nodes that represent inventory items.
- IMPORTANT: Large multi-crew vehicles (e.g., ships, airships, spaceships, trains) can be represented as nodes if they are significant locations in the narrative. They should have a "nodeType" of "exterior" and MUST have sub-nodes for their interior spaces. When creating a node for a large vehicle, ensure it has a "description" that indicates its size and purpose, and that it contains a significant number of constituent nodes required for the large vehicle operation (e.g. main deck, engine room, captain's quarters, cargo hold, bridge, observation deck, reactor room, life support, etc.). At least one of the feature nodes must be clearly defined as a connection point to the outer world (e.g., "Docking Bay", "Hangar", "Airlock", "Gang Plank" etc.).
- When considering a new location, check existing item and NPC names (including aliases). If the name matches or closely resembles one, SKIP adding that node and omit any edges that would connect to it.
- Node Data for "nodesToAdd":
    - "description", "aliases", and "status" are ALWAYS REQUIRED in the "data" field for ALL added nodes.
    - You MUST provide "parentNodeId" of a node higher in the hierarchy for every node. Top level nodes should be assigned 'Universe' as their parentNodeId.
- Node Data for "nodesToUpdate":
    - "description" and "aliases" can be optionally provided in "newData" to update ANY node.
    - When adding a new main location via "nodesToAdd", the "placeName" MUST correspond to a location name that the Storyteller AI has indicated as significant.
    - You MUST include "parentNodeId" of a node higher in the hierarchy for every node.
- Node "placeName" (both for identifying nodes and for new names) should be unique within their theme. NEVER create duplicates of existing nodes or edges.
- NEVER add a node named "Universe" or create edges that reference a place named "Universe". That name is reserved for the root and already exists.
- Edges only allowed to connect nodes of type='feature' that have the same parent (siblings), that have the same grandparent (grandchildren), or where one feature's parent is the grandparent of the other (child-grandchild), or edges of type='shortcut'.
- Edges of type 'shortcut' are exempt from these hierarchy restrictions but still must connect feature nodes.
- When you add intermediate feature nodes to satisfy hierarchy rules, ALWAYS assign to them the same status as their parent node. Any edges created to replace a prior connection should keep that connection's status unless explicitly updated.
- If the narrative suggests that a generic feature node (e.g., "Dark Alcove") has become more specific (e.g., "Shrine of Eldras"), UPDATE the existing feature node's "placeName" (if name changed via newData.placeName) and "details" via "nodesToUpdate", rather than adding a new node.
- If any new specific places (feature nodes) within or between main locations are described, add them and specify their parent via 'parentNodeId'.
- Try to assign a definitive parent node to any orphan nodes (Parent node: N/A).
- Try to fix any illogical inconsistencies in the hierarchy, such as a feature node that has no parent, illogical child-parent relationships, or wrong level of hierarchy.
- If connections (paths, doors, etc.) are revealed or changed, update edges.
- If new details are revealed about a location (main or feature), update description and/or aliases.
- If the Player's new 'localPlace' tells that they are at a specific feature node (existing or newly added), suggest it in 'suggestedCurrentMapNodeId'.
- When renaming a node using "nodesToUpdate", omit any matching entry in "nodesToRemove" for that node.
- Feature Nodes can have any number of edges.
- CRITICALLY IMPORTANT: Delete Nodes ONLY in EXTREME CASES when the Scene unambiguously implies that they will no longer ever be relevant to the Player.
- CRITICALLY IMPORTANT: Delete edges ONLY in EXTREME CASES when the Scene description mentions an absolutely certain destruction of the path. In all  other cases, avoid deleting edges and nodes.
`,oa=(e,a,t,n,s,o,r,i,d,c)=>`## Narrative Context for Map Update:
  - Current Theme: "${s.name}";
  - System Modifier for Theme: "${s.systemInstructionModifier}";
  - Scene Description: "${e}";
  - Log Message (outcome of last action): "${a}";
  - Player's Current Location Description (localPlace): "${t}".

## Map Context:
  - All Known Main Locations: ${i};
  - Player's Previous Location was: ${o};
  - Map Hint from Storyteller: "${n}".
  - Item Names to avoid as nodes: ${d.length>0?d.map(l=>`"${l}"`).join(", "):"None"};
  - NPC Names to avoid as nodes: ${c.length>0?c.map(l=>`"${l}"`).join(", "):"None"}.

${r}
---
Based on the Narrative Context and existing map context, provide a JSON response strongly adhering to the System Instructions.

`;function sa(e,a){if(typeof e!="object"||e===null)return console.warn("Validation Error (NodeData): Data is not an object. Value:",e),!1;const t=e;if(a){if(typeof t.status!="string"||!X.includes(t.status))return console.warn("Validation Error (NodeData - Add): 'status' is mandatory and invalid. Value:",t.status,"Valid are:",X),!1}else if(t.status!==void 0&&(typeof t.status!="string"||!X.includes(t.status)))return console.warn("Validation Error (NodeData - Update): Invalid 'status'. Value:",t.status),!1;if(a){if(typeof t.description!="string"||t.description.trim()==="")return console.warn("Validation Error (NodeData - Add): 'description' is mandatory and must be a non-empty string. Value:",t.description),!1}else if(t.description!==void 0&&typeof t.description!="string")return console.warn("Validation Error (NodeData - Update): 'description' if present must be a string. Value:",t.description),!1;if(a){if(!Array.isArray(t.aliases)||!t.aliases.every(n=>typeof n=="string"))return console.warn("Validation Error (NodeData - Add): 'aliases' is mandatory and must be an array of strings (can be empty []). Value:",t.aliases),!1}else if(t.aliases!==void 0&&!(Array.isArray(t.aliases)&&t.aliases.every(n=>typeof n=="string")))return console.warn("Validation Error (NodeData - Update): 'aliases' if present must be an array of strings. Value:",t.aliases),!1;if(a){if(typeof t.nodeType!="string"||!Z.includes(t.nodeType))return console.warn("Validation Error (NodeData - Add): 'nodeType' is mandatory and invalid. Value:",t.nodeType,"Valid are:",Z),!1}else if(t.nodeType!==void 0&&(typeof t.nodeType!="string"||!Z.includes(t.nodeType)))return console.warn("Validation Error (NodeData - Update): 'nodeType' is invalid. Value:",t.nodeType),!1;if(a){if(typeof t.parentNodeId!="string"||t.parentNodeId.trim()==="")return console.warn("Validation Error (NodeData - Add): 'parentNodeId' is mandatory and must be a non-empty string. Value:",t.parentNodeId),!1}else if(t.parentNodeId!==void 0&&t.parentNodeId!==null&&(typeof t.parentNodeId!="string"||t.parentNodeId.trim()===""))return console.warn("Validation Error (NodeData - Update): 'parentNodeId' must be a non-empty string or null if present. Value:",t.parentNodeId),!1;return!0}function ia(e,a){if(typeof e!="object"||e===null)return!1;const t=e;if(a){if(typeof t.type!="string"||!W.includes(t.type))return console.warn("Validation Error (EdgeData - Add): 'type' is required and invalid. Value:",t.type,"Valid are:",W),!1;if(typeof t.status!="string"||!K.includes(t.status))return console.warn("Validation Error (EdgeData - Add): 'status' is required and invalid. Value:",t.status,"Valid are:",K),!1}else{if(t.type!==void 0&&(typeof t.type!="string"||!W.includes(t.type)))return console.warn("Validation Error (EdgeData - Update): Invalid 'type'. Value:",t.type,"Valid are:",W),!1;if(t.status!==void 0&&(typeof t.status!="string"||!K.includes(t.status)))return console.warn("Validation Error (EdgeData - Update): Invalid 'status'. Value:",t.status,"Valid are:",K),!1}return t.description!==void 0&&typeof t.description!="string"?(console.warn("Validation Error (EdgeData): Invalid 'description'. Value:",t.description),!1):t.travelTime!==void 0&&typeof t.travelTime!="string"?(console.warn("Validation Error (EdgeData): Invalid 'travelTime'. Value:",t.travelTime),!1):!0}function Ge(e,a){if(typeof e!="object"||e===null)return!1;const t=e;if(typeof t.placeName!="string"||t.placeName.trim()==="")return console.warn(`Validation Error (Node${a?"Add":"Update"}): 'placeName' is required. Value:`,t.placeName),!1;const n=a?"data":"newData",s=t[n];if(typeof s!="object"||s===null)return console.warn(`Validation Error (Node${a?"Add":"Update"}): '${n}' field is required. Value:`,s),!1;if(!sa(s,a))return console.warn(`Validation Error (Node${a?"Add":"Update"}): Invalid '${n}' for placeName "${t.placeName}". Details above.`),!1;if(a&&t.initialPosition!==void 0){const o=t.initialPosition;if(typeof o.x!="number"||typeof o.y!="number")return console.warn("Validation Error (NodeAdd): 'initialPosition' must be {x: number, y: number}. Value:",t.initialPosition),!1}return!0}function ra(e){if(typeof e!="object"||e===null)return!1;const a=e;return typeof a.nodeId!="string"||a.nodeId.trim()===""?(console.warn("Validation Error (NodeRemove): 'nodeId' is required. Value:",a.nodeId),!1):a.nodeName!==void 0&&(typeof a.nodeName!="string"||a.nodeName.trim()==="")?(console.warn("Validation Error (NodeRemove): 'nodeName' must be a non-empty string if provided. Value:",a.nodeName),!1):!0}function We(e,a){if(typeof e!="object"||e===null)return!1;const t=e;if(typeof t.sourcePlaceName!="string"||t.sourcePlaceName.trim()==="")return console.warn(`Validation Error (Edge${a?"Add":"Update"}): 'sourcePlaceName' is required. Value:`,t.sourcePlaceName),!1;if(typeof t.targetPlaceName!="string"||t.targetPlaceName.trim()==="")return console.warn(`Validation Error (Edge${a?"Add":"Update"}): 'targetPlaceName' is required. Value:`,t.targetPlaceName),!1;const n=a?"data":"newData",s=t[n];return typeof s!="object"||s===null?(console.warn(`Validation Error (Edge${a?"Add":"Update"}): '${n}' field is required. Value:`,s),!1):ia(s,a)?!0:(console.warn(`Validation Error (Edge${a?"Add":"Update"}): Invalid '${n}' for edge between "${t.sourcePlaceName}" and "${t.targetPlaceName}".`),!1)}function da(e){if(typeof e!="object"||e===null)return!1;const a=e;return typeof a.edgeId!="string"||a.edgeId.trim()===""?(console.warn("Validation Error (EdgeRemove): 'edgeId' is required. Value:",a.edgeId),!1):a.sourceId!==void 0&&(typeof a.sourceId!="string"||a.sourceId.trim()==="")?(console.warn("Validation Error (EdgeRemove): 'sourceId' must be a non-empty string if provided. Value:",a.sourceId),!1):a.targetId!==void 0&&(typeof a.targetId!="string"||a.targetId.trim()==="")?(console.warn("Validation Error (EdgeRemove): 'targetId' must be a non-empty string if provided. Value:",a.targetId),!1):!0}function ca(e){return typeof e!="object"||e===null?(console.warn("Validation Error (AIMapUpdatePayload): Payload is not an object or is null."),!1):e.nodesToAdd!=null&&(!Array.isArray(e.nodesToAdd)||!e.nodesToAdd.every(a=>Ge(a,!0)))?(console.warn("Validation Error (AIMapUpdatePayload): 'nodesToAdd' is invalid."),!1):e.nodesToUpdate!=null&&(!Array.isArray(e.nodesToUpdate)||!e.nodesToUpdate.every(a=>Ge(a,!1)))?(console.warn("Validation Error (AIMapUpdatePayload): 'nodesToUpdate' is invalid."),!1):e.nodesToRemove!=null&&(!Array.isArray(e.nodesToRemove)||!e.nodesToRemove.every(ra))?(console.warn("Validation Error (AIMapUpdatePayload): 'nodesToRemove' is invalid."),!1):e.edgesToAdd!=null&&(!Array.isArray(e.edgesToAdd)||!e.edgesToAdd.every(a=>We(a,!0)))?(console.warn("Validation Error (AIMapUpdatePayload): 'edgesToAdd' is invalid."),!1):e.edgesToUpdate!=null&&(!Array.isArray(e.edgesToUpdate)||!e.edgesToUpdate.every(a=>We(a,!1)))?(console.warn("Validation Error (AIMapUpdatePayload): 'edgesToUpdate' is invalid."),!1):e.edgesToRemove!=null&&(!Array.isArray(e.edgesToRemove)||!e.edgesToRemove.every(da))?(console.warn("Validation Error (AIMapUpdatePayload): 'edgesToRemove' is invalid."),!1):e.suggestedCurrentMapNodeId!=null&&typeof e.suggestedCurrentMapNodeId!="string"?(console.warn("Validation Error (AIMapUpdatePayload): 'suggestedCurrentMapNodeId' must be a string or null if present. Value:",e.suggestedCurrentMapNodeId),!1):!0}const Ke=(e,a,t)=>{if(e){if(e.status){const n=An[e.status.toLowerCase()];n!==void 0&&(e.status=n),X.includes(e.status)||a.push(`${t} invalid status "${e.status}"`)}if(e.nodeType){const n=Sn[e.nodeType.toLowerCase()];n!==void 0&&(e.nodeType=n),Z.includes(e.nodeType)||a.push(`${t} invalid nodeType "${e.nodeType}"`)}}},ze=(e,a,t)=>{if(e){if(e.type){const n=kn[e.type.toLowerCase()];n!==void 0&&(e.type=n),W.includes(e.type)||a.push(`${t} invalid type "${e.type}"`)}if(e.status){const n=Dn[e.status.toLowerCase()];n!==void 0&&(e.status=n),K.includes(e.status)||a.push(`${t} invalid status "${e.status}"`)}}},la=new Set($n),ua=new Set(Cn);function pa(e){const a=[],t=e.nodesToRemove?[...e.nodesToRemove]:[];(e.nodesToUpdate??[]).forEach(o=>{var i;const r=(i=o.newData.status)==null?void 0:i.toLowerCase();r&&la.has(r)?t.push({nodeId:o.placeName,nodeName:o.placeName}):a.push(o)}),e.nodesToUpdate=a.length>0?a:void 0,e.nodesToRemove=t.length>0?t:void 0;const n=[],s=e.edgesToRemove?[...e.edgesToRemove]:[];(e.edgesToUpdate??[]).forEach(o=>{var i;const r=(i=o.newData.status)==null?void 0:i.toLowerCase();r&&ua.has(r)?s.push({edgeId:"",sourceId:o.sourcePlaceName,targetId:o.targetPlaceName}):n.push(o)}),e.edgesToUpdate=n.length>0?n:void 0,e.edgesToRemove=s.length>0?s:void 0}function fa(e){const a=(n,s,o)=>{const r=n.toLowerCase(),i=s.toLowerCase(),d=(o??"any").toLowerCase();return r<i?`${r}|${i}|${d}`:`${i}|${r}|${d}`},t=(n,s)=>{if(!n)return n;const o=new Set,r=[];for(const i of n){const d=a(i.sourcePlaceName,i.targetPlaceName,s(i));o.has(d)||(o.add(d),r.push(i))}return r};if(e.edgesToAdd=t(e.edgesToAdd??void 0,n=>n.data.type),e.edgesToUpdate=t(e.edgesToUpdate??void 0,n=>n.newData.type),e.edgesToRemove){const n=new Set,s=[];for(const o of e.edgesToRemove){const r=o.edgeId.toLowerCase();n.has(r)||(n.add(r),s.push(o))}e.edgesToRemove=s}}function yt(e){const a=[];return(e.nodesToAdd??[]).forEach((t,n)=>{Ke(t.data,a,`nodesToAdd[${String(n)}]`)}),(e.nodesToUpdate??[]).forEach((t,n)=>{Ke(t.newData,a,`nodesToUpdate[${String(n)}].newData`)}),(e.edgesToAdd??[]).forEach((t,n)=>{ze(t.data,a,`edgesToAdd[${String(n)}]`)}),(e.edgesToUpdate??[]).forEach((t,n)=>{ze(t.newData,a,`edgesToUpdate[${String(n)}].newData`)}),a}function ha(e){const a=[],t=[];for(const n of e.nodesToRemove??[])/^edge_/i.test(n.nodeId)?t.push({edgeId:n.nodeId}):a.push(n);for(const n of e.edgesToRemove??[])/^node_/i.test(n.edgeId)?a.push({nodeId:n.edgeId,nodeName:n.edgeId}):t.push(n);e.nodesToRemove=a.length>0?a:void 0,e.edgesToRemove=t.length>0?t:void 0}const ma=e=>{const a=fn(e),t=ct(a);try{if(t===null)throw new Error("JSON parse failed");let n=null;if(Array.isArray(t)?n=t.reduce((o,r)=>{if(r&&typeof r=="object"){const i=r;Array.isArray(i.nodesToAdd)&&(o.nodesToAdd=[...o.nodesToAdd??[],...i.nodesToAdd]),Array.isArray(i.nodesToUpdate)&&(o.nodesToUpdate=[...o.nodesToUpdate??[],...i.nodesToUpdate]),Array.isArray(i.nodesToRemove)&&(o.nodesToRemove=[...o.nodesToRemove??[],...i.nodesToRemove]),Array.isArray(i.edgesToAdd)&&(o.edgesToAdd=[...o.edgesToAdd??[],...i.edgesToAdd]),Array.isArray(i.edgesToUpdate)&&(o.edgesToUpdate=[...o.edgesToUpdate??[],...i.edgesToUpdate]),Array.isArray(i.edgesToRemove)&&(o.edgesToRemove=[...o.edgesToRemove??[],...i.edgesToRemove]),i.suggestedCurrentMapNodeId&&!o.suggestedCurrentMapNodeId&&(o.suggestedCurrentMapNodeId=i.suggestedCurrentMapNodeId),i.observations&&!o.observations&&(o.observations=i.observations),i.rationale&&!o.rationale&&(o.rationale=i.rationale)}return o},{}):t&&typeof t=="object"&&(n=t),n&&typeof n=="object"){const o=i=>typeof i=="string"&&i.trim().toLowerCase()==="universe";Array.isArray(n.nodesToAdd)&&(n.nodesToAdd=n.nodesToAdd.filter(i=>!o(i.placeName))),Array.isArray(n.nodesToUpdate)&&(n.nodesToUpdate=n.nodesToUpdate.filter(i=>!o(i.placeName))),Array.isArray(n.nodesToRemove)&&(n.nodesToRemove=n.nodesToRemove.filter(i=>!o(i.nodeName)));const r=i=>(i??[]).filter(d=>!o(d.sourcePlaceName)&&!o(d.targetPlaceName));Array.isArray(n.edgesToAdd)&&(n.edgesToAdd=r(n.edgesToAdd)),Array.isArray(n.edgesToUpdate)&&(n.edgesToUpdate=r(n.edgesToUpdate)),Array.isArray(n.edgesToRemove),yt(n)}let s;if(n){const o=[],r=console.warn;console.warn=(...d)=>{o.push(d.map(c=>String(c)).join(" ")),r(...d)};const i=ca(n);if(console.warn=r,i)return{payload:n};s=o.length>0?o.join("; "):void 0}return console.warn("Parsed map update JSON does not match AIMapUpdatePayload structure or is empty:",t),{payload:null,validationError:s}}catch(n){return console.error("Failed to parse map update JSON response from AI:",n),console.debug("Original map update response text:",e),{payload:null,validationError:n instanceof Error?n.message:String(n)}}},ga={type:"object",properties:{observations:{type:"string",minLength:2e3,description:"Contextually relevant observations about the current map state and relationships."},rationale:{type:"string",minLength:1e3,description:"Explanation of the reasons for the changes. Feature nodes can not be parents of other feature nodes."},nodesToAdd:{type:"array",items:{type:"object",properties:{placeName:{type:"string",description:"Name of the node. Should not contain a comma. For sub-locations this can be a descriptive feature name."},data:{type:"object",properties:{description:{type:"string",minLength:30,description:je},aliases:{type:"array",minItems:1,items:{type:"string"},description:Oe},status:{enum:X,description:`One of ${Ue}`},nodeType:{enum:Z,description:`One of ${Le}`},parentNodeId:{type:"string",description:'Parent Node ID, or "Universe" for top-level nodes. Use placeName when referencing other nodes in this response.'}},required:["description","aliases","status","nodeType","parentNodeId"],additionalProperties:!1}},required:["placeName","data"],additionalProperties:!1}},nodesToUpdate:{type:"array",items:{type:"object",properties:{placeName:{type:"string",description:"Existing node ID or name to identify it."},newData:{type:"object",properties:{placeName:{type:"string",description:"If provided, this will be the new name for the node."},description:{type:"string",description:je},aliases:{type:"array",items:{type:"string"},minItems:1,description:Oe},status:{enum:X,description:`One of ${Ue}`},nodeType:{enum:Z,description:`One of ${Le}`},parentNodeId:{type:"string",description:'Parent Node ID, or "Universe" for top-level nodes. Parent can not be a feature node. Use placeName when referencing other nodes in this response.'}},additionalProperties:!1}},required:["placeName","newData"],additionalProperties:!1}},nodesToRemove:{type:"array",items:{type:"object",properties:{nodeId:{type:"string"},nodeName:{type:"string"}},required:["nodeId"],additionalProperties:!1}},edgesToAdd:{type:"array",items:{type:"object",properties:{sourcePlaceName:{type:"string",description:"Source node ID or placeName. Use placeName when referencing other nodes in this response."},targetPlaceName:{type:"string",description:"Target node ID or placeName. Use placeName when referencing other nodes in this response."},data:{type:"object",properties:{description:{type:"string",description:_e},type:{enum:W,description:`One of ${Re}`},status:{enum:K,description:`One of ${Pe}`},travelTime:{type:"string"}},required:["type","status"],additionalProperties:!1}},required:["sourcePlaceName","targetPlaceName","data"],additionalProperties:!1}},edgesToUpdate:{type:"array",items:{type:"object",properties:{sourcePlaceName:{type:"string",description:"Source node ID or placeName. Use placeName when referencing other nodes in this response."},targetPlaceName:{type:"string",description:"Target node ID or placeName. Use placeName when referencing other nodes in this response."},newData:{type:"object",properties:{description:{type:"string",description:_e},type:{enum:W,description:`One of ${Re}`},status:{enum:K,description:`One of ${Pe}`},travelTime:{type:"string",description:"Approximate travel time for the route."}},additionalProperties:!1}},required:["sourcePlaceName","targetPlaceName","newData"],additionalProperties:!1}},edgesToRemove:{type:"array",items:{type:"object",properties:{edgeId:{type:"string"},sourceId:{type:"string"},targetId:{type:"string"}},required:["edgeId"],additionalProperties:!1}},suggestedCurrentMapNodeId:{type:"string",description:"If map updates and the context both imply a new player location, provide its node ID or placeName."}},required:["observations","rationale"],additionalProperties:!1},ya=async(e,a)=>{if(!st())throw console.error("API Key not configured for Map Update Service."),new Error("API Key not configured.");const t=await yn(async()=>{var c,l,p;mn(Ht.map.icon);const{response:n,systemInstructionUsed:s,jsonSchemaUsed:o,promptUsed:r}=await Gt({modelNames:[nt,at],prompt:e,systemInstruction:a,thinkingBudget:4096,includeThoughts:!0,responseMimeType:"application/json",jsonSchema:ga,temperature:.75,label:"Cartographer"}),d=(((p=(l=(c=n.candidates)==null?void 0:c[0])==null?void 0:l.content)==null?void 0:p.parts)??[]).filter(u=>u.thought===!0&&typeof u.text=="string").map(u=>u.text);return{result:{response:n,thoughts:d,systemInstructionUsed:s,jsonSchemaUsed:o,promptUsed:r}}});if(!t)throw new Error("Failed to execute map update request.");return t},Na=async(e,a,t)=>{let n=e;const s={prompt:e,systemInstruction:a,jsonSchema:void 0,observations:void 0,rationale:void 0,minimalModelCalls:t,connectorChainsDebugInfo:[]};let o=null;for(let r=0;r<V;)try{console.log(`Map Update Service: Attempt ${String(r+1)}/${String(V)}`),r>0&&s.validationError?n=`${e}
CRITICALLY IMPORTANT: Your previous attempt has triggered an error: ${s.validationError}`:n=e,s.prompt=n;const{response:i,thoughts:d,systemInstructionUsed:c,jsonSchemaUsed:l,promptUsed:p}=await ya(n,a);s.rawResponse=i.text??"",d.length>0&&(s.thoughts=d),s.systemInstruction=c,s.jsonSchema=l,s.prompt=p;const{payload:u,validationError:m}=ma(i.text??"");if(u){s.observations=u.observations??s.observations,s.rationale=u.rationale??s.rationale,pa(u),ha(u);const h=yt(u);if(fa(u),!h.length){o=u,s.parsedPayload=u,s.validationError=void 0;break}s.parsedPayload=u,s.validationError=h.length>0?`Invalid values: ${h.join("; ")}`:"Parsed payload failed structural/value validation."}else s.validationError=m??"Failed to parse AI response into valid JSON map update payload.";r===V-1&&console.error("Map Update Service: Failed to get valid map update payload after all retries."),r++}catch(i){if(console.error(`Error in map update request (Attempt ${String(r+1)}/${String(V)}):`,i),s.rawResponse=`Error: ${i instanceof Error?i.message:String(i)}`,s.validationError=`Processing error: ${i instanceof Error?i.message:String(i)}`,r===V-1)break;r++}return{payload:o,debugInfo:s}},wa=(e,a)=>{const t=[];let n=a.get(e.data.parentNodeId??"");for(;n&&(t.push(n),!(!n.data.parentNodeId||n.data.parentNodeId==="Universe"));)n=a.get(n.data.parentNodeId);return t},Se=(e,a,t)=>{let n=e;for(;n!=null&&n.data.parentNodeId&&n.data.parentNodeId!=="Universe";){if(n.data.parentNodeId===a.id)return!0;n=t.get(n.data.parentNodeId)}return!1},Go=(e,a,t)=>{const n=new Map(e.nodes.map(r=>[r.id,r])),s=n.get(a),o=n.get(t);return!s||!o?!1:Se(s,o,n)},Wo=(e,a)=>{const{adjacency:t}=me(e),n=new Map(e.edges.map(o=>[o.id,o])),s=["open","accessible","active"];return(t.get(a)??[]).filter(o=>{const r=n.get(o.edgeId);if(!r)return!0;const i=r.data.status??"open";return s.includes(i)}).map(o=>o.to)},Ia=e=>{const a=new Map,t=n=>n!=="rumored"&&n!=="removed";for(const n of e.edges){if(!t(n.data.status))continue;a.has(n.sourceNodeId)||a.set(n.sourceNodeId,[]);const s=a.get(n.sourceNodeId)??[];s.push({nodeId:n.targetNodeId,edgeId:n.id}),a.set(n.sourceNodeId,s),a.has(n.targetNodeId)||a.set(n.targetNodeId,[]);const o=a.get(n.targetNodeId)??[];o.push({nodeId:n.sourceNodeId,edgeId:n.id}),a.set(n.targetNodeId,o)}return a},va=(e,a,t,n)=>{const s=new Set,o=[];for(s.add(a),o.push(a);o.length>0;){const r=o.shift();if(!r)continue;if(r===t)return!0;const i=e.get(r)??[];for(const{nodeId:d,edgeId:c}of i)c!==n&&(s.has(d)||(s.add(d),o.push(d)))}return!1},Je=e=>e?F[e]:-1,Nt=(e,a,t)=>{let n=e;const s=Je(a);for(;n&&Je(n.data.nodeType)>=s;){if(!n.data.parentNodeId)return;n=t.get(n.data.parentNodeId)}return n?n.id:void 0},Ta={region:"location",location:"settlement",settlement:void 0,district:void 0,exterior:void 0,interior:"room",room:"feature",feature:void 0},ba={feature:"room",room:"interior",interior:"exterior",exterior:"district",district:"settlement",settlement:"location",location:"region",region:void 0},ke=(e,a,t)=>{const n=Ta[e.data.nodeType];if(!n||F[a]>=F[n])return null;const s=F[n];return t.filter(r=>r.data.parentNodeId===e.id).every(r=>F[r.data.nodeType]>s)?n:null},Ma=(e,a)=>{const t=ba[e.data.nodeType];if(!t)return null;const n=F[t];if(e.data.parentNodeId){const o=a.find(r=>r.id===e.data.parentNodeId);if(o&&F[o.data.nodeType]>=n)return null}return a.filter(o=>o.data.parentNodeId===e.id).some(o=>F[o.data.nodeType]<=n)?null:t},Ea=e=>{const a=new Map(e.map(t=>[t.id,t]));for(const t of e){const n=t.data.parentNodeId;if(!n||n==="Universe")continue;const s=a.get(n);if(s&&F[s.data.nodeType]>=F[t.data.nodeType])return!0}return!1},Aa=(e,a,t="New Approach")=>{const n=oe(e),s=n.nodes.findIndex(l=>l.id===a);if(s===-1)return{updatedMapData:n,newNode:null,newEdges:[]};const o=n.nodes[s];if(o.data.nodeType!=="feature")return{updatedMapData:n,newNode:null,newEdges:[]};o.data.nodeType="region";const r=z(`node_${t}_`),i={id:r,themeName:o.themeName,placeName:t,position:{...o.position},data:{description:o.data.description,aliases:o.data.aliases??[],status:o.data.status,nodeType:"feature",parentNodeId:o.id,visited:o.data.visited}};n.nodes.push(i),n.edges.forEach(l=>{l.sourceNodeId===a&&(l.sourceNodeId=r),l.targetNodeId===a&&(l.targetNodeId=r)});const d=n.nodes.filter(l=>l.data.parentNodeId===a&&l.id!==r),c=[];return d.forEach(l=>{const u={id:z(`edge_${r}_to_${l.id}`),sourceNodeId:r,targetNodeId:l.id,data:{type:"path",status:o.data.status==="rumored"?"rumored":"open",description:`Connection from ${t} to ${l.placeName}`}};n.edges.push(u),c.push(u)}),{updatedMapData:n,newNode:i,newEdges:c}},Sa=async(e,a)=>{let t=oe(e);const n=[],s=[];for(const o of t.nodes)if(o.data.nodeType==="feature"){const r=t.nodes.filter(i=>i.data.parentNodeId===o.id);if(r.length>0)if(await Wt(o,r[0])==="convert_child")r.forEach(d=>{d.data.parentNodeId=o.data.parentNodeId});else{const d=Aa(t,o.id,"Temp Approach");t=d.updatedMapData,d.newNode&&n.push(d.newNode),s.push(...d.newEdges)}}return{updatedMapData:t,addedNodes:n,addedEdges:s}},Ko=async(e,a)=>{try{return(await Sa(e,a)).updatedMapData}catch(t){return console.error("repairFeatureHierarchy error:",t),e}};function J(e,a,t,n){var p,u,m,h;if(e.data.nodeType!=="feature"||a.data.nodeType!=="feature")return!1;if(t==="shortcut")return!0;const s=n??new Map,o=e.data.parentNodeId??"Universe",r=a.data.parentNodeId??"Universe",i=o==="Universe"?null:s.get(o),d=r==="Universe"?null:s.get(r);if(!i&&o!=="Universe"||!d&&r!=="Universe")return!1;if(o===r)return!0;const c=o==="Universe"?"Universe":((p=s.get(o))==null?void 0:p.data.parentNodeId)??"Universe",l=r==="Universe"?"Universe":((u=s.get(r))==null?void 0:u.data.parentNodeId)??"Universe";if(c&&l&&c===l||c&&r===c||l&&o===l)return!0;if(o!=="Universe"&&r!=="Universe"){const f=((m=s.get(o))==null?void 0:m.data.parentNodeId)??"Universe",g=((h=s.get(r))==null?void 0:h.data.parentNodeId)??"Universe";if(f==="Universe"&&g==="Universe")return!0}return o==="Universe"&&l==="Universe"||r==="Universe"&&c==="Universe"}function De(e,a,t,n,s){const o=(s.get(e.id)??[]).find(l=>(l.sourceNodeId===e.id&&l.targetNodeId===a.id||l.sourceNodeId===a.id&&l.targetNodeId===e.id)&&l.data.type===t.type);if(o)return o;const i={id:z(`edge_${e.id}_to_${a.id}_`),sourceNodeId:e.id,targetNodeId:a.id,data:t};n.push(i);let d=s.get(e.id);d||(d=[],s.set(e.id,d)),d.push(i);let c=s.get(a.id);return c||(c=[],s.set(a.id,c)),c.push(i),i}function qe(e,a){return e.filter(t=>{const n=a.get(t.sourceNodeId),s=a.get(t.targetNodeId);return!n||!s?!1:J(n,s,t.data.type,a)})}function Qe(e,a){let t=0,n=e;for(;n.data.parentNodeId;){const s=a.get(n.data.parentNodeId);if(!s)break;t++,n=s}return t}function $e(e,a,t,n){const s=[],o=[e],r=[a];let i=e,d=a,c=0,l="";for(;!J(i,d,t.type,n)&&c<10;){const p=`${i.id}|${d.id}`;p!==l&&(s.push({sourceParent:i,targetParent:d}),l=p);const u=Qe(i,n),m=Qe(d,n);if(u>=m&&i.data.parentNodeId){const h=n.get(i.data.parentNodeId);if(h)i=h,o.push(i);else break}else if(d.data.parentNodeId){const h=n.get(d.data.parentNodeId);if(h)d=h,r.push(d);else break}else break;c++}return J(i,d,t.type,n)||`${i.id}|${d.id}`!==l&&s.push({sourceParent:i,targetParent:d}),{originalSource:e,originalTarget:a,pairs:s,sourceChain:o,targetChain:r,edgeData:t}}function ka(e){const a=new Set,t=[];return[...e.sourceChain,...e.targetChain.slice().reverse()].forEach(n=>{n.data.nodeType!=="feature"&&!a.has(n.id)&&(t.push(n.id),a.add(n.id))}),t.length===0&&(a.has(e.originalSource.id)||(t.push(e.originalSource.id),a.add(e.originalSource.id)),a.has(e.originalTarget.id)||t.push(e.originalTarget.id)),t}function ce(e,a){if(e.length>a.length)return!1;for(let t=0;t<=a.length-e.length;t++){let n=!0;for(let s=0;s<e.length;s++)if(e[s]!==a[t+s]){n=!1;break}if(n)return!0}return!1}function we(e){const a=[],t=[];return e.forEach(n=>{const s=ka(n),o=[...s].reverse();let r=!1;for(let i=0;i<t.length;i++){const d=t[i],c=[...d].reverse();if(s.length===d.length&&s.every((u,m)=>u===d[m])||s.length===d.length&&o.every((u,m)=>u===d[m])){r=!0;break}if(s.length<=d.length&&(ce(s,d)||ce(o,d))||s.length>d.length&&(ce(d,s)||ce(c,s))){s.length>d.length&&(a[i]=n,t[i]=s),r=!0;break}}r||(a.push(n),t.push(s))}),a}async function Da(e){var c,l;let a=[...e.payload.nodesToAdd??[]];e.nodesToRemove_mut=[...e.payload.nodesToRemove??[]],e.edgesToAdd_mut=[...e.payload.edgesToAdd??[]],e.edgesToRemove_mut=[...e.payload.edgesToRemove??[]];const t=[],n=new Set;for(const p of a){if(e.nameMatchesItemOrNPC(p.placeName)){console.warn(`MapUpdate: Skipping node add "${p.placeName}" that resembles an item or NPC.`),n.add(p.placeName);continue}const u=e.nodesToRemove_mut.findIndex(m=>m.nodeName&&m.nodeName.toLowerCase()===p.placeName.toLowerCase());u!==-1?e.nodesToRemove_mut.splice(u,1):t.push(p)}a=t;const s=[];for(const p of e.edgesToAdd_mut)s.push(p);e.edgesToAdd_mut=s;const o=[],r=new Set;for(const p of e.edgesToAdd_mut){const u=p.sourcePlaceName.toLowerCase(),m=p.targetPlaceName.toLowerCase(),h=p.data.type??"path",f=u<m?`${u}|${m}|${h}`:`${m}|${u}|${h}`;r.has(f)||(r.add(f),o.push(p))}e.edgesToAdd_mut=o,n.size>0&&(e.edgesToAdd_mut=e.edgesToAdd_mut.filter(p=>!n.has(p.sourcePlaceName)&&!n.has(p.targetPlaceName))),a.forEach(p=>{const u=be(p.placeName);p.__generatedId=u,e.newNodesInBatchIdNameMap[p.placeName]={id:u,name:p.placeName}}),(e.payload.nodesToUpdate??[]).forEach(p=>{const u=[p.placeName.toLowerCase()];p.newData.placeName&&u.push(p.newData.placeName.toLowerCase());for(const m of u){const h=e.nodesToRemove_mut.findIndex(f=>f.nodeName&&f.nodeName.toLowerCase()===m);h!==-1&&e.nodesToRemove_mut.splice(h,1)}});let i=[...a],d=!1;for(;i.length>0;){const p=[];for(const u of i){let m,h=null;if(u.data.parentNodeId)if(u.data.parentNodeId==="Universe")m=void 0;else{const E=H(u.data.parentNodeId,e.newMapData.nodes,e.newMapData,e.referenceMapNodeId);if(E){let _=u.data.nodeType??"feature";if(E.data.nodeType===_){const x=ke({id:"temp",themeName:E.themeName,placeName:u.placeName,data:{description:u.data.description??"",aliases:u.data.aliases??[],status:u.data.status,parentNodeId:E.id,nodeType:_}},E.data.nodeType,e.newMapData.nodes);x?(u.data.nodeType=x,_=x,m=E.id):(h=E,m=E.id)}else m=Nt(E,_,e.themeNodeIdMap)}else{p.push(u);continue}}const f=H(u.placeName,e.newMapData.nodes,e.newMapData,e.referenceMapNodeId);if(f!==void 0&&f.themeName===e.currentTheme.name&&(m===void 0&&!f.data.parentNodeId||f.data.parentNodeId===m)&&(f.placeName.toLowerCase()===u.placeName.toLowerCase()||(((c=f.data.aliases)==null?void 0:c.some(E=>E.toLowerCase()===u.placeName.toLowerCase()))??!1)||(((l=u.data.aliases)==null?void 0:l.some(E=>E.toLowerCase()===f.placeName.toLowerCase()))??!1))){const E=f;if(u.data.aliases){const _=new Set([...E.data.aliases??[]]);u.data.aliases.forEach(x=>_.add(x)),E.data.aliases=Array.from(_)}u.data.description&&E.data.description.trim().length===0&&(E.data.description=u.data.description),Reflect.deleteProperty(e.newNodesInBatchIdNameMap,u.placeName);continue}const I=u.__generatedId??be(u.placeName),{description:b,aliases:S,parentNodeId:w,status:v,nodeType:k,visited:M,...C}=u.data,$={description:b??"",aliases:S??[],status:v,parentNodeId:m,nodeType:k??"feature",...C},T={id:I,themeName:e.currentTheme.name,placeName:u.placeName,position:u.initialPosition??{x:0,y:0},data:$};if(e.newMapData.nodes.push(T),e.newlyAddedNodes.push(T),e.themeNodeIdMap.set(I,T),e.themeNodeNameMap.set(u.placeName,T),T.data.aliases&&T.data.aliases.forEach(E=>e.themeNodeAliasMap.set(E.toLowerCase(),T)),e.newNodesInBatchIdNameMap[u.placeName]={id:I,name:u.placeName},h){const E={type:"path",status:T.data.status==="rumored"||h.data.status==="rumored"?"rumored":"open",description:`Path between ${u.placeName} and ${h.placeName}`};J(T,h,"path",e.themeNodeIdMap)?De(T,h,E,e.newMapData.edges,e.themeEdgesMap):e.pendingChainRequests.push($e(T,h,E,e.themeNodeIdMap))}}if(p.length===i.length)if(d){console.warn("MapUpdate: Some nodes could not be added due to unresolved parents after AI assistance:",p.map(u=>u.placeName).join(", "));break}else{for(const u of p){const m=await Kt({placeName:u.placeName,description:u.data.description,nodeType:u.data.nodeType,status:u.data.status,aliases:u.data.aliases},{sceneDescription:e.sceneDesc,logMessage:e.logMsg,localPlace:e.localPlace,currentTheme:e.currentTheme,currentMapNodeId:e.referenceMapNodeId,themeNodes:e.currentThemeNodesFromMapData,themeEdges:e.currentThemeEdgesFromMapData},e.minimalModelCalls);u.data.parentNodeId=m??"Universe"}d=!0,i=p;continue}i=p}}async function $a(e){var a;for(const t of e.payload.nodesToUpdate??[]){const n=await e.resolveNodeReference(t.placeName);if(n){let s=n.data.parentNodeId;if(t.newData.parentNodeId!==void 0){const o=t.newData.parentNodeId;if(o===null)s=void 0;else if(typeof o=="string")if(o==="Universe")s=void 0;else{const r=await e.resolveNodeReference(o);if(r){s=r.id;let i=t.newData.nodeType??n.data.nodeType;if(r.data.nodeType===i){const d=ke(n,r.data.nodeType,e.newMapData.nodes);d?(i=d,s=r.id):s=r.data.parentNodeId}n.data.nodeType=i}else console.warn(`MapUpdate (nodesToUpdate): Feature node "${t.placeName}" trying to update parentNodeId to NAME "${t.newData.parentNodeId}" which was not found.`),s=void 0}}if(t.newData.parentNodeId===void 0&&t.newData.nodeType!==void 0&&(n.data.nodeType=t.newData.nodeType),t.newData.description!==void 0&&(n.data.description=t.newData.description),t.newData.aliases!==void 0){n.data.aliases=t.newData.aliases;for(const[o,r]of Array.from(e.themeNodeAliasMap.entries()))r.id===n.id&&e.themeNodeAliasMap.delete(o);n.data.aliases.forEach(o=>e.themeNodeAliasMap.set(o.toLowerCase(),n))}t.newData.status!==void 0&&(n.data.status=t.newData.status),n.data.parentNodeId=s;for(const o in t.newData)["description","aliases","status","parentNodeId","nodeType","placeName","visited"].includes(o)||(n.data[o]=t.newData[o]);if(t.newData.placeName&&t.newData.placeName!==n.placeName){const o=Object.keys(e.newNodesInBatchIdNameMap).find(i=>e.newNodesInBatchIdNameMap[i].id===n.id);o&&(Reflect.deleteProperty(e.newNodesInBatchIdNameMap,o),e.newNodesInBatchIdNameMap[t.newData.placeName]={id:n.id,name:t.newData.placeName}),e.themeNodeNameMap.delete(n.placeName);const r=n.placeName;n.placeName=t.newData.placeName,e.themeNodeNameMap.set(n.placeName,n),(a=n.data).aliases??(a.aliases=[]),n.data.aliases.includes(r)||n.data.aliases.push(r);for(const[i,d]of Array.from(e.themeNodeAliasMap.entries()))d.id===n.id&&e.themeNodeAliasMap.delete(i);n.data.aliases.forEach(i=>e.themeNodeAliasMap.set(i.toLowerCase(),n))}}else console.warn(`MapUpdate (nodesToUpdate): Node with original name "${t.placeName}" not found for update.`)}for(const t of e.nodesToRemove_mut){let n=await e.resolveNodeReference(t.nodeId);if(!n&&t.nodeName&&(n=await e.resolveNodeReference(t.nodeName)),n){if(t.nodeName&&n.placeName.toLowerCase()!==t.nodeName.toLowerCase()&&console.warn(`MapUpdate (nodesToRemove): nodeId "${t.nodeId}" resolves to "${n.placeName}" which mismatches provided nodeName "${t.nodeName}".`),e.inventoryItems.some(d=>{var c;return d.holderId===n.id&&!((c=d.tags)!=null&&c.includes("junk"))})){console.warn(`MapUpdate (nodesToRemove): Skipping removal of "${n.placeName}" because it contains non-junk items.`);continue}const o=n.id,r=e.newMapData.nodes.findIndex(d=>d.id===o);r!==-1&&e.newMapData.nodes.splice(r,1),e.themeNodeNameMap.delete(n.placeName),e.themeNodeIdMap.delete(o),e.newMapData.edges=e.newMapData.edges.filter(d=>d.sourceNodeId!==o&&d.targetNodeId!==o),e.themeEdgesMap.forEach((d,c)=>{e.themeEdgesMap.set(c,d.filter(l=>l.sourceNodeId!==o&&l.targetNodeId!==o))}),e.themeEdgesMap.delete(o);for(const[d,c]of Array.from(e.themeNodeAliasMap.entries()))c.id===o&&e.themeNodeAliasMap.delete(d);const i=Object.keys(e.newNodesInBatchIdNameMap).find(d=>e.newNodesInBatchIdNameMap[d].id===o||d===t.nodeName);i&&Reflect.deleteProperty(e.newNodesInBatchIdNameMap,i)}else console.warn(`MapUpdate (nodesToRemove): Node "${t.nodeId}" not found for removal.`)}}async function Ca(e){var a;for(const t of e.edgesToAdd_mut){const n=await e.resolveNodeReference(t.sourcePlaceName),s=await e.resolveNodeReference(t.targetPlaceName);if(!n||!s){console.warn(`MapUpdate: Skipping edge add due to missing source ("${t.sourcePlaceName}") or target ("${t.targetPlaceName}") node.`);continue}const o=e.themeNodeIdMap.get(n.id),r=e.themeNodeIdMap.get(s.id);if(!o||!r){console.warn("MapUpdate: Failed to resolve edge nodes after lookup.");continue}const i=o.id<r.id?`${o.id}|${r.id}|${t.data.type??"path"}`:`${r.id}|${o.id}|${t.data.type??"path"}`;if(e.processedChainKeys.has(i))continue;e.processedChainKeys.add(i);const d=$e(o,r,t.data,e.themeNodeIdMap);if(!J(o,r,t.data.type,e.themeNodeIdMap)){e.pendingChainRequests.push(d);continue}De(o,r,{...t.data,status:t.data.status??(o.data.status==="rumored"||r.data.status==="rumored"?"rumored":"open")},e.newMapData.edges,e.themeEdgesMap)}for(const t of e.payload.edgesToUpdate??[]){const n=await e.resolveNodeReference(t.sourcePlaceName),s=await e.resolveNodeReference(t.targetPlaceName);if(!n||!s){console.warn(`MapUpdate: Skipping edge update due to missing source ("${t.sourcePlaceName}") or target ("${t.targetPlaceName}") node.`);continue}const o=n.id,r=s.id,i=e.themeNodeIdMap.get(o),d=e.themeNodeIdMap.get(r);if(!i||!d)continue;const c=(e.themeEdgesMap.get(o)??[]).filter(u=>u.sourceNodeId===o&&u.targetNodeId===r||u.sourceNodeId===r&&u.targetNodeId===o),l=t.newData.type??((a=c[0])==null?void 0:a.data.type);if(!J(i,d,l,e.themeNodeIdMap)){console.warn(`MapUpdate: Edge update between "${i.placeName}" and "${d.placeName}" violates hierarchy rules. Skipping update.`);continue}const p=c.find(u=>t.newData.type?u.data.type===t.newData.type:!0);if(!p){console.warn(`MapUpdate (edgesToUpdate): Edge between "${t.sourcePlaceName}" and "${t.targetPlaceName}" not found for update.`);continue}p.data={...p.data,...t.newData}}for(const t of e.edgesToRemove_mut){let n=e.newMapData.edges.find(r=>r.id===t.edgeId)??e.newMapData.edges.find(r=>r.id.toLowerCase().includes(t.edgeId.toLowerCase()));if(!n&&t.sourceId&&t.targetId){const r=await e.resolveNodeReference(t.sourceId),i=await e.resolveNodeReference(t.targetId);if(!r||!i){console.warn(`MapUpdate: Skipping edge removal due to missing source ("${t.sourceId}") or target ("${t.targetId}") node.`);continue}n=e.newMapData.edges.find(d=>d.sourceNodeId===r.id&&d.targetNodeId===i.id||d.sourceNodeId===i.id&&d.targetNodeId===r.id)??void 0}else n&&(t.sourceId&&n.sourceNodeId!==t.sourceId&&n.targetNodeId!==t.sourceId||t.targetId&&n.sourceNodeId!==t.targetId&&n.targetNodeId!==t.targetId)&&console.warn(`MapUpdate (edgesToRemove): edgeId "${t.edgeId}" does not match provided sourceId/targetId.`);if(!n){console.warn(`MapUpdate (edgesToRemove): Edge "${t.edgeId}" not found for removal.`);continue}e.newMapData.edges=e.newMapData.edges.filter(r=>r!==n);const s=e.themeEdgesMap.get(n.sourceNodeId);s&&e.themeEdgesMap.set(n.sourceNodeId,s.filter(r=>r!==n));const o=e.themeEdgesMap.get(n.targetNodeId);o&&e.themeEdgesMap.set(n.targetNodeId,o.filter(r=>r!==n))}}async function Pa(e){var s;let a=we(e.pendingChainRequests.splice(0)),t=0;const n={sceneDescription:e.sceneDesc,logMessage:e.logMsg,currentTheme:e.currentTheme,themeNodes:e.newMapData.nodes.filter(o=>o.themeName===e.currentTheme.name)};for(;a.length>0&&t<Ve;){a=we(a);let o=null;for(let r=0;r<V&&(console.log(`Connector Chains Refinement: Round ${String(t+1)}/${String(Ve)}, Attempt ${String(r+1)}/${String(V)}`),o=await zt(a,n),o.debugInfo&&((s=e.debugInfo.connectorChainsDebugInfo)==null||s.push({round:t+1,...o.debugInfo})),!o.payload);)console.warn(`Connector Chains Refinement (Round ${String(t+1)}, Attempt ${String(r+1)}): invalid or empty response. Retrying.`),r++;if(o!=null&&o.payload)a=[],(o.payload.nodesToAdd??[]).forEach(r=>{const i=r.data,d=i.parentNodeId&&i.parentNodeId!=="Universe"?H(i.parentNodeId,e.newMapData.nodes,e.newMapData,e.referenceMapNodeId):void 0,c=d?d.id:void 0,l=H(r.placeName,e.newMapData.nodes,e.newMapData,e.referenceMapNodeId);if(l){if(i.aliases){const m=new Set([...l.data.aliases??[]]);i.aliases.forEach(h=>m.add(h)),l.data.aliases=Array.from(m)}i.description&&l.data.description.trim().length===0&&(l.data.description=i.description);return}const u={id:z(`node_${r.placeName}_`),themeName:e.currentTheme.name,placeName:r.placeName,position:d?{...d.position}:{x:0,y:0},data:{...i,parentNodeId:c}};e.newMapData.nodes.push(u),e.newlyAddedNodes.push(u),e.themeNodeIdMap.set(u.id,u),e.themeNodeNameMap.set(u.placeName,u)}),(o.payload.edgesToAdd??[]).forEach(r=>{const i=H(r.sourcePlaceName,e.newMapData.nodes,e.newMapData,e.referenceMapNodeId),d=H(r.targetPlaceName,e.newMapData.nodes,e.newMapData,e.referenceMapNodeId);if(i&&d){const c=i.id<d.id?`${i.id}|${d.id}|${r.data.type??"path"}`:`${d.id}|${i.id}|${r.data.type??"path"}`;if(e.processedChainKeys.has(c))return;e.processedChainKeys.add(c),J(i,d,r.data.type,e.themeNodeIdMap)?De(i,d,r.data,e.newMapData.edges,e.themeEdgesMap):(console.warn(`Connector chain edge between "${i.placeName}" and "${d.placeName}" violates hierarchy rules. Reprocessing.`),a.push($e(i,d,r.data,e.themeNodeIdMap)))}}),n.themeNodes=e.newMapData.nodes.filter(r=>r.themeName===e.currentTheme.name);else{console.warn(`Connector Chains Refinement failed after ${String(V)} attempts for round ${String(t+1)}. Giving up on these chain requests.`);break}a=we(a),t++}e.debugInfo.connectorChainsDebugInfo&&e.debugInfo.connectorChainsDebugInfo.length===0&&(e.debugInfo.connectorChainsDebugInfo=null)}async function Ra(e){for(const a of e.newMapData.nodes.filter(t=>t.themeName===e.currentTheme.name)){const t=a.data.parentNodeId;if(!t||t==="Universe")continue;const n=e.themeNodeIdMap.get(t);n&&n.data.nodeType===a.data.nodeType&&await _a(e,a,n)}}async function _a(e,a,t){var d;const n=[],s=ke(a,t.data.nodeType,e.newMapData.nodes);if(s&&n.push({desc:`Downgrade ${a.placeName} to ${s}`,apply:()=>{a.data.nodeType=s},cloneApply:c=>{const l=c.find(p=>p.id===a.id);l&&(l.data.nodeType=s)}}),t.data.parentNodeId!==void 0){const c=Nt(t.data.parentNodeId==="Universe"?void 0:e.themeNodeIdMap.get(t.data.parentNodeId),a.data.nodeType,e.themeNodeIdMap);if(c!==void 0&&c!==a.data.parentNodeId){const l=((d=e.themeNodeIdMap.get(c))==null?void 0:d.placeName)??"Unknown";n.push({desc:`Reparent ${a.placeName} under ${l}`,apply:()=>{a.data.parentNodeId=c},cloneApply:p=>{const u=p.find(m=>m.id===a.id);u&&(u.data.parentNodeId=c)}})}}const o=Ma(t,e.newMapData.nodes);o&&n.push({desc:`Upgrade ${t.placeName} to ${o}`,apply:()=>{t.data.nodeType=o},cloneApply:c=>{const l=c.find(p=>p.id===t.id);l&&(l.data.nodeType=o)}});const r=n.filter(c=>{const l=e.newMapData.nodes.map(p=>({...p,data:{...p.data}}));return c.cloneApply(l),!Ea(l)});if(r.length===0)return;let i=r[0];if(r.length>1){const c=await Jt({sceneDescription:e.sceneDesc,parent:t,child:a,options:r.map(l=>l.desc)},e.minimalModelCalls);c&&c>=1&&c<=r.length&&(i=r[c-1])}i.apply()}const La=async({payload:e,currentMapData:a,currentTheme:t,previousMapNodeId:n,inventoryItems:s,knownNPCs:o,aiData:r,minimalModelCalls:i,debugInfo:d})=>{const c="sceneDescription"in r?r.sceneDescription:"",l=r.logMessage??"",p=r.localPlace??"Unknown",u="currentMapNodeId"in r&&r.currentMapNodeId?r.currentMapNodeId:n,m=a.nodes.filter(y=>y.themeName===t.name),h=new Set(m.map(y=>y.id)),f=a.edges.filter(y=>h.has(y.sourceNodeId)&&h.has(y.targetNodeId)),g=new Map,N=new Map,I=new Map,b=new Map;m.forEach(y=>{g.set(y.id,y),N.set(y.placeName,y),y.data.aliases&&y.data.aliases.forEach(A=>I.set(A.toLowerCase(),y))}),f.forEach(y=>{b.has(y.sourceNodeId)||b.set(y.sourceNodeId,[]),b.has(y.targetNodeId)||b.set(y.targetNodeId,[]);const A=b.get(y.sourceNodeId);A&&A.push(y);const P=b.get(y.targetNodeId);P&&P.push(y)});const S=async y=>{let A=H(y,$.nodes,$,u);if(!A){const U=/^(.*)_([a-zA-Z0-9]{4})$/.exec(y);if(U){const R=U[1].toLowerCase(),O=Object.values(T).filter(B=>B.id.toLowerCase().startsWith(`${R}_`));if(O.length===1&&(A=$.nodes.find(B=>B.id===O[0].id),!A))return}}if(!A){const P=await qt(y,{themeNodes:$.nodes.filter(U=>U.themeName===t.name),currentLocationId:u},i);P&&(A=H(P,$.nodes,$,u))}return A},w=y=>y.toLowerCase().replace(/[{}().,!?;:"[\]]/g,"").replace(/\s+/g," ").trim(),v=y=>w(y).split(" ").filter(A=>A.length>0),k=s.map(y=>({norm:w(y.name),tokens:v(y.name)})),M=[];o.forEach(y=>{M.push({norm:w(y.name),tokens:v(y.name)}),(y.aliases??[]).forEach(A=>{M.push({norm:w(A),tokens:v(A)})})});const C=y=>{const A=w(y),P=v(y),U=R=>{if(R.norm===A)return!0;const O=P.filter(kt=>R.tokens.includes(kt)),B=O.length/P.length,St=O.length/R.tokens.length;return O.length>0&&B>=.6&&St>=.6};return k.some(U)||M.some(U)},$=oe(a),T={},E=[],_=[],x=[],It=new Set,vt=[],Tt=[],bt=[];g.clear(),N.clear(),I.clear(),b.clear(),$.nodes.filter(y=>y.themeName===t.name).forEach(y=>{g.set(y.id,y),N.set(y.placeName,y),y.data.aliases&&y.data.aliases.forEach(A=>I.set(A.toLowerCase(),y))}),$.edges.forEach(y=>{if(g.has(y.sourceNodeId)&&g.has(y.targetNodeId)){b.has(y.sourceNodeId)||b.set(y.sourceNodeId,[]),b.has(y.targetNodeId)||b.set(y.targetNodeId,[]);const A=b.get(y.sourceNodeId);A&&A.push(y);const P=b.get(y.targetNodeId);P&&P.push(y)}});const D={payload:e,newMapData:$,currentTheme:t,referenceMapNodeId:u,currentThemeNodesFromMapData:m,currentThemeEdgesFromMapData:f,themeNodeIdMap:g,themeNodeNameMap:N,themeNodeAliasMap:I,themeEdgesMap:b,newNodesInBatchIdNameMap:T,newlyAddedNodes:E,newlyAddedEdges:_,pendingChainRequests:x,processedChainKeys:It,nodesToRemove_mut:vt,edgesToAdd_mut:Tt,edgesToRemove_mut:bt,resolveNodeReference:S,nameMatchesItemOrNPC:C,minimalModelCalls:i,sceneDesc:c,logMsg:l,localPlace:p,debugInfo:d,inventoryItems:s};await Da(D),await $a(D),await Ra(D),await Ca(D),D.newMapData.edges=qe(D.newMapData.edges,D.themeNodeIdMap),D.themeEdgesMap.clear(),D.newMapData.edges.forEach(y=>{D.themeEdgesMap.has(y.sourceNodeId)||D.themeEdgesMap.set(y.sourceNodeId,[]),D.themeEdgesMap.has(y.targetNodeId)||D.themeEdgesMap.set(y.targetNodeId,[]);const A=D.themeEdgesMap.get(y.sourceNodeId);A&&A.push(y);const P=D.themeEdgesMap.get(y.targetNodeId);P&&P.push(y)}),await Pa(D);const Mt=y=>s.some(A=>{var P;return A.holderId===y&&!((P=A.tags)!=null&&P.includes("junk"))}),Et=y=>{if(Mt(y.id)){console.warn(`Sanity check: skipping removal of "${y.placeName}" because it contains non-junk items.`);return}const A=y.id,P=D.newMapData.nodes.findIndex(R=>R.id===A);P!==-1&&D.newMapData.nodes.splice(P,1),D.themeNodeNameMap.delete(y.placeName),D.themeNodeIdMap.delete(A),D.newMapData.edges=D.newMapData.edges.filter(R=>R.sourceNodeId!==A&&R.targetNodeId!==A),D.themeEdgesMap.forEach((R,O)=>{D.themeEdgesMap.set(O,R.filter(B=>B.sourceNodeId!==A&&B.targetNodeId!==A))}),D.themeEdgesMap.delete(A);for(const[R,O]of Array.from(D.themeNodeAliasMap.entries()))O.id===A&&D.themeNodeAliasMap.delete(R);const U=Object.keys(D.newNodesInBatchIdNameMap).find(R=>D.newNodesInBatchIdNameMap[R].id===A||R===y.placeName);U&&Reflect.deleteProperty(D.newNodesInBatchIdNameMap,U)},Ce=new Map;s.forEach(y=>{y.type!=="vehicle"&&Ce.set(w(y.name),y)});const ge=new Set;o.forEach(y=>{ge.add(w(y.name)),(y.aliases??[]).forEach(A=>ge.add(w(A)))}),D.newMapData.nodes.filter(y=>y.themeName===D.currentTheme.name).forEach(y=>{const A=w(y.placeName);(Ce.has(A)||ge.has(A))&&Et(y)});const ye=new Set;o.filter(y=>y.presenceStatus==="companion").forEach(y=>{ye.add(w(y.name)),(y.aliases??[]).forEach(A=>ye.add(w(A)))});const At=s.filter(y=>{const A=w(y.name);return!(y.type!=="vehicle"&&ye.has(A))});return s.splice(0,s.length,...At),D.newMapData.edges=qe(D.newMapData.edges,D.themeNodeIdMap),D.themeEdgesMap.clear(),D.newMapData.edges.forEach(y=>{D.themeEdgesMap.has(y.sourceNodeId)||D.themeEdgesMap.set(y.sourceNodeId,[]),D.themeEdgesMap.has(y.targetNodeId)||D.themeEdgesMap.set(y.targetNodeId,[]);const A=D.themeEdgesMap.get(y.sourceNodeId);A&&A.push(y);const P=D.themeEdgesMap.get(y.targetNodeId);P&&P.push(y)}),{updatedMapData:$,newlyAddedNodes:E,newlyAddedEdges:_,debugInfo:d}},Ua=async(e,a,t,n,s,o,r)=>{if(!st())return console.error("API Key not configured for Map Update Service."),null;const i="sceneDescription"in e?e.sceneDescription:"",d=e.logMessage??"",c=e.localPlace??"Unknown",l=e.mapHint??"",p="currentMapNodeId"in e&&e.currentMapNodeId?e.currentMapNodeId:s,u=a.nodes.filter(T=>T.themeName===t.name),m=new Set(u.map(T=>T.id)),h=a.edges.filter(T=>m.has(T.sourceNodeId)&&m.has(T.targetNodeId)),f=[],g=p??"Player's Previous Map Node: Unknown or N/A.",N=`Current Map Nodes (for your reference):
${u.length>0?vn(u):"None exist yet."}

Current Map Edges (for your reference):
${h.length>0?h.map(T=>wn(T)).join(`
`):"None exist yet."}`,I=n.length>0?n.map(T=>`"${T.placeName}"`).join(", "):"No important places are known yet.",b=new Set;o.forEach(T=>{T.type!=="vehicle"&&b.add(T.name)}),"newItems"in e&&e.newItems&&e.newItems.forEach(T=>{T.type!=="vehicle"&&b.add(T.name)});const S=Array.from(b),w=new Set;r.forEach(T=>{w.add(T.name),(T.aliases??[]).forEach(E=>w.add(E))}),"npcsAdded"in e&&e.npcsAdded&&e.npcsAdded.forEach(T=>{w.add(T.name),(T.aliases??[]).forEach(E=>w.add(E))}),"npcsUpdated"in e&&e.npcsUpdated&&e.npcsUpdated.forEach(T=>{w.add(T.name),(T.newAliases??[]).forEach(E=>w.add(E)),T.addAlias&&w.add(T.addAlias)});const v=Array.from(w),k=oa(i,d,c,l,t,g,N,I,S,v),{payload:M,debugInfo:C}=await Na(k,aa,f);return M?await La({payload:M,currentMapData:a,currentTheme:t,previousMapNodeId:s,inventoryItems:o,knownNPCs:r,aiData:e,minimalModelCalls:f,debugInfo:C}):{updatedMapData:null,newlyAddedNodes:[],newlyAddedEdges:[],debugInfo:C}},Oa=[{keywords:["inside of","inside"],type:"direct",weight:100},{keywords:["atop of","atop"],type:"direct",weight:100},{keywords:["at the center of","at the heart of","at the"],type:"direct",weight:90},{keywords:["at"],type:"direct",weight:85},{keywords:["within"],type:"direct",weight:95},{keywords:["on top of","on"],type:"direct",weight:90},{keywords:["entering into","entering"],type:"direct",weight:90},{keywords:["overlooking"],type:"relational",weight:60},{keywords:["leading to","leading towards"],type:"relational",weight:55},{keywords:["near to","near by","nearby","near","close to","by","beside","next to"],type:"relational",weight:50},{keywords:["facing"],type:"relational",weight:45},{keywords:["approaching"],type:"relational",weight:40},{keywords:["exiting from","exiting","leaving from","leaving"],type:"relational",weight:35},{keywords:["heading to","heading towards","going to","going towards"],type:"relational",weight:50},{keywords:["coming from","arriving from"],type:"relational",weight:30},{keywords:["outside of","outside","behind"],type:"negating",weight:30},{keywords:["away from","far from"],type:"negating",weight:20},{keywords:["beyond"],type:"negating",weight:25},{keywords:["of the","of a","of an","of"],type:"contextual_linking",weight:5},{keywords:["from the","from a","from an","from"],type:"contextual_linking",weight:5}],wt=[...Oa].sort((e,a)=>Math.max(...a.keywords.map(t=>t.length))-Math.max(...e.keywords.map(t=>t.length))),ja=wt.filter(e=>e.type!=="contextual_linking").flatMap(e=>e.keywords).sort((e,a)=>a.length-e.length),Va=new Set(["the","a","an","is","are","was","were","am","i","you","he","she","it","we","they","and","or","but","so","then","just","very","quite","also","too","now","player","character","up","down","left","right","north","south","east","west","above","below","under","over","through","around","along","across","between","among","front","go","look","see","find","take","get","move","walk","run","stand","sit","player is","several","stories"]),Y=e=>e?e.toLowerCase().replace(/[.,!?;:"(){}[\]'’]/g,"").trim():"",Fa=e=>e?Y(e).split(/\s+/).map(t=>t.replace(/^['"]+|['"]+$/g,"")).filter(t=>t.length>0&&!Va.has(t)).map(t=>t.trim()).filter(t=>t.length>0):[];function xa(e,a){if(!e||!a||e===a||e.length<3&&a.length<3)return!1;const t=e.toLowerCase(),n=a.toLowerCase();return!!(t===n+"s"||n===t+"s"||t.endsWith("es")&&t.slice(0,-2)===n||n.endsWith("es")&&n.slice(0,-2)===t||t.endsWith("ies")&&t.slice(0,-3)+"y"===n||n.endsWith("ies")&&n.slice(0,-3)+"y"===t)}const Ya=e=>{if(!e||e.trim()==="")return[];const a=[],t=`\\b(?:${ja.map(l=>l.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")).join("|")})\\b`,n=new RegExp(t,"gi"),s=[];let o;for(;(o=n.exec(e))!==null;){const l=o[0].toLowerCase(),p=wt.find(u=>u.keywords.includes(l));p&&p.type!=="contextual_linking"&&s.push({index:o.index,text:l,originalText:o[0],definition:p})}s.sort((l,p)=>l.index-p.index);let r=0;const i=s.length>0?s[0].index:e.length;let d=e.substring(0,i).trim();const c=d.indexOf(",");c!==-1&&(d=d.substring(0,c).trim()),d&&a.push({phrase:d,prepositionKeyword:"implicit_subject",prepositionType:"direct",prepositionWeight:100});for(let l=0;l<s.length;l++){const p=s[l];r=p.index+p.originalText.length;const u=l+1<s.length?s[l+1].index:e.length;let m=e.substring(r,u).trim();const h=m.indexOf(",");h!==-1&&(m=m.substring(0,h).trim()),m&&a.push({phrase:m,prepositionKeyword:p.text,prepositionType:p.definition.type,prepositionWeight:p.definition.weight,originalPrepositionText:p.originalText})}return a.filter(l=>l.phrase.length>0)},Ba=30,Ha=10,he=Fa,Ga=(e,a,t)=>{const n=[];for(const s of t){const o=[s.placeName,...s.data.aliases??[]];for(const r of o.filter(i=>i&&i.trim()!=="")){const i=Y(r),d=he(r).join(" ");let c=0;if(i===e?c=1e3:e.endsWith(i)&&e.length>i.length?c=950:e.startsWith(i)&&e.length>i.length?c=920:d&&a&&d===a?c=900:e.includes(i)&&i.length>0&&(c=800+i.length*.5),c>0){const l=s.data.nodeType==="feature";n.push({nodeId:s.id,score:c+(l?Ha:0),isFeature:l,nameLength:r.length})}}}return n},Wa=(e,a,t)=>{const{node:n,nameTokenPairs:s}=e;let o=-1;for(const{name:r,tokens:i}of s){if(i.length===0)continue;let d=0;for(const c of a){const l=he(c.phrase);if(l.length===0)continue;let p=0;const u=[...l];if(i.forEach(m=>{const h=u.indexOf(m);if(h!==-1)p++,u.splice(h,1);else{const f=u.findIndex(g=>xa(m,g));f!==-1&&(p++,u.splice(f,1))}}),p>0){const m=p/i.length,h=p/l.length;let f=m*60+h*40;const g=Y(r),N=Y(c.phrase);let I=0;g===N?I=100:N.endsWith(g)&&N.length>g.length?I=75:N.startsWith(g)&&N.length>g.length?I=70:N.includes(g)?I=50+g.length*.2:g.includes(N)&&(I=25+N.length*.2),f+=I;const b=c.prepositionType==="negating"&&f>75?c.prepositionWeight*.5:c.prepositionWeight;d+=f*(b/100)}}d>o&&(o=d)}return o>-1&&t.has(n.id)&&(o+=Ba),o},Ka=(e,a,t)=>{if(!e||a.score>e.score)return a;if(a.score<e.score)return e;const n=t.find(c=>c.id===a.nodeId),s=t.find(c=>c.id===e.nodeId);if(!n||!s)return e;const o=n.data.nodeType==="feature",r=s.data.nodeType==="feature";if(o&&!r)return a;if(!o&&r)return e;const i=Y(n.placeName).length,d=Y(s.placeName).length;return i>d?a:e},za=(e,a,t)=>{if(!e)return null;const n=t.find(o=>o.id===e);if(!n||n.data.nodeType==="feature"||n.data.parentNodeId&&n.data.parentNodeId!=="Universe")return e;const s=t.filter(o=>o.data.nodeType==="feature"&&o.data.parentNodeId===n.id);for(const o of s){const r=o.placeName,i=Y(r);if(a.find(c=>c.prepositionType==="direct"&&Y(c.phrase).includes(i)))return o.id}return e},Xe=(e,a,t,n,s)=>{if(!e||e.trim()==="")return console.log(`MapNodeMatcher (${a}): No suggestion provided or suggestion is empty.`),{matched:!1,nodeId:null};if(s.length===0)return console.log(`MapNodeMatcher (${a}): No nodes found for theme "${n}" in draft state.`),{matched:!1,nodeId:null};const o=s.find(h=>h.id===e);if(o)return console.log(`MapNodeMatcher (${a}): AI suggested node ID "${e}", matched to ID "${o.id}".`),{matched:!0,nodeId:o.id};const r=e.toLowerCase();let i=s.find(h=>h.id.toLowerCase().includes(r));const d=/^(.*)_([a-zA-Z0-9]{4})$/;let c=null;if(!i){const h=d.exec(e);if(h){const f=h[1];c=f,i=s.find(g=>g.id.toLowerCase().includes(f.toLowerCase()))}}if(i)return console.log(`MapNodeMatcher (${a}): Heuristically matched malformed ID "${e}" to "${i.id}".`),{matched:!0,nodeId:i.id};const l=e.toLowerCase(),p=s.filter(h=>{var f;return h.placeName.toLowerCase()===l||((f=h.data.aliases)==null?void 0:f.some(g=>g.toLowerCase()===l))});if(p.length===0){const f=(c??e).replace(/_/g," ").toLowerCase();p.push(...s.filter(g=>{var N;return g.placeName.toLowerCase()===f||((N=g.data.aliases)==null?void 0:N.some(I=>I.toLowerCase()===f))}))}if(p.length===0)return console.log(`MapNodeMatcher (${a}): AI suggested identifier "${e}" NOT found by ID, name, or alias within theme "${n}".`),{matched:!1,nodeId:null};if(p.length===1){const h=p[0];return console.log(`MapNodeMatcher (${a}): AI suggested node NAME/ALIAS "${e}", uniquely matched to ID "${h.id}".`),{matched:!0,nodeId:h.id}}if(console.log(`MapNodeMatcher (${a}): AI suggested node NAME/ALIAS "${e}", multiple matches found. Applying tie-breaking.`),t){const h=p.find(f=>f.id===t);if(h)return console.log(`MapNodeMatcher (${a}): Tie-breaker: Matched oldMapNodeId "${t}".`),{matched:!0,nodeId:h.id}}const u=p.filter(h=>h.data.nodeType!=="feature");if(u.length>0){const h=u[0];return console.log(`MapNodeMatcher (${a}): Tie-breaker: Chose non-feature node "${h.placeName}" (ID: ${h.id}).`),{matched:!0,nodeId:h.id}}const m=p[0];return console.log(`MapNodeMatcher (${a}): Tie-breaker: Chose first feature node match "${m.placeName}" (ID: ${m.id}).`),{matched:!0,nodeId:m.id}},Ja=(e,a,t,n,s)=>{if(!e||!a||n.length===0)return null;const o=n,r=e.indexOf(","),i=(r!==-1?e.substring(0,r):e).trim(),d=Y(i),c=he(e).join(" "),l=Ga(d,c,o);if(l.length>0)return l.sort((g,N)=>N.score!==g.score?N.score-g.score:g.isFeature!==N.isFeature?g.isFeature?-1:1:N.nameLength-g.nameLength),l[0].nodeId;const p=Ya(e);if(p.length===0)return null;let u=null;const m=new Set;s&&t.edges.forEach(g=>{g.sourceNodeId===s?m.add(g.targetNodeId):g.targetNodeId===s&&m.add(g.sourceNodeId)});const h=o.map(g=>({node:g,nameTokenPairs:[g.placeName,...g.data.aliases??[]].filter(N=>N&&N.trim()!=="").map(N=>({name:N,tokens:he(N)}))}));for(const g of h){const N=Wa(g,p,m);if(N>-1){const I={nodeId:g.node.id,score:N};u=Ka(u,I,o)}}let f=u?u.nodeId:null;return u&&u.score>0&&(f=za(f,p,o)),f},zo=async(e,a,t,n,s,o,r)=>{var N,I,b,S,w;let i,d=null;if("mapUpdated"in e&&e.mapUpdated||a.localPlace!==t.localPlace){const v=s;o("map");const k=a.mapData.nodes.filter(M=>M.themeName===n.name&&M.data.nodeType!=="feature");if(d=await Ua(e,a.mapData,n,k,t.currentMapNodeId,a.inventory,a.allNPCs),o(v),!d)throw new Error("Map Update Service returned no data.");if(!d.updatedMapData){const M=((N=d.debugInfo)==null?void 0:N.validationError)??((I=d.debugInfo)==null?void 0:I.rawResponse)??"Unknown error";throw new Error(`Map update failed: ${M}`)}if(JSON.stringify(a.mapData)!==JSON.stringify(d.updatedMapData)&&(r.mapDataChanged=!0,a.mapData=d.updatedMapData),d.debugInfo&&a.lastDebugPacket&&(a.lastDebugPacket.mapUpdateDebugInfo=d.debugInfo),i=(S=(b=d.debugInfo)==null?void 0:b.parsedPayload)==null?void 0:S.suggestedCurrentMapNodeId,d.newlyAddedNodes.length>0){for(const M of d.newlyAddedNodes)if(M.data.nodeType!=="feature"){const $=a.mapData.nodes.find(T=>T.id===M.id);if($&&(!$.data.description||$.data.description.trim()===""||$.data.description.startsWith("Description missing"))){const T=s;o("correction");const E=await Qt(M.placeName,e.logMessage,"sceneDescription"in e?e.sceneDescription:t.currentScene,n);if(o(T),E){const _=a.mapData.nodes.findIndex(x=>x.id===$.id);_!==-1&&(a.mapData.nodes[_].data.description=E.description,a.mapData.nodes[_].data.aliases=E.aliases??[],r.mapDataChanged=!0)}}}}}const c=await Xt(a.mapData.nodes.filter(v=>v.themeName===n.name),n,(w=d==null?void 0:d.debugInfo)==null?void 0:w.minimalModelCalls);if(c.length>0){const v={};for(const k of c){const M=a.mapData.nodes.findIndex(E=>E.id===k.nodeId);if(M===-1)continue;const C=a.mapData.nodes[M],$=C.id,T=be(k.newName);v[$]=T,C.placeName=k.newName,C.id=T,a.mapData.nodes.forEach(E=>{E.data.parentNodeId===$&&(E.data.parentNodeId=T)}),a.mapData.edges.forEach(E=>{E.sourceNodeId===$&&(E.sourceNodeId=T),E.targetNodeId===$&&(E.targetNodeId=T)}),a.inventory.forEach(E=>{E.holderId===$&&(E.holderId=T)}),a.currentMapNodeId===$&&(a.currentMapNodeId=T),a.destinationNodeId===$&&(a.destinationNodeId=T)}Object.keys(v).length>0&&Zn(a.themeFacts,v),r.mapDataChanged=!0}const l=new Set(((d==null?void 0:d.newlyAddedEdges)??[]).map(v=>v.id)),p=n.name,u="npcsAdded"in e&&e.npcsAdded?e.npcsAdded:[],m="npcsUpdated"in e&&e.npcsUpdated?e.npcsUpdated:[];(u.length>0||m.length>0)&&(r.npcChanges=Qn(u,m,p,a.allNPCs),a.allNPCs=Xn(u,m,p,a.allNPCs));const h=t.currentMapNodeId;let f=h;const g=a.mapData.nodes.filter(v=>v.themeName===n.name);if(i){const v=Xe(i,"mapAI",h,n.name,g);v.matched&&(f=v.nodeId)}if(!i&&"currentMapNodeId"in e&&e.currentMapNodeId){const v=Xe(e.currentMapNodeId,"mainAI",h,n.name,g);v.matched&&(f=v.nodeId)}if(!i&&!("currentMapNodeId"in e&&e.currentMapNodeId)&&a.localPlace&&(f=Ja(a.localPlace,n,a.mapData,g,h)??h),a.currentMapNodeId=f,a.currentMapNodeId!==h&&(r.currentMapNodeIdChanged=!0),a.currentMapNodeId&&a.destinationNodeId){const v=new Map(a.mapData.nodes.map(C=>[C.id,C])),k=v.get(a.currentMapNodeId),M=v.get(a.destinationNodeId);k&&M&&(k.id===M.id||Se(k,M,v))&&(a.destinationNodeId=null)}if(a.currentMapNodeId){const v=a.mapData.nodes.findIndex(k=>k.id===a.currentMapNodeId);if(v!==-1){a.mapData.nodes[v].data.visited||(a.mapData.nodes[v].data.visited=!0,(a.mapData.nodes[v].data.status==="rumored"||a.mapData.nodes[v].data.status==="undiscovered")&&(a.mapData.nodes[v].data.status="discovered"),r.mapDataChanged=!0);const k=new Map(a.mapData.nodes.map($=>[$.id,$])),M=a.mapData.nodes[v],C=wa(M,k);for(const $ of C){const T=a.mapData.nodes.findIndex(E=>E.id===$.id);T!==-1&&!a.mapData.nodes[T].data.visited&&(a.mapData.nodes[T].data.visited=!0,(a.mapData.nodes[T].data.status==="rumored"||a.mapData.nodes[T].data.status==="undiscovered")&&(a.mapData.nodes[T].data.status="discovered"),r.mapDataChanged=!0)}}}if(r.mapDataChanged){const v=new Set(a.mapData.nodes.filter(C=>C.data.visited).map(C=>C.id)),k=[],M=Ia(a.mapData);a.mapData.edges.forEach((C,$)=>{l.has(C.id)||v.has(C.sourceNodeId)&&v.has(C.targetNodeId)&&(C.data.status==="rumored"||C.data.status==="removed")&&(va(M,C.sourceNodeId,C.targetNodeId,C.id)?k.push($):(C.data.status="open",r.mapDataChanged=!0))}),k.length>0&&(a.mapData.edges=a.mapData.edges.filter((C,$)=>!k.includes($)))}return i};function Jo(e){return e.replace(/[a-zA-Z]/g,a=>{const t=a.charCodeAt(0),n=t<=90?65:97;return String.fromCharCode((t-n+13)%26+n)})}const qa={A:"ᚨ",B:"ᛒ",C:"ᚲ",D:"ᛞ",E:"ᛖ",F:"ᚠ",G:"ᚷ",H:"ᚻ",I:"ᛁ",J:"ᛃ",K:"ᚲ",L:"ᛚ",M:"ᛗ",N:"ᚾ",O:"ᚩ",P:"ᛈ",Q:"ᚲ",R:"ᚱ",S:"ᛊ",T:"ᛏ",U:"ᚢ",V:"ᚡ",W:"ᚹ",X:"ᛉ",Y:"ᛣ",Z:"ᛉ",a:"ᚨ",b:"ᛒ",c:"ᚲ",d:"ᛞ",e:"ᛖ",f:"ᚠ",g:"ᚷ",h:"ᚻ",i:"ᛁ",j:"ᛃ",k:"ᚲ",l:"ᛚ",m:"ᛗ",n:"ᚾ",o:"ᚩ",p:"ᛈ",q:"ᚲ",r:"ᚱ",s:"ᛊ",t:"ᛏ",u:"ᚢ",v:"ᚡ",w:"ᚹ",x:"ᛉ",y:"ᛣ",z:"ᛉ"};function qo(e){return e.split("").map(a=>qa[a]??a).join("")}function Qo(e){const a=Math.floor(e.length/2),t=e.lastIndexOf(" ",a),n=e.indexOf(" ",a),s=t!==-1&&a-t<20?t:n!==-1&&n-a<20?n:a,o=Math.random()<.5,r=`
--- torn ---
`;return o?`${e.slice(0,s)}${r}`:`${r}${e.slice(s)}`}const Xo=(e,a)=>{let t=e,n=2;for(;a.some(s=>s.heading===t);)t=`${e} (${String(n)})`,n+=1;return t},Zo=e=>{if(!e)return null;for(const a in fe){const n=fe[a].find(s=>s.name===e);if(n)return n}return null},es=(e,a,t)=>{const n=e.getScreenCTM();if(!n)return{x:a,y:t};const s=n.inverse(),o=e.createSVGPoint();o.x=a,o.y=t;const r=o.matrixTransform(s);return{x:r.x,y:r.y}},ts=(e,a,t)=>{const n=e.getScreenCTM();if(!n)return{x:a,y:t};const s=e.createSVGPoint();s.x=a,s.y=t;const o=s.matrixTransform(n);return{x:o.x,y:o.y}},Qa=e=>{if(e.data.visualRadius)return e.data.visualRadius;switch(e.data.nodeType){case"region":return j*2.4;case"location":return j*2;case"settlement":return j*1.8;case"district":return j*1.6;case"exterior":return j*1.4;case"interior":return j*1.2;case"room":return j*.8;case"feature":return j*.6;default:return j*.6}},Xa=(e,a,t)=>{if(!e)return[];const n=e.split(" "),s=[];let o="";for(const r of n){if(s.length===t)break;if(o.length===0)o=r;else if(o.length+r.length+1<=a)o+=` ${r}`;else{if(s.push(o),s.length===t){if(r){const i=s[t-1];i.length>3?s[t-1]=i.slice(0,-3)+"...":s[t-1]=".."}o="";break}o=r}}if(o&&s.length<t?s.push(o):o&&s.length===t&&s[t-1]&&!s[t-1].endsWith("...")&&(s[t-1].length>3?s[t-1]=s[t-1].slice(0,-3)+"...":s[t-1]=".."),s.length===t&&e.split(" ").length>n.indexOf(o.split(" ")[0])+o.split(" ").length){const r=s[t-1];r&&r.length>3&&!r.endsWith("...")?s[t-1]=r.slice(0,Math.max(0,r.length-3))+"...":r&&!r.endsWith("...")&&(s[t-1]="..")}return s},Ze=e=>e==="feature"||e==="room"||e==="interior",Za=e=>e==="feature",ns=(e,a)=>{const t=new Map(e.map(f=>[f.id,f])),n=new Map;e.forEach(f=>{if(f.data.parentNodeId){const g=n.get(f.data.parentNodeId)??[];g.push(f),n.set(f.data.parentNodeId,g)}});const s=new Map,o=f=>{if(!f)return 0;const g=s.get(f.id);if(g!==void 0)return g;const N=f.data.parentNodeId?t.get(f.data.parentNodeId):void 0,I=N?o(N)+1:0;return s.set(f.id,I),I};e.forEach(f=>o(f));const r=f=>n.has(f.id),i=f=>Ze(f.data.nodeType)?7:12,d={},c=f=>{const g=d[f.id];if(g)return g;const N=Ze(f.data.nodeType)||!r(f)?20:25,I=Xa(f.placeName,N,Zt);return d[f.id]=I,I},l=f=>c(f).length*i(f)*et,p=f=>Math.max(...c(f).map(g=>g.length*i(f)*.6)),u=(f,g)=>{const N=p(f),I=l(f);if(Za(f.data.nodeType))return{x:f.position.x-N/2,y:f.position.y-I/2,width:N,height:I*2};const b=Qa(f)+tt+g;return{x:f.position.x-N/2,y:f.position.y+b,width:N,height:I}},m={};e.forEach(f=>{m[f.id]=0});const h=(f,g)=>f.x<g.x+g.width&&f.x+f.width>g.x&&f.y<g.y+g.height&&f.y+f.height>g.y;return n.forEach(f=>{const g=[...f].sort((N,I)=>N.position.x-I.position.x);for(let N=1;N<g.length;N++){const I=g[N-1],b=g[N];let S=u(I,m[I.id]),w=u(b,m[b.id]);if(h(S,w)){const v=S.y+S.height-w.y+a;b.data.nodeType!=="feature"?(m[b.id]+=v,w=u(b,m[b.id])):I.data.nodeType!=="feature"&&(m[I.id]+=v,S=u(I,m[I.id]))}}}),e.forEach(f=>{if(f.data.nodeType==="feature")return;const g=e.filter(N=>N.data.nodeType==="feature"&&Se(N,f,t));for(const N of g){const I=u(f,m[f.id]),b=u(N,m[N.id]);if(h(I,b)){const S=b.y+b.height-I.y+a;m[f.id]+=S}}}),m},Ie=(e,a)=>e.split(/(\*\*[^*]+\*\*|\*[^*]+\*)/g).map((n,s)=>{const o=`${a}-${String(s)}-${n}`;if(n.startsWith("**")&&n.endsWith("**")){const r=n.slice(2,-2);return L.jsx("strong",{children:r},`b-${o}`)}if(n.startsWith("*")&&n.endsWith("*")){const r=n.slice(1,-1);return L.jsx("em",{children:r},`i-${o}`)}return L.jsx(it.Fragment,{children:n},`t-${o}`)}),as=e=>{const a=e.replace(/\r\n/g,`
`).split(/\n/),t=[],n=[];let s=[];const o=/^(#+)\s+(.*)$/,r=()=>{if(s.length===0)return;const l=t.length,p=s.map((u,m)=>{const h=`p-${String(l)}-${String(m)}`,f=Ie(u,h),g=m<s.length-1?L.jsx("br",{}):null;return L.jsxs(it.Fragment,{children:[f,g]},h)});t.push(L.jsx("p",{children:p},`p-${String(l)}`)),s=[]},i=()=>{const l=n.pop();if(!l)return;const{items:p,level:u}=l,m=`ul-${String(u)}-${String(t.length)}`,h=L.jsx("ul",{className:"list-disc list-inside ml-4 space-y-1",children:p},m);n.length===0?t.push(h):n[n.length-1].items.push(h)},d=l=>{for(;n.length>l+1;)i()},c=/^(\s*)\*\s+(.*)$/;return a.forEach(l=>{if(l.trim()==="--- torn ---"){r(),d(-1),t.push(L.jsx("hr",{"aria-hidden":"true",className:"torn-divider"},`torn-${String(t.length)}`));return}const p=o.exec(l);if(p){r(),d(-1);const m=p[2],h=`h-${String(t.length)}`,f=Ie(m,h);t.push(L.jsx("p",{children:L.jsx("strong",{children:f})},h));return}const u=c.exec(l);if(u){r();const m=u[1].length,h=Math.floor(m/2);for(d(h);n.length<=h;)n.push({level:n.length,items:[]});const f=u[2],g=`li-${String(h)}-${String(n[h].items.length)}`,N=Ie(f,g);n[h].items.push(L.jsx("li",{children:N},g))}else l.trim()===""?(r(),d(-1)):s.push(l)}),r(),d(-1),t};export{ao as $,$o as A,Eo as B,Po as C,Ao as D,Uo as E,xo as F,dn as G,zo as H,Oo as I,jo as J,Vo as K,G as L,Jo as M,qo as N,Qo as O,Yo as P,Mo as Q,Wo as R,Fo as S,Xo as T,ta as U,dt as V,rt as W,sn as X,Zo as Y,Ko as Z,lo as _,un as a,Ho as a0,To as a1,bo as a2,yo as a3,No as a4,vo as a5,wo as a6,Io as a7,po as a8,fo as a9,fe as aa,es as ab,ts as ac,ns as ad,Se as ae,Qa as af,Ze as ag,Xa as ah,Za as ai,co as aj,as as ak,Hn as al,Lo as am,me as an,Go as ao,ft as ap,yn as b,mn as c,fn as d,cn as e,bn as f,ho as g,ko as h,ln as i,go as j,jn as k,_o as l,Bo as m,So as n,oe as o,ro as p,io as q,uo as r,ct as s,oo as t,so as u,Ro as v,mo as w,mt as x,Co as y,Do as z};
