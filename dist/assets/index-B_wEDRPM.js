import{r,g as Jo,j as a,R as qo,h as Qo}from"./vendor-BKCITg7t.js";import{q as Xo,t as Zo,u as er,b as ze,c as He,f as yt,d as Bt,s as ot,v as tr,w as nr,x as Nt,i as Rn,y as On,o as he,z as mt,k as nt,A as Xa,B as ar,C as sr,E as Za,F as or,G as Xt,H as rr,I as ir,J as lr,K as es,L as cr,M as ts,N as ns,O as as,P as Fn,Q as dr,R as ss,S as ur,T as Ta,e as rn,U as pr,V as os,W as rs,X as is,Y as Zt,Z as mr,_ as bn,$ as Xe,m as _n,a0 as ln,a1 as hr,a2 as gr,a3 as fr,a4 as yr,a5 as ls,a6 as br,a7 as vr,a8 as vn,a9 as xr,aa as Ia,ab as tt,ac as wr,ad as Cr,ae as Sr,af as xn,ag as wn,ah as Nr,ai as Tr,aj as cs,ak as Ir,al as jr,am as Pr,an as kr,ao as Lr,ap as Ar}from"./utils-COMowhcu.js";import{U as Er,X as Dr,u as je,j as Ee,L as Fe,v as _e,G as Re,i as Oe,Y as ds,Z as Gn,l as Mr,_ as me,$ as Tn,V as en,a0 as In,A as Cn,a1 as ht,a2 as Tt,a3 as Un,a4 as Vn,a5 as ja,a6 as jn,a7 as us,a8 as $r,a9 as Pa,aa as Rr,M as at,ab as Or,ac as Fr,ad as _r,ae as Gr,af as Bn,ag as Ur,ah as Vr,ai as Br,aj as zr,ak as Hr,al as Wr,am as Yr,an as Sn,ao as Kr,ap as Jr,W as qr,aq as ps,ar as ms,as as Rt,e as hs,f as gs,g as tn,h as nn,at as fe,d as Pn,C as Ze,au as fs,av as Qr,aw as Xr,ax as Zr,ay as ei,az as ti,aA as ni,aB as ai,aC as si,aD as oi,aE as Ct,aF as St,aG as ka,N as ri,S as ii,aH as Ot,aI as La,aJ as kn,aK as Gt,aL as Qt,c as li,b as ci,a as di,D as ui,aM as Aa}from"./corrections-hMy39vI9.js";import{B as Y,I as pe,D as pi}from"./debug-B_MnnpX-.js";import{c as mi}from"./resources-S7kUJpgm.js";import"./gemini-C7Dr6FyN.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const c of o)if(c.type==="childList")for(const l of c.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&s(l)}).observe(document,{childList:!0,subtree:!0});function n(o){const c={};return o.integrity&&(c.integrity=o.integrity),o.referrerPolicy&&(c.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?c.credentials="include":o.crossOrigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function s(o){if(o.ep)return;o.ep=!0;const c=n(o);fetch(o.href,c)}})();const ys=()=>{const[e,t]=r.useState(Xo());return r.useEffect(()=>(Zo(t),()=>{er(t)}),[]),e},hi=`You are an AI assistant guiding a dialogue turn in a text-based adventure game. The player is in conversation with one or more NPCs. Your role is to:
1. Generate responses for the NPC(s) involved in the dialogue.
2. Provide from 4 to 8 first-person dialogue options for the player. The last option MUST be a way for the player to end the dialogue (e.g., "I should get going.", "That's all I needed to know.", "Let's talk another time.").
3. Optionally, indicate if the dialogue is ending from the NPC's side or if the list of participants changes.
4. Optionally add or remove participants of the dialogue, based on context.

Respond ONLY in JSON format with the following structure:
{
  "npcResponses": [ /* Include one entry for each NPC who may speaks this turn. It can be one or multiple NPCs. Speaker MUST be one of the current dialogue participants. Lines must be non-empty. */
    { "speaker": "NPCName1", "line": "What NPCName1 says this turn." }, /* REQUIRED. */
    { "speaker": "NPCName2", "line": "What NPCName2 says this turn, if they speak at all." }, /* Optional line from another Participant NPC. */
    ...
  ],
  "playerOptions": [ /* up to 8 total options */
    "Player's first dialogue choice (phrased in first-person, as if player is speaking, non-empty).",
    "Player's second dialogue choice.",
    ...
    "An AI-generated phrase for the player to end the dialogue (e.g., "Thanks, I'll be on my way.", "Enough! I don't want to talk to you."). This MUST be the last option."
  ],
  "dialogueEnds"?: boolean, /* Optional. Set to true if the NPC(s) clearly signal the end of the conversation, or if the conversation obviously reached its logical end. */
  "updatedParticipants"?: ["NPCName1", "NewNPCJoining", ...] /* Optional. Cannot be empty. Provide the new full list of participants if someone joins or leaves the conversation. If omitted, participants remain the same. DO NOT add Player's Character to the list. */
}

Instructions:
- NPC responses should be in-character, first-person responses, relevant to the ongoing dialogue and Narrator THOUGHTS guidance.
- CRITICALLY IMPORTANT: NPCs are not aware of the Narrator THOUGHTS, so they should NEVER reference the Narrator in their dialogue.
- Player options should be natural, first-person phrases. Ensure variety and meaningful choices.
- The LAST player option must always be a contextually appropriate way for the player to signal they wish to end the conversation.
- If the Player's latest response is a polite hint that the conversation is over, provide the final NPC responses and set "dialogueEnds" true.
- If "updatedParticipants" is provided, the dialogue continues with the new set of participants.
- Maintain thematic consistency based on the theme name and modifier provided in the prompt.
- Consider the player's gender subtly if it makes sense for the interactions, but don't make it overt.
`,Ut=`You are the Dungeon Master for a text-based adventure game. Your role is to describe scenes, provide action/dialogue choices, manage inventory, player goals, track known NPCs (including their presence, general location, and precise location in scene), and track local time/environment/place.
In your thinking focus less on the specific responses you will generate, and more on the overall detailed narrative flow, player engagement, and world consistency.

Local Time, Environment & Place Guide:
${Er}

Items Guide:
${Dr}

Player Input and Contextual Information:
- Very subtly and indirectly take into account Player's Character Gender, but do not focus attention on it in the text, only on its consequences.
- Current Theme Guidance gives you specific instructions about the setting, tone, and types of challenges or events to generate. Adhere to this guidance.
- If "localPlace" corresponds to a location in "Locations Nearby" list OR remained at the old location, always set "currentMapNodeId" to the name of that location.
- If "sceneDescription" or "logMessage" mentions a new significant NAMED location or feature that is NOT in 'Known Locations' list (nor by one of its aliases), describe it in "mapHint", and set "mapUpdated": true. The map service will handle adding it.
- If new distant quest-related and objective-related locations are mentioned but don't exist on the map, provide a short description of them, their surroundings, and how to reach them in "mapHint" for the Map AI.
- If "sceneDescription" or "logMessage" mentions a new NPC (i.e., not in 'Known NPCs in Current Theme' list), you MUST add it using "npcsAdded". If an existing NPC's description, aliases, or presence change significantly, use "npcsUpdated".
- Pay close attention to 'Active: true' items and their available actions.
- Compare the new Local Place of the Player to the precise locations of relevant NPCs, and update their presence state accordingly.
For example, leaving NPC's location makes them "distant", entering NPC's location makes them 'nearby' if they are still there, or 'unknown', is they moved while the player was not there.
If a Companion leaves the Player, or the Player leaves a Companion, their presence status changes to 'nearby' or, sometimes, 'distant', depending on context.
- The response MUST include "localTime", "localEnvironment", and "localPlace".
- If "mainQuest" or "currentObjective" change, they MUST be provided. Otherwise, they are optional.
- If the narrative implies any changes to the map (new details, locations, connections, status changes), set "mapUpdated": true and write about it in mapHint.
- If Player's Action is "Inspect: [item_name]": Provide details about the item in "logMessage". If new info/use is found, mention it in playerItemsHint.
- If Player's Action is "Attempt to use: [item_name]": Treat it as the most logical action. Describe the outcome in "logMessage". If specific function is revealed, mention the new knownUse in playerItemsHint.

CRITICALLY IMPORTANT: If "logMessage" or "sceneDescription" implies items were gained, lost, moved, or changed, you MUST summarize these changes using "playerItemsHint", "worldItemsHint", and "npcItemsHint" and list new items in "newItems".
CRITICALLY IMPORTANT: Names and Aliases (of items, places, NPCs, etc) cannot contain a comma.
`,gi=Mr.filter(e=>e!=="recovered"&&e!=="stashed"),bs={type:"object",properties:{sceneDescription:{type:"string",minLength:500,description:"Description of the scene, taking into account the entirety of the player's current situation and surroundings. Include relevant details the player must be aware of to make informed decisions. This should be an engaging text that sets the stage for the player's next actions."},options:{type:"array",minItems:ht,maxItems:ht,items:{type:"string"},description:`Exactly ${String(ht)} distinct action options for the player to choose to progress in the story, tailored to the context.`},logMessage:{type:"string",description:"Outcome of the player's previous actions, including any significant events, discoveries, or changes in the scene. This should be a concise narrative that captures the essence of what has happened since the last turn, providing additional context for the current scene."},localTime:{type:"string",description:"Concise description of current time. e.g. 'Midday', 'Early morning', '12:30'."},localEnvironment:{type:"string",description:"Brief sentence describing the current environment or weather. e.g. 'Clear skies, warm sun'."},localPlace:{type:"string",description:"Player's specific location in the scene, including the Place Name. e.g. 'Inside the Old Mill, near the quern'."},mainQuest:{type:"string",description:"Long-term goal for the player. Provide only when it changes."},currentObjective:{type:"string",description:"Short-term objective reflecting the next immediate task. Provide only when updated."},npcsAdded:{type:"array",description:"NPCs introduced this turn.",items:{type:"object",properties:{name:{type:"string",description:"Unique NPC name introduced this turn."},description:{type:"string",minLength:100,description:"Concise NPC description including role, appearance and personality."},aliases:{type:"array",items:{type:"string",minItems:1,maxItems:3},description:Cn},presenceStatus:{enum:In,description:"Current relation to the player: companion, nearby or distant."},lastKnownLocation:{type:"string",description:"General location when presenceStatus is distant or unknown."},preciseLocation:{type:"string",description:"NPC's exact position in the scene when presenceStatus is nearby or companion."}},required:["name","description","aliases","presenceStatus","lastKnownLocation"],additionalProperties:!1}},npcsUpdated:{type:"array",description:"Updates to existing NPCs.",items:{type:"object",properties:{name:{type:"string",description:"Existing NPC name or ID being updated."},newDescription:{type:"string",minLength:100,description:"Expanded or revised description for the NPC."},newAliases:{type:"array",items:{type:"string",minItems:1,maxItems:3},description:`${Cn} When provided, it replaces all old Aliases for this NPC.`},addAlias:{type:"string",description:`${Cn} Single alias to append to the NPC record.`},newPresenceStatus:{enum:In,description:"Updated relation to the player or scene."},newLastKnownLocation:{type:"string",description:"Updated general location if the NPC is away."},newPreciseLocation:{type:"string",description:"Updated exact position in the scene, when newPresenceStatus is nearby or companion."}},required:["name"],additionalProperties:!1}},newItems:{type:"array",description:'Brand new items that must appear in the game this turn. Also includes status effects and afflictions of the player with item type "status effect"',items:{type:"object",properties:{name:{type:"string",description:"Item name as it will appear to the player."},type:{enum:en,description:`Item type. One of ${Tn}`},description:{type:"string",description:"Concise explanation of what the item is."},activeDescription:{type:"string",description:"Optional description shown when the item is active or equipped."},isActive:{type:"boolean",description:"Whether the item is currently active, equipped, worn, or piloted (if vehicle)."},holderId:{type:"string",description:`ID or Name of the item holder. CAN be NPC, Location, or '${me}'. CAN NOT be an Item. Use '${me}' only if it is obvious from the context that the player actually acquired the item.`},tags:{type:"array",items:{enum:gi},description:`Descriptor tags. For written items such as page, book, map, picture, always supply the text style tag, one of ${Gn}. Assign 'junk' only to unusable items.`},chapters:{type:"array",description:`For the item types 'page', 'map', or 'picture' - exactly one chapter REQUIRED. For the item type 'book' - between ${String(Tt)} and ${String(Un)} chapters REQUIRED.`,items:{type:"object",properties:{heading:{type:"string",description:"Short heading for the chapter."},description:{type:"string",description:"Detailed abstract of the chapter contents."},contentLength:{type:"number",minLength:50,maxLength:500,description:"Approximate length in words."}},required:["heading","description","contentLength"],additionalProperties:!1}},knownUses:{type:"array",description:`Optional interactive uses not covered by ${ds}.`,items:{type:"object",properties:{actionName:{type:"string",description:"Name of the use action."},promptEffect:{type:"string",description:"Short effect description for the AI."},description:{type:"string",description:"Tooltip hint for this use."},appliesWhenActive:{type:"boolean",description:"Use is available when item is active."},appliesWhenInactive:{type:"boolean",description:"Use is available when item is inactive."}},required:["actionName","promptEffect","description"],additionalProperties:!1}}},required:["name","type","description"],additionalProperties:!1}},playerItemsHint:{type:"string",description:"Summary of player item gains, losses or state changes."},worldItemsHint:{type:"string",description:"Summary of items discovered or dropped in the world."},npcItemsHint:{type:"string",description:"Summary of items revealed to be carried by NPCs."},objectiveAchieved:{type:"boolean",description:"True when the current objective was successfully completed this turn."},dialogueSetup:{type:"object",description:"Initiates dialogue when context suggests a conversation begins.",properties:{participants:{type:"array",minItems:1,items:{type:"string"},description:"NPC names taking part in the conversation, excluding the player."},initialNpcResponses:{type:"array",minItems:1,items:{type:"object",properties:{speaker:{type:"string",description:"Speaker NPC delivering the line."},line:{type:"string",description:"Opening line spoken by the NPC."}},required:["speaker","line"],additionalProperties:!1}},initialPlayerOptions:{type:"array",minItems:4,maxItems:8,items:{type:"string"},description:"First-person dialogue choices, last one not necessarily politely, but contextually approprialely ends the conversation."}},required:["participants","initialNpcResponses","initialPlayerOptions"],additionalProperties:!1},mapUpdated:{type:"boolean",description:"Set to true if new locations or changes mean the map might need updating."},currentMapNodeId:{type:"string",description:"Name or ID of the map node the player is currently at."},mapHint:{type:"string",maxLength:1e3,description:"Short hints about new or changed relevant locations and their connections."}},required:["sceneDescription","options","logMessage","localTime","localEnvironment","localPlace"],additionalProperties:!1},Ln=async e=>{if(!je())return console.error("API Key not configured for Gemini Service."),Promise.reject(new Error("API Key not configured."));const t=await ze(async n=>{var s,o,c;try{console.log(`Executing storyteller turn (Attempt ${String(n+1)}/${String(Ee+1)})`),He(Fe.storyteller.icon);const{response:l,systemInstructionUsed:h,jsonSchemaUsed:i,promptUsed:d}=await _e({modelNames:[Oe],prompt:e,systemInstruction:Ut,temperature:1,thinkingBudget:4096,includeThoughts:!0,responseMimeType:"application/json",jsonSchema:bs,label:"Storyteller"}),g=(((c=(o=(s=l.candidates)==null?void 0:s[0])==null?void 0:o.content)==null?void 0:c.parts)??[]).filter(p=>p.thought===!0&&typeof p.text=="string").map(p=>p.text);return{result:{response:l,thoughts:g,systemInstructionUsed:h,jsonSchemaUsed:i,promptUsed:d}}}catch(l){throw console.error(`Error executing AI Main Turn (Attempt ${String(n+1)}/${String(Ee+1)}):`,l),l}});if(t)return t;throw new Error("Failed to execute AI Main Turn after maximum retries.")},fi=async(e,t,n)=>{if(!je())return console.error("API Key not configured for Gemini Service. Cannot summarize."),null;const s=n.slice(-20).join(`
 - `),o=`
You are a masterful storyteller tasked with summarizing a segment of a text-based adventure game.
The adventure took place in a theme called: "${e.name}".
The theme's specific guidance was: "${e.systemInstructionModifier}"

The player's last known situation (scene description) in this theme was:
"${t}"

Here are some of the recent key actions and events that occurred in this theme, leading up to that scene:
- ${s}

Based *only* on the provided last scene and the action log, provide a concise summary (target 5-7 sentences, absolute maximum 300 words) of what the player experienced and achieved in this theme segment. This summary will help the player recall their progress if they return to this theme later.
Focus on key discoveries, significant challenges overcome, and the general state of their progression *before* the last scene (including any Main Quest progress). Do not invent new information or outcomes beyond what's implied by the logs and the final scene.
The summary should be written in a narrative style, from a perspective that describes the player's journey.
Do not include any preamble. Just provide the summary text itself.
`;return await ze(async l=>{try{console.log(`Summarizing adventure for theme "${e.name}" (Attempt ${String(l+1)}/${String(Ee+1)})`),He(Fe.storyteller.icon);const{response:h}=await _e({modelNames:[Re,Oe],prompt:o,temperature:.8,label:"Summarize"}),i=(h.text??"").trim();if(i)return{result:i};console.warn(`executeAdventureSummary (Attempt ${String(l+1)}/${String(Ee+1)}): empty response`)}catch(h){throw console.error(`Error summarizing adventure for theme "${e.name}" (Attempt ${String(l+1)}/${String(Ee+1)}):`,h),h}return{result:null}})},yi=e=>{const{currentTheme:t,currentQuest:n,currentObjective:s,currentScene:o,localTime:c,localEnvironment:l,localPlace:h,knownMainMapNodesInTheme:i,knownNPCsInTheme:d,inventory:m,playerGender:g,dialogueHistory:p,playerLastUtterance:f,dialogueParticipants:w,relevantFacts:u}=e;let x=[...p];x.length>0&&x[x.length-1].speaker.toLowerCase()==="player"&&x[x.length-1].line===f&&(x=x.slice(0,-1));const C=x.map(N=>({...N}));let v=!1;for(let N=C.length-1;N>=0;N--){const O=C[N];O.speaker.toLowerCase()==="player"?v=!0:v&&"thought"in O&&delete O.thought}const j=C.map(N=>`${N.thought?`Narrator THOUGHTS: "${N.thought}"
`:""}${N.speaker}: "${N.line}"`).join(`
`),$=m.length>0?m.map(N=>`${N.name} (Type: ${N.type}, Active: ${String(!!N.isActive)})`).join(", "):"Empty",S=yt(i,!0,!1);let A="## Known NPCs: ";d.length>0?A+=d.map(N=>{let O=`"${N.name}" (Description: ${N.description}; Presence: ${N.presenceStatus}`;return N.presenceStatus==="nearby"||N.presenceStatus==="companion"?O+=` at ${N.preciseLocation??"around"}`:O+=`, last seen: ${N.lastKnownLocation??"Unknown"}`,O+=")",O}).join("; ")+".":A+="None specifically known.";let y="";w.forEach(N=>{const O=d.find(F=>F.name===N);O!=null&&O.dialogueSummaries&&O.dialogueSummaries.length>0&&(y+=`
Recent Past Conversations involving ${N}:
`,O.dialogueSummaries.slice(-3).forEach(D=>{y+=`- Summary: "${D.summaryText}" (Participants: ${D.participants.join(", ")}; Time: ${D.timestamp}; Location: ${D.location})
`}))});const E=u.length>0?u.map(N=>`- ${N}`).join(`
`):"None";return`**Context for Dialogue Turn**
Current Theme: "${t.name}";
System Instruction Modifier for Theme: "${t.systemInstructionModifier}";
Current Main Quest: "${n??"Not set"}";
Current Objective: "${s??"Not set"}";
Scene Description (for environmental context): "${o}";
Local Time: "${c??"Unknown"}", Environment: "${l??"Undetermined"}", Place: "${h??"Undetermined"}";
Player's Character Gender: ${g};

## Relevant Facts about the world:
${E}

## Player's Inventory:
${$}

## Known Locations:
${S}

${A}

## Dialogue Context:
- Current Dialogue Participants: ${w.join(", ")};
${y.trim()?y:`
- No specific past dialogue summaries available for current participants.`}

- Dialogue History (most recent last; lines starting with THOUGHT describe internal thoughts):
${j}

- Player's Last Utterance/Choice: "${f}"

Based on this context, provide the next part of the dialogue according to the DIALOGUE_SYSTEM_INSTRUCTION.
The NPC(s) should respond to the player's last utterance, taking into account any relevant past conversation summaries.
Provide new dialogue options, ensuring the last one is a way to end the dialogue.
`},bi=e=>{var c,l;const t=e.dialogueLog.map(h=>`${h.speaker}: "${h.line}"`).join(`
`),n=e.inventory.length>0?e.inventory.map(h=>`${h.name} (Type: ${h.type})`).join(", "):"Empty",s=yt(e.mapDataForTheme.nodes.filter(h=>h.data.nodeType!=="feature"),!0,!1);let o="Known NPCs: ";return e.knownNPCsInTheme.length>0?o+=e.knownNPCsInTheme.map(h=>{let i=`"${h.name}" (Description: ${h.description}; Presence: ${h.presenceStatus}`;return h.presenceStatus==="nearby"||h.presenceStatus==="companion"?i+=` at ${h.preciseLocation??"around"}`:i+=`, last seen: ${h.lastKnownLocation??"Unknown"}`,i+=")",i}).join("; ")+".":o+="None specifically known.",`
Context for Dialogue Summary:
- Current Theme: "${((c=e.currentThemeObject)==null?void 0:c.name)??e.themeName}"
- System Instruction Modifier for Theme: "${((l=e.currentThemeObject)==null?void 0:l.systemInstructionModifier)??"None"}"
- Current Main Quest (before dialogue): "${e.mainQuest??"Not set"}"
- Current Objective (before dialogue): "${e.currentObjective??"Not set"}"
- Scene Description (when dialogue started): "${e.currentScene}"
- Local Time: "${e.localTime??"Unknown"}", Environment: "${e.localEnvironment??"Undetermined"}", Place: "${e.localPlace??"Undetermined"}"
- Player's Character Gender: "${e.playerGender}"

- Player's Inventory (before dialogue):
${n}
- Known Locations (before dialogue):
${s}
- ${o}
- Dialogue Participants: ${e.dialogueParticipants.join(", ")}

## Full Dialogue Transcript:
${t}

Based *only* on the Dialogue Transcript and the provided context, determine what specific game state changes (items, NPCs, quest/objective updates, log message, map updates) resulted *directly* from this dialogue.
The "logMessage" field in your response should be a concise summary suitable for the main game log.
Provide the next scene description and ${String(ht)} action options for the player as you would for a normal game turn.
If the dialogue revealed a new alias for an existing NPC, use "npcsUpdated" with "addAlias".
If the dialogue changed some NPC's general whereabouts, use "newLastKnownLocation" in "npcsUpdated".
If the dialogue revealed new map information (new locations, changed accessibility, etc.), or if Player's own location changed over the course of the dialogue, then set "mapUpdated": true.
`},vi=e=>{var o,c;const t=e.dialogueLog.map(l=>`  ${l.speaker}: ${l.line}`).join(`
`),n=`You are an AI assistant creating a detailed memory of a conversation. This memory will be remembered by the NPCs who participated.
Your task is to write a concise yet detailed summary of the conversation.
The summary should be between 500 and 1500 characters. It should be written from the point of view of the Conversation Participants other than the Player.
The summary should ALWAYS mention all names and the "Player" explicitly without pronouns.
It should capture:
- Key topics discussed.
- Important information revealed or exchanged by any participant.
- Significant decisions made or outcomes reached.
- The overall emotional tone or atmosphere of the conversation.
- Any impressions or key takeaways the NPCs might have.

Output ONLY the summary text. Do NOT use JSON or formatting. Do NOT include any preamble like "Here is the summary:".`,s=`Generate a memory summary for the following conversation:
- Conversation Participants: ${e.dialogueParticipants.join(", ")}
- Theme: "${((o=e.currentThemeObject)==null?void 0:o.name)??e.themeName}" (${((c=e.currentThemeObject)==null?void 0:c.systemInstructionModifier)??"None"})
- Scene at the start of conversation: "${e.currentScene}"
- Context: Time: "${e.localTime??"Unknown"}", Environment: "${e.localEnvironment??"Undetermined"}", Place: "${e.localPlace??"Undetermined"}"

## Full Dialogue Transcript:
${t}

Output ONLY the summary text. Do NOT use JSON or formatting. Do NOT include any preamble like "Here is the summary:".`;return{systemInstructionPart:n,userPromptPart:s}};function xi(e,t){if(!e||typeof e!="object")return console.warn("parseAIResponse: Parsed data is not a valid object.",e),t==null||t(),null;const n=e;return typeof n.sceneDescription!="string"||n.sceneDescription.trim()===""?(console.warn("parseAIResponse: sceneDescription is missing or empty.",e),t==null||t(),null):(n.mainQuest===void 0||n.mainQuest===null||typeof n.mainQuest=="string")&&(n.currentObjective===void 0||n.currentObjective===null||typeof n.currentObjective=="string")&&(n.logMessage===void 0||n.logMessage===null||typeof n.logMessage=="string")&&(n.npcsAdded===void 0||n.npcsAdded===null||Array.isArray(n.npcsAdded))&&(n.npcsUpdated===void 0||n.npcsUpdated===null||Array.isArray(n.npcsUpdated))&&(n.objectiveAchieved===void 0||n.objectiveAchieved===null||typeof n.objectiveAchieved=="boolean")&&(n.localTime===void 0||n.localTime===null||typeof n.localTime=="string")&&(n.localEnvironment===void 0||n.localEnvironment===null||typeof n.localEnvironment=="string")&&(n.localPlace===void 0||n.localPlace===null||typeof n.localPlace=="string")&&(n.dialogueSetup===void 0||n.dialogueSetup===null||typeof n.dialogueSetup=="object")&&(n.mapUpdated===void 0||n.mapUpdated===null||typeof n.mapUpdated=="boolean")&&(n.currentMapNodeId===void 0||n.currentMapNodeId===null||typeof n.currentMapNodeId=="string")&&(n.mapHint===void 0||n.mapHint===null||typeof n.mapHint=="string")&&(n.playerItemsHint===void 0||n.playerItemsHint===null||typeof n.playerItemsHint=="string")&&(n.worldItemsHint===void 0||n.worldItemsHint===null||typeof n.worldItemsHint=="string")&&(n.npcItemsHint===void 0||n.npcItemsHint===null||typeof n.npcItemsHint=="string")&&(n.newItems===void 0||n.newItems===null||Array.isArray(n.newItems))?nr(n):(console.warn("parseAIResponse: Basic field validation failed (pre-dialogue specifics and array checks).",e),t==null||t(),null)}async function wi(e,t){var c;let n=e.dialogueSetup,s=Array.isArray(e.options)?e.options:[],o=!1;if(n){let l=ja(n);if(!l){console.warn("parseAIResponse: 'dialogueSetup' is present but malformed. Attempting correction.");const h=[...t.allRelevantNPCs];(e.npcsAdded??[]).forEach(d=>{jn(d)&&h.push({...d,id:Nt(d.name),themeName:"",presenceStatus:d.presenceStatus??"unknown",lastKnownLocation:d.lastKnownLocation??null,preciseLocation:d.preciseLocation??null})}),(e.npcsUpdated??[]).forEach(d=>{if(us(d)){const m=t.allRelevantNPCs.find(g=>g.name===d.name);h.push({id:Nt(d.name),name:d.name,description:d.newDescription??(m==null?void 0:m.description)??"Updated NPC",aliases:d.newAliases??(m==null?void 0:m.aliases)??[],themeName:"",presenceStatus:d.newPresenceStatus??(m==null?void 0:m.presenceStatus)??"unknown",lastKnownLocation:d.newLastKnownLocation??(m==null?void 0:m.lastKnownLocation)??null,preciseLocation:d.newPreciseLocation??(m==null?void 0:m.preciseLocation)??null})}});const i=await $r(t.logMessageFromPayload??e.logMessage,t.sceneDescriptionFromPayload??e.sceneDescription,t.currentTheme,h,t.allRelevantMainMapNodesForCorrection,t.currentInventoryForCorrection,t.playerGender,n);i&&ja(i)?(n=i,l=!0,console.log("parseAIResponse: Successfully corrected 'dialogueSetup'.")):(console.warn("parseAIResponse: Failed to correct 'dialogueSetup' or corrected version is still invalid. Discarding dialogue attempt."),n=void 0,l=!1)}o=l&&!!n,o&&(s=[])}return!o&&(n=void 0,!Array.isArray(s)||!s.every(l=>typeof l=="string"))?(console.warn("parseAIResponse: options are missing or invalid (must be array of strings) when not in dialogue.",e),(c=t.onParseAttemptFailed)==null||c.call(t),null):{dialogueSetup:n,options:s,isDialogueTurn:o}}async function Ci(e,t,n,s){const o=[];if(Array.isArray(e))for(const i of e){const d=typeof i=="object"&&i!==null&&"name"in i?i.name:void 0;if(jn(i))o.push({...i,id:Nt(i.name),presenceStatus:i.presenceStatus??"unknown",lastKnownLocation:i.lastKnownLocation??null,preciseLocation:i.preciseLocation??null,themeName:""});else{console.warn(`parseAIResponse ('npcsAdded'): Invalid NPC structure for "${d??"Unknown Name"}". Attempting correction.`);const m=await Pa(d??"Newly Mentioned NPC",s.logMessageFromPayload??n.logMessage,s.sceneDescriptionFromPayload??n.sceneDescription,s.currentTheme,s.allRelevantMainMapNodesForCorrection);if(m){const g=m.description.split(" ").slice(0,2).join(" ")||"Corrected NPC",p={name:d??g,description:m.description,aliases:m.aliases,presenceStatus:m.presenceStatus,lastKnownLocation:m.lastKnownLocation,preciseLocation:m.preciseLocation};jn(p)?(o.push({...p,id:Nt(p.name),themeName:""}),console.log("parseAIResponse ('npcsAdded'): Successfully corrected NPC:",p.name)):console.warn(`parseAIResponse ('npcsAdded'): Corrected NPC "${d??"Unknown Name"}" still invalid. Discarding. Corrected Data:`,p)}else console.warn(`parseAIResponse ('npcsAdded'): Failed to correct NPC "${d??"Unknown Name"}". Discarding.`)}}else e!==void 0&&console.warn("parseAIResponse ('npcsAdded'): Field was present but not an array.",e);const c=Array.isArray(t)?t:[],l=[];for(const i of c)if(typeof i=="object"&&i!==null&&"name"in i&&typeof i.name=="string"&&i.name.trim()!==""){const d={...i,name:i.name},m=d.name,g=new Set([...s.allRelevantNPCs.map(p=>p.name),...o.map(p=>p.name)]);if(!g.has(d.name)){console.warn(`parseAIResponse ('npcsUpdated'): Original target name "${m}" not found. Attempting name correction.`);const p=await Vn("NPC name",d.name,s.logMessageFromPayload??n.logMessage,s.sceneDescriptionFromPayload??n.sceneDescription,Array.from(g),s.currentTheme);p&&p.trim()!==""?(d.name=p,console.log(`parseAIResponse ('npcsUpdated'): Corrected target name to "${p}".`)):console.warn(`parseAIResponse ('npcsUpdated'): Failed to correct target name for "${m}". Will attempt to process as is, may convert to 'add'.`)}us(d)?l.push(d):console.warn(`parseAIResponse ('npcsUpdated'): Payload for "${m}" is invalid after potential name correction. Discarding. Payload:`,d)}else console.warn("parseAIResponse ('npcsUpdated'): Update missing or has invalid 'name'. Discarding.",i);const h=[];for(const i of l){const d=i.name,m=s.allRelevantNPCs.some(f=>f.name===d),g=o.findIndex(f=>f.name===d),p=g!==-1;if(m||p){if(h.push(i),p){const f=o[g];i.newDescription!==void 0&&(f.description=i.newDescription),i.newAliases!==void 0&&(f.aliases=i.newAliases),i.addAlias&&(f.aliases=Array.from(new Set([...f.aliases??[],i.addAlias]))),i.newPresenceStatus!==void 0&&(f.presenceStatus=i.newPresenceStatus),i.newLastKnownLocation!==void 0&&(f.lastKnownLocation=i.newLastKnownLocation),i.newPreciseLocation!==void 0&&(f.preciseLocation=i.newPreciseLocation),f.presenceStatus==="distant"||f.presenceStatus==="unknown"?f.preciseLocation=null:f.preciseLocation??(f.preciseLocation=f.presenceStatus==="companion"?"with you":"nearby in the scene"),o[g]=f}}else{console.warn(`parseAIResponse ('npcsUpdated'): Target NPC "${d}" for update not found. Converting to an add operation.`);const f={id:Nt(d),name:d,description:i.newDescription??`Details for ${d} are emerging.`,aliases:i.newAliases??(i.addAlias?[i.addAlias]:[]),themeName:"",presenceStatus:i.newPresenceStatus??"unknown",lastKnownLocation:i.newLastKnownLocation??null,preciseLocation:i.newPreciseLocation??null};if(f.description===`Details for ${d} are emerging.`){const u=await Pa(d,s.logMessageFromPayload??n.logMessage,s.sceneDescriptionFromPayload??n.sceneDescription,s.currentTheme,s.allRelevantMainMapNodesForCorrection);u&&(f.description=u.description,f.aliases=Array.from(new Set([...f.aliases??[],...u.aliases])),f.presenceStatus=u.presenceStatus,f.lastKnownLocation=u.lastKnownLocation,f.preciseLocation=u.preciseLocation)}f.presenceStatus==="distant"||f.presenceStatus==="unknown"?f.preciseLocation=null:f.preciseLocation??(f.preciseLocation=f.presenceStatus==="companion"?"with you":"nearby in the scene");const w=o.findIndex(u=>u.name===f.name);w===-1?o.push(f):o[w]={...o[w],...f}}}return{npcsAdded:o,npcsUpdated:h}}async function an(e,t,n,s,o,c,l=[],h={nodes:[],edges:[]},i=[]){var g,p,f;const d=Bt(e),m=h.nodes.filter(w=>w.data.nodeType!=="feature");try{const w=ot(d);if(w===null)throw new Error("JSON parse failed");const u=xi(w,s);if(!u)return null;const x={playerGender:t,currentTheme:n,onParseAttemptFailed:s,logMessageFromPayload:o,sceneDescriptionFromPayload:c,allRelevantNPCs:l,allRelevantMainMapNodesForCorrection:m,currentInventoryForCorrection:i},C=await wi(u,x);if(!C)return null;u.dialogueSetup=C.dialogueSetup,u.options=C.options;let v=C.isDialogueTurn;u.itemChange=[];const j=await Ci(u.npcsAdded,u.npcsUpdated,u,x);if(u.npcsAdded=j.npcsAdded,u.npcsUpdated=j.npcsUpdated,v&&u.dialogueSetup){const $=new Set([...l.map(A=>A.name),...u.npcsAdded.map(A=>A.name),...u.npcsUpdated.map(A=>A.name)]),S=[];for(const A of u.dialogueSetup.participants)if($.has(A))S.push(A);else{console.warn(`parseAIResponse: Dialogue participant "${A}" is not among known or newly added/updated NPCs. Attempting name correction against this turn's NPCs.`);const y=await Vn("dialogue participant",A,o??u.logMessage,c??u.sceneDescription,Array.from($),n);y&&$.has(y)?(S.push(y),console.log(`parseAIResponse: Corrected dialogue participant name from "${A}" to "${y}".`)):console.warn(`parseAIResponse: Dialogue participant "${A}" could not be validated/corrected against this turn's NPCs. Discarding participant.`)}S.length===0&&u.dialogueSetup.participants.length>0?(console.warn("parseAIResponse: No valid dialogue participants remain after final name validation. Discarding dialogue attempt."),u.dialogueSetup=void 0,v=!1,(!Array.isArray(u.options)||u.options.length===0||!u.options.every(A=>typeof A=="string"&&A.trim()!==""))&&(console.warn("parseAIResponse: options invalid after dialogue cancellation. Resetting to default failsafe.",u.options),u.options=["Look around.","Ponder the situation.","Check inventory.","Try to move on.","Consider your objective.","Plan your next steps."])):u.dialogueSetup.participants=S}if(v)u.options=[];else{if(!Array.isArray(u.options)||u.options.length===0||!u.options.every($=>typeof $=="string"&&$.trim()!==""))return console.warn("parseAIResponse: options are missing, empty, or invalid when not inDialogue (final check).",u.options),s==null||s(),null;for(;u.options.length<ht;)u.options.push("...");u.options.length>ht&&(u.options=u.options.slice(0,ht))}return u.objectiveAchieved=u.objectiveAchieved??!1,u.localTime=((g=u.localTime)==null?void 0:g.trim())??"Time Unknown",u.localEnvironment=((p=u.localEnvironment)==null?void 0:p.trim())??"Environment Undetermined",u.localPlace=((f=u.localPlace)==null?void 0:f.trim())??"Undetermined Location",tr(u),delete u.placesAdded,delete u.placesUpdated,u}catch(w){return console.warn("parseAIResponse: Failed to parse JSON response from AI. This attempt will be considered a failure.",w),console.debug("parseAIResponse: Original response text (before any processing):",e),console.debug("parseAIResponse: JSON string after fence stripping (if any, input to JSON.parse):",d),s==null||s(),null}}const Si={type:"object",properties:{npcResponses:{type:"array",minItems:1,description:"NPC lines for this turn. Each speaker must be an active participant and lines must be non-empty.",items:{type:"object",properties:{speaker:{type:"string"},line:{type:"string"}},required:["speaker","line"],additionalProperties:!1}},playerOptions:{type:"array",minItems:Fr,maxItems:Or,description:"Possible player replies. The last option must politely or firmly end the conversation.",items:{type:"string"}},dialogueEnds:{type:"boolean",description:"Set true when the NPCs indicate the conversation is over or naturally concludes."},updatedParticipants:{type:"array",minItems:1,description:"Provide the new full list of participants if it changes. Don't include the player.",items:{type:"string"}}},required:["npcResponses","playerOptions"],additionalProperties:!1},Ni=async(e,t,n,s,o,c,l,h,i,d,m,g,p,f,w)=>{if(!je())return console.error("API Key not configured for Dialogue Service."),Promise.reject(new Error("API Key not configured."));const u=yi({currentTheme:e,currentQuest:t,currentObjective:n,currentScene:s,localTime:o,localEnvironment:c,localPlace:l,knownMainMapNodesInTheme:h,knownNPCsInTheme:i,inventory:d,playerGender:m,dialogueHistory:g,playerLastUtterance:p,dialogueParticipants:f,relevantFacts:w}),x=await ze(async C=>{var v,j,$;try{console.log(`Fetching dialogue turn (Participants: ${f.join(", ")}, Attempt ${String(C+1)}/${String(Ee+1)})`),He(Fe.dialogue_turn.icon);const{response:S}=await _e({modelNames:[Re,Oe],prompt:u,systemInstruction:hi,temperature:.8,responseMimeType:"application/json",thinkingBudget:512,includeThoughts:!0,jsonSchema:Si,label:"Dialogue"}),y=((($=(j=(v=S.candidates)==null?void 0:v[0])==null?void 0:j.content)==null?void 0:$.parts)??[]).filter(N=>N.thought===!0&&typeof N.text=="string").map(N=>N.text);let E=_r(S.text??"",y);if(E??(E=await Gr(S.text??"",f,e,y)),E)return{result:{parsed:E,rawResponse:S.text??"",thoughts:y}};console.warn(`executeDialogueTurn (Attempt ${String(C+1)}/${String(Ee+1)}): invalid response even after correction`)}catch(S){throw console.error(`Error fetching dialogue turn (Attempt ${String(C+1)}/${String(Ee+1)}):`,S),S}return{result:null}});if(x)return{parsed:x.parsed,prompt:u,rawResponse:x.rawResponse,thoughts:x.thoughts};throw new Error("Failed to fetch dialogue turn after maximum retries.")},Ti=async e=>{if(!je())return console.error("API Key not configured for Dialogue Summary Service."),Promise.reject(new Error("API Key not configured."));if(!e.currentThemeObject)return console.error("DialogueSummaryContext missing currentThemeObject. Cannot summarize dialogue."),Promise.reject(new Error("DialogueSummaryContext missing currentThemeObject."));const t=e.currentThemeObject,n=bi(e),s=await ze(async o=>{var c,l,h;try{console.log(`Summarizing dialogue with ${e.dialogueParticipants.join(", ")}, Attempt ${String(o+1)}/${String(Ee+1)})`),He(Fe.dialogue_summary.icon);const{response:i}=await _e({modelNames:[Oe],prompt:n,systemInstruction:Ut,temperature:1,responseMimeType:"application/json",thinkingBudget:4096,includeThoughts:!0,jsonSchema:bs,label:"Storyteller"}),m=(((h=(l=(c=i.candidates)==null?void 0:c[0])==null?void 0:l.content)==null?void 0:h.parts)??[]).filter(p=>p.thought===!0&&typeof p.text=="string").map(p=>p.text),g=await an(i.text??"",e.playerGender,t,void 0,void 0,void 0,e.knownNPCsInTheme,e.mapDataForTheme,e.inventory);if(g)return{result:{parsed:g,rawResponse:i.text??"",thoughts:m}};console.warn(`executeDialogueSummary (Attempt ${String(o+1)}/${String(Ee+1)}): invalid JSON, retrying`)}catch(i){throw console.error(`Error summarizing dialogue (Attempt ${String(o+1)}/${String(Ee+1)}):`,i),i}return{result:null}});return s?{parsed:s.parsed,prompt:n,rawResponse:s.rawResponse,thoughts:s.thoughts}:{parsed:null,prompt:n,rawResponse:"",thoughts:[]}},Ii=async e=>{if(!je())return console.error("API Key not configured for Dialogue Memory Summary Service."),null;if(!e.currentThemeObject)return console.error("DialogueMemorySummaryContext missing currentThemeObject. Cannot summarize memory."),null;const{systemInstructionPart:t,userPromptPart:n}=vi(e);return await ze(async o=>{var c;try{console.log(`Generating memory summary for dialogue with ${e.dialogueParticipants.join(", ")}, Attempt ${String(o+1)}/${String(Ee+1)})`),He(Fe.dialogue_memory_creation.icon);const{response:l}=await _e({modelNames:[at,Re],prompt:n,systemInstruction:t,temperature:Rr,label:"Corrections"}),h=((c=l.text)==null?void 0:c.trim())??null;if(h&&h.length>0)return console.log(`summarizeDialogueForMemory: ${e.dialogueParticipants.join(", ")} will remember ${h}`),{result:h};console.warn(`executeMemorySummary (Attempt ${String(o+1)}/${String(Ee+1)}): empty memory text`)}catch(l){if(console.error(`Error generating memory summary (Attempt ${String(o+1)}/${String(Ee+1)}):`,l),!Rn(l))return{result:null,retry:!1};throw l}return{result:null}})??null},ji=(e,t)=>`Theme: ${e}

  ## Context:
${t}

List immutable facts according to your instructions. Return JSON as:
[{"text": "fact", "entities": ["id1", "id2"]}]
`,Pi=(e,t,n)=>{const s=t.map(c=>`- ${c.text} [${c.entities.join(", ")}]`).join(`
`)||"None.",o=n.map(c=>`- ${c.text} [${c.entities.join(", ")}]`).join(`
`)||"None.";return`Theme: ${e}

  ## Known Facts:
${s}

  ## New Candidate Facts:
${o}
  
Provide integration instructions acording to your instructions.
`},ki=(e,t,n,s,o,c)=>{const l=t.map((i,d)=>`${String(d+1)}. (Tier ${String(i.tier)}) ${i.text}`).join(`
`),h=o.map(i=>`- ${i}`).join(`
`);return`**Context for Fact Selection**
Theme: ${e}
Last Scene: "${n}"
Recent Log:
${h}
${c}

Player Action: "${s}"
  
------
  
Select the 10 most relevant facts from the list of Known Facts:
${l}
`},Li=(e,t,n,s,o,c)=>{const l=t.map(d=>`- ID ${String(d.id)}: "${d.text}" (Tier ${String(d.tier)})`).join(`
`),h=o.map(d=>`- ${d}`).join(`
`),i=c.map(d=>`- ${d}`).join(`
`);return`Theme: ${e}
Current Quest: ${n??"None"}
Current Objective: ${s??"None"}

## Inventory Items:
${h||"None"}

## Known Places:
${i||"None"}

## Current Facts:
${l}

Identify pairs of facts that could be merged into a single, more specific statement.
Delete facts that reference obsolete quests, objectives, items or places. If merging or deleting, provide instructions.
`},Ai=e=>{if(!e||typeof e!="object")return!1;const t=e;if(typeof t.action!="string")return!1;if(t.fact){const n=t.fact;if((n==null?void 0:n.entities)!==void 0&&(!Array.isArray(n.entities)||!n.entities.every(s=>typeof s=="string")))return!1}return!0},Ei=e=>{const t=Bt(e),n=ot(t);return n&&Array.isArray(n)&&n.every(s=>{if(!s||typeof s!="object")return!1;const o=s.entities;return typeof s.text=="string"&&Array.isArray(o)&&o.every(c=>typeof c=="string")})?n:null},vs=(e,t=[])=>{const n=Bt(e),s=ot(n);if(!s||typeof s!="object")return null;const o=s,c=[],l=t.map(m=>m.id);if(Array.isArray(o.factsChange)&&o.factsChange.forEach(m=>{Ai(m)&&(m.fact&&(m.fact.entities=Array.isArray(m.fact.entities)?m.fact.entities.filter(g=>typeof g=="string"):[]),c.push(m))}),c.some(m=>(m.action==="change"||m.action==="delete")&&(typeof m.id!="number"||!l.includes(m.id))))return null;const h=typeof o.loreRefinementOutcome=="string"?o.loreRefinementOutcome:"",i=typeof o.observations=="string"?o.observations:void 0,d=typeof o.rationale=="string"?o.rationale:void 0;return{factsChange:c,loreRefinementOutcome:h,observations:i,rationale:d}},Di=e=>{const t=Bt(e),n=ot(t);return n&&Array.isArray(n)&&n.every(s=>typeof s=="string")?n:null},Mi=`You are the Loremaster, collecting immutable facts about the game world from narrative context.
Your sole task is to harvest immutable, setting-level facts from the surrounding narrative and return them as a JSON array of objects with "text" and "entities" fields.
The "entities" array should list IDs of map nodes, NPCs or items referenced in the fact.
Each fact must aid long-term continuity and world-building.

## What is a valid fact? Think “map pins & rulebook notes”
- Geography & structures, such as Stable locations, routes, landmarks, architecture, for example: “The Citadel of Glass rises at the mouth of the Azure Gulf.”
- Lore & history, such as Past events, legendary deeds, consequences, for example: “The War of Ashes ended with the signing of the Ember Accord.”
- Cultural rules & customs, such as Laws, taboos, rituals, social hierarchies, for example: “Necromancy is outlawed within the Kingdom of Silverpine.”
- Relationships & roles, such as Power structures, affiliations, well-known titles, for example: “The Order of Verdant Flame answers directly to the crown.”
- Properties of artefacts or creatures, such as Enduring traits that future scenes should honour, for example: “Obsidian golems can be shattered only by sound of a crystal horn.”

## What to reject outright:
- Ephemeral or player-centric details;
- Reference non-specific nondescript directions or locations - a tavern, a path, a road, a plain, a river, a forest, a mountain, a city, a kingdom, a continent, etc.;
- Current weather, smells, lighting, time of day;
- Sensory “vibe” descriptions (“The market buzzes with chatter”);
- Player inventory, position, quests, feelings, level, dialogue;
- Transactional minutiae - Prices, haggling, countdowns to completion;
- Unverified rumours or philosophical musings - “It is said that…”, “True readiness involves an open spirit…”;
- Bare names or cosmetic trivia “The tavern keeper is named Jorim.”;
- Clothing colours unless culturally significant;
- Duplicates or contradictions;
- Statements already recorded or that clash with existing facts.

## Quality checklist (run mentally for every candidate)
- Standalone? Reads clearly and specific enough to be understood without outside context.
- Enduring? Will still matter a week of in-game time later.
- World-level? Describes the setting, not the current scene.
- Certain? Factual, not conjecture or flavour text.
- Non-redundant? Adds something new (no near-duplicates).

## Examples of *good* quality facts:
- "The city of Dorim is carved into a cliff face.",
- "A secret tunnel links the tavern cellar to the old crypt.",
- "The black market dealer's nickname is Catfish.",
- "The password to the lower deck service console is qwerty123.",
- "The city of Copperhaven is built on three terraced plateaus.",
- "A crystal bridge spans the River Umber beneath the northern plateau.",
- "The Sapphire Guild controls all official cartography in the realm.",
- "Defeating a stone golem requires striking the rune on its chest.",
- "The High Council convenes at dawn on the first day of every month.",
- "The catacombs under Copperhaven were sealed two centuries ago after a plague."

## Examples of *bad* quality and irrelevant facts to avoid:
- "The weather is rainy." (Weather is too transient)
- "The player is in a tavern." (Contextual information, not a fact)
- "The player posesses a sword." (Player actions or possessions are not world facts)
- "The player is thinking about their plans." (Player dialogue is not a fact)
- "The player is a human." (Player characteristics are not world facts)
- "The player is a level 5 warrior." (Player attributes are not world facts)
- "The player is accompanied by an elf." (Player companions are not world facts)
- "It is night time outside." (Time of day is too transient)
- "Joseph said 'It is dangerous in the catacombs'." (Dialogue is not a fact)
- "Kevin stated, 'The forest is haunted'." (Dialogue is not a fact)
- "A gentle breeze blows through the trees." (Weather is too transient)
- "The player carries a rusty dagger." (Player possessions are not world facts)
- "A merchant offers apples for two copper coins." (Transactional details are not world facts)
- "The alley smells of wet garbage." (Sensory details are not world facts)
- "Gregory says, 'Beware the king!'" (Dialogue is not a fact)
- "Morning sunlight warms the streets." (Time of day is too transient)
- "It is rumored that dragons might exist somewhere." (Conjecture is not a fact)

CRITICALLY IMPORTANT: DO NOT include bad quality and irrelevant facts.
`,Ea=`You are the Loremaster integrating newly discovered facts with existing lore, while avoiding overlaps and potential contradictions.
In your JSON response, 'action' field MUST always be 'add'.`,Da=`You are the Loremaster selecting relevant known facts.
Relevant facts are those that directly inform the next scene: details the NPCs might reference, rules that shape the environment, or recent events likely to influence decisions.
Select the ten most important facts for the upcoming story turn.
`,Ma=`You are the Loremaster refining and pruning accumulated facts.
1. Look for statements that describe the same idea and merge them into a single, more specific fact. Keep the length of the merged fact under 200 words. Split any fact longer than 200 words into two non-overlapping facts.
Increase the tier of the merged fact by one.

2. Prune facts that reference obsolete or irrelevant details, such as:
- places that no longer exist;
- items that no longer exist;
- old quest and objective that is different from the current quest and objective.
`,$i={type:"array",items:{type:"object",properties:{text:{type:"string"},entities:{type:"array",items:{type:"string"}}},required:["text","entities"],additionalProperties:!1,description:"A fact extracted from the context that satisfies the requirement for the *good* quality fact and does not show signs of a *bad* quality fact."}},$a={type:"array",minItems:10,maxItems:10,description:"From the provided facts list select 10 most important facts for the upcoming story turn.",items:{type:"string"}},Ra={type:"object",properties:{observations:{type:"string",minLength:500,description:"Minimum 300 words. Observations about the lore state and the proposed new facts, e.g. There are 3 facts that can be merged. Some of the facts may be too vague or obsolete to be included..."},rationale:{type:"string",minLength:500,description:"Minimum 300 words. Rationale for and against including the proposed facts into the lore, e.g. Most facts are good enough to be included in the lore. However, the facts about the old tavern are no longer relevant. The fact about *a path* leading to the church is too vague - a more concrete named path should have been mentioned instead. I will omit these facts."},factsChange:{type:"array",items:{type:"object",properties:{action:{enum:["add"],description:'Always equal to "add" exactly.'},fact:{type:"object",properties:{text:{type:"string",description:"Must be one of the accepted *New Candidate Facts*."},entities:{type:"array",items:{type:"string"}}},required:["text","entities"],additionalProperties:!1}},required:["action","fact"],additionalProperties:!1}}},required:["observations","rationale","factsChange"],additionalProperties:!1},Oa={type:"object",properties:{observations:{type:"string",minLength:500,description:"Minimum 300 words. Observations about the lore state, close duplicates, too vague facts."},rationale:{type:"string",minLength:500,description:"Minimum 300 words. Rationale for the proposed mergers, splits, and deletions."},factsChange:{type:"array",items:{type:"object",properties:{action:{enum:["add","change","delete"]},id:{type:"integer",description:"Required for *change* and *delete* actions."},fact:{type:"object",description:"REQUIRED for the *add* and *change* actions. Omitted for the *delete* action.",properties:{text:{type:"string",description:"REQUIRED for the *add* and *change* actions."},entities:{type:"array",items:{type:"string"}},tier:{type:"integer",description:"Omit tier for *add* action. Increase tier by one for *change* action, when any number of other facts are merged into this one.",default:1}},required:["text","entities"],additionalProperties:!1}},required:["action"],additionalProperties:!1}}},required:["observations","rationale","factsChange"],additionalProperties:!1},Ri=async e=>{if(!je())return console.error("refineLore_Service: API not configured"),null;const{themeName:t,turnContext:n,existingFacts:s,onFactsExtracted:o}=e,c=ji(t,n),l=await ze(async()=>{var u,x,C,v;(u=e.onSetLoadingReason)==null||u.call(e,"loremaster_extract"),He(Fe.loremaster_extract.icon);const{response:d,systemInstructionUsed:m,jsonSchemaUsed:g,promptUsed:p}=await _e({modelNames:[Re,Oe],prompt:c,systemInstruction:Mi,thinkingBudget:512,includeThoughts:!0,responseMimeType:"application/json",jsonSchema:$i,temperature:.7,label:"LoremasterExtract"}),w=(((v=(C=(x=d.candidates)==null?void 0:x[0])==null?void 0:C.content)==null?void 0:v.parts)??[]).filter(j=>j.thought===!0&&typeof j.text=="string").map(j=>j.text);return{result:{parsed:Ei(d.text??""),raw:d.text??"",thoughts:w,systemInstructionUsed:m,jsonSchemaUsed:g,promptUsed:p}}});if(!l)return null;if(o){const{proceed:d}=await o(l.parsed??[]);if(!d)return{refinementResult:null,debugInfo:{extract:{prompt:l.promptUsed,systemInstruction:l.systemInstructionUsed,jsonSchema:l.jsonSchemaUsed,rawResponse:l.raw,parsedPayload:l.parsed??void 0,thoughts:l.thoughts},integrate:null}}}const h=Pi(t,s,l.parsed??[]),i=await ze(async()=>{var x,C,v,j;(x=e.onSetLoadingReason)==null||x.call(e,"loremaster_write"),He(Fe.loremaster_write.icon);const{response:d,systemInstructionUsed:m,jsonSchemaUsed:g,promptUsed:p}=await _e({modelNames:[Re,Oe],prompt:h,systemInstruction:Ea,thinkingBudget:1024,includeThoughts:!0,responseMimeType:"application/json",jsonSchema:Ra,temperature:.7,label:"LoremasterIntegrate"}),w=(((j=(v=(C=d.candidates)==null?void 0:C[0])==null?void 0:v.content)==null?void 0:j.parts)??[]).filter($=>$.thought===!0&&typeof $.text=="string").map($=>$.text),u=vs(d.text??"",s);return{result:u?{parsed:u,raw:d.text??"",thoughts:w,systemInstructionUsed:m,jsonSchemaUsed:g,promptUsed:p}:null}});return{refinementResult:(i==null?void 0:i.parsed)??null,debugInfo:{extract:{prompt:l.promptUsed,systemInstruction:l.systemInstructionUsed,jsonSchema:l.jsonSchemaUsed,rawResponse:l.raw,parsedPayload:l.parsed??void 0,thoughts:l.thoughts},integrate:{prompt:(i==null?void 0:i.promptUsed)??h,systemInstruction:(i==null?void 0:i.systemInstructionUsed)??Ea,jsonSchema:(i==null?void 0:i.jsonSchemaUsed)??Ra,rawResponse:i==null?void 0:i.raw,parsedPayload:i==null?void 0:i.parsed,observations:i==null?void 0:i.parsed.observations,rationale:i==null?void 0:i.parsed.rationale,thoughts:i==null?void 0:i.thoughts}}}},xs=async e=>{if(!je())return console.error("collectRelevantFacts_Service: API not configured"),null;const{themeName:t,facts:n,lastScene:s,playerAction:o,recentLogEntries:c,detailedContext:l}=e,h=ki(t,n,s,o,c,l),i=await ze(async()=>{var u,x,C;He(Fe.loremaster_collect.icon);const{response:d,systemInstructionUsed:m,jsonSchemaUsed:g,promptUsed:p}=await _e({modelNames:[at,Re,Oe],prompt:h,systemInstruction:Da,thinkingBudget:1024,includeThoughts:!0,responseMimeType:"application/json",jsonSchema:$a,temperature:.7,label:"LoremasterCollect"}),w=(((C=(x=(u=d.candidates)==null?void 0:u[0])==null?void 0:x.content)==null?void 0:C.parts)??[]).filter(v=>v.thought===!0&&typeof v.text=="string").map(v=>v.text);return{result:{parsed:Di(d.text??""),raw:d.text??"",thoughts:w,systemInstructionUsed:m,jsonSchemaUsed:g,promptUsed:p}}});return{facts:(i==null?void 0:i.parsed)??[],debugInfo:{prompt:(i==null?void 0:i.promptUsed)??h,systemInstruction:(i==null?void 0:i.systemInstructionUsed)??Da,jsonSchema:(i==null?void 0:i.jsonSchemaUsed)??$a,rawResponse:i==null?void 0:i.raw,parsedPayload:(i==null?void 0:i.parsed)??void 0,thoughts:i==null?void 0:i.thoughts}}},ws=async e=>{if(!je())return console.error("distillFacts_Service: API not configured"),null;const{themeName:t,facts:n,currentQuest:s,currentObjective:o,inventoryItemNames:c,mapNodeNames:l}=e,h=Li(t,n,s,o,c,l),i=await ze(async()=>{var x,C,v;He(Fe.loremaster_refine.icon);const{response:d,systemInstructionUsed:m,jsonSchemaUsed:g,promptUsed:p}=await _e({modelNames:[Oe,Re],prompt:h,systemInstruction:Ma,thinkingBudget:4096,includeThoughts:!0,responseMimeType:"application/json",jsonSchema:Oa,temperature:.7,label:"LoremasterDistill"}),w=(((v=(C=(x=d.candidates)==null?void 0:x[0])==null?void 0:C.content)==null?void 0:v.parts)??[]).filter(j=>j.thought===!0&&typeof j.text=="string").map(j=>j.text),u=vs(d.text??"",n);return{result:u?{parsed:u,raw:d.text??"",thoughts:w,systemInstructionUsed:m,jsonSchemaUsed:g,promptUsed:p}:null}});return{refinementResult:(i==null?void 0:i.parsed)??null,debugInfo:{prompt:(i==null?void 0:i.promptUsed)??h,systemInstruction:(i==null?void 0:i.systemInstructionUsed)??Ma,jsonSchema:(i==null?void 0:i.jsonSchemaUsed)??Oa,rawResponse:i==null?void 0:i.raw,parsedPayload:i==null?void 0:i.parsed,observations:i==null?void 0:i.parsed.observations,rationale:i==null?void 0:i.parsed.rationale,thoughts:i==null?void 0:i.thoughts}}},Oi=e=>{const{getCurrentGameState:t,commitGameState:n,playerGenderProp:s,setError:o,setIsLoading:c,setLoadingReason:l,initiateDialogueExit:h,isDialogueExiting:i,addDebugEntry:d}=e;return{handleDialogueOptionSelect:r.useCallback(async g=>{const p=t(),f=p.currentThemeObject;if(!f||!p.dialogueState||i)return;const w={speaker:"Player",line:g},u=[...p.dialogueState.options],x=[...p.dialogueState.history,w],C=u.length>0&&g===u[u.length-1],v={...p,dialogueState:{...p.dialogueState,history:x,options:[]},lastTurnChanges:null};if(n(v),C)await h(v);else{c(!0),l("dialogue_turn"),o(null);try{const j=v.mapData.nodes.filter(I=>I.themeName===f.name&&I.data.nodeType!=="feature"),$=v.allNPCs.filter(I=>I.themeName===f.name),S=v.gameLog.slice(-Bn),A=On(j,$,`${v.currentScene} ${g}`,"Locations mentioned:","NPCs mentioned:"),y=[...v.themeFacts].sort((I,T)=>T.tier-I.tier||T.createdTurn-I.createdTurn).map(I=>({text:I.text,tier:I.tier}));l("loremaster_collect");const E=await xs({themeName:f.name,facts:y,lastScene:v.currentScene,playerAction:g,recentLogEntries:S,detailedContext:A});l("dialogue_turn");const N=(E==null?void 0:E.facts)??[],{parsed:O,prompt:F,rawResponse:D,thoughts:k}=await Ni(f,v.mainQuest,v.currentObjective,v.currentScene,v.localTime,v.localEnvironment,v.localPlace,j,v.allNPCs.filter(I=>I.themeName===f.name),v.inventory.filter(I=>I.holderId===me),s,x,g,(()=>{if(!v.dialogueState)throw new Error("Dialogue state is not defined");return v.dialogueState.participants})(),N);d({prompt:F,rawResponse:D,thoughts:k});const L=t();if(O&&L.dialogueState){const I=[...x,...O.npcResponses],T={participants:O.updatedParticipants??L.dialogueState.participants,history:I,options:O.playerOptions};O.dialogueEnds&&(T.options=[]);const P={...L,dialogueState:T,lastTurnChanges:null};n(P),O.dialogueEnds&&await h(P)}else if(L.dialogueState){o("The conversation faltered. Try choosing an option again or ending the dialogue.");const I={...L.dialogueState};I.options.length===0&&(I.options=u.length>0?u:["End Conversation."]),n({...L,dialogueState:I,lastTurnChanges:null})}}catch(j){console.error("Error during dialogue turn:",j),o("An error occurred in the conversation. You might need to end it.");const $=t();if($.dialogueState){const S=u.length>0?u:["Try to end the conversation."];n({...$,dialogueState:{...$.dialogueState,options:S},lastTurnChanges:null})}}finally{const j=t(),{dialogueState:$}=j;!!($&&$.options.length===0&&$.history.length>0)||i||(c(!1),l(null))}}},[t,n,s,i,o,c,l,h,d])}},Fi=e=>{const{getCurrentGameState:t,commitGameState:n,playerGenderProp:s,setError:o,setIsLoading:c,setLoadingReason:l,onDialogueConcluded:h,getDialogueDebugLogs:i,clearDialogueDebugLogs:d}=e,[m,g]=r.useState(!1),p=r.useCallback(async w=>{var k,L;const u=w.currentThemeObject,x=((k=w.dialogueState)==null?void 0:k.history)??[],C=((L=w.dialogueState)==null?void 0:L.participants)??[];if(!u||!w.dialogueState){console.error("Cannot exit dialogue: current theme is null or not in dialogue state.",w),await h(null,w,{turns:i()}),d(),g(!1),c(!1),l(null);return}c(!0),l("dialogue_summary"),g(!0),o(null);const v=he(w);l("dialogue_memory_creation");const j={themeName:u.name,currentThemeObject:u,currentScene:v.currentScene,localTime:v.localTime,localEnvironment:v.localEnvironment,localPlace:v.localPlace,dialogueParticipants:C,dialogueLog:x},S={summaryText:await Ii(j)??"A conversation took place, but the details are hazy.",participants:C,timestamp:v.localTime??"Unknown Time",location:v.localPlace??"Unknown Location"};v.allNPCs=v.allNPCs.map(I=>{if(C.includes(I.name)&&I.themeName===u.name){const T=[...I.dialogueSummaries??[],S];return T.length>Ur&&T.shift(),{...I,dialogueSummaries:T}}return I}),l("dialogue_conclusion_summary");const A={nodes:v.mapData.nodes.filter(I=>I.themeName===u.name),edges:v.mapData.edges.filter(I=>{const T=v.mapData.nodes.find(b=>b.id===I.sourceNodeId),P=v.mapData.nodes.find(b=>b.id===I.targetNodeId);return(T==null?void 0:T.themeName)===u.name&&(P==null?void 0:P.themeName)===u.name})},y={mainQuest:v.mainQuest,currentObjective:v.currentObjective,currentScene:v.currentScene,localTime:v.localTime,localEnvironment:v.localEnvironment,localPlace:v.localPlace,mapDataForTheme:A,knownNPCsInTheme:v.allNPCs.filter(I=>I.themeName===u.name),inventory:v.inventory.filter(I=>I.holderId===me),playerGender:s,dialogueLog:x,dialogueParticipants:C,themeName:u.name,currentThemeObject:u},{parsed:E,prompt:N,rawResponse:O,thoughts:F}=await Ti(y);v.dialogueState=null;const D={turns:i(),summaryPrompt:N,summaryRawResponse:O,summaryThoughts:F};await h(E,v,D),d(),g(!1)},[s,o,c,l,h,i,d]),f=r.useCallback(()=>{const w=t();if(w.dialogueState&&!m){const u={speaker:"Player",line:"(Forces the conversation to end)"},x=[...w.dialogueState.history,u],C={...w,dialogueState:{...w.dialogueState,history:x,options:[]},lastTurnChanges:null};n(C),p(C)}},[t,n,m,p]);return{isDialogueExiting:m,initiateDialogueExit:p,handleForceExitDialogue:f}},_i=e=>{const{getCurrentGameState:t,commitGameState:n,playerGenderProp:s,setError:o,setIsLoading:c,setLoadingReason:l,onDialogueConcluded:h}=e,i=r.useRef([]),d=x=>{i.current.push(x)},m=()=>i.current,g=()=>{i.current=[]},{isDialogueExiting:p,initiateDialogueExit:f,handleForceExitDialogue:w}=Fi({getCurrentGameState:t,commitGameState:n,playerGenderProp:s,setError:o,setIsLoading:c,setLoadingReason:l,onDialogueConcluded:h,getDialogueDebugLogs:m,clearDialogueDebugLogs:g}),{handleDialogueOptionSelect:u}=Oi({getCurrentGameState:t,commitGameState:n,playerGenderProp:s,setError:o,setIsLoading:c,setLoadingReason:l,initiateDialogueExit:f,isDialogueExiting:p,addDebugEntry:d});return{isDialogueExiting:p,handleDialogueOptionSelect:u,handleForceExitDialogue:w}},Gi=e=>_i(e),Ui=(e,t)=>`Start a new adventure in the theme "${e.name}". ${e.systemInstructionModifier}
Player's Character Gender: "${t}"
Suggested Initial Scene: "${e.initialSceneDescriptionSeed}" (adjust for variety)
Suggested Initial Main Quest: "${e.initialMainQuest}" (adjust for variety)
Suggested Initial Current Objective: "${e.initialCurrentObjective}" (adjust for variety)
Suggested Initial New Items for the player: "${e.initialItems}" (adjust names and descriptions for variety)

The player's last action was unremarkable—something common anyone would do in this situation.

Creatively generate variations of the main quest and current objective based on the suggestions, but make them noticeably different.
Creatively generate the initial scene description, action options, and items (variations based on 'New Items for the player'), along with a logMessage.
Creatively add any important quest item(s), if any, based on your generated quest and objective.

ALWAYS SET "mapUpdated": true.
ALWAYS REQUIRED: "mainQuest", "currentObjective", "localTime", "localEnvironment", and "localPlace".
`,Vi=(e,t,n)=>{const s=mt(t," - ",!0,!0,!1,!1,!0);return`The player is entering a NEW theme "${e.name}" after a reality shift.
Player's Character Gender: "${n}"
Initial Scene: "${e.initialSceneDescriptionSeed}" (adapt to an arrival scene describing the disorienting transition).
Main Quest: "${e.initialMainQuest}" (adjust for variety)
Current Objective: "${e.initialCurrentObjective}" (adjust for variety)

Player's Current Inventory (brought from previous reality or last visit):
${s}

Generate the scene description for a disoriented arrival, and provide appropriate initial action options for the player to orient themselves.

List anachronistic Player's Items in playerItemsHint.

ALWAYS SET "mapUpdated": true.
ALWAYS REQUIRED: "mainQuest", "currentObjective", "localTime", "localEnvironment", and "localPlace".
`},Bi=(e,t,n,s,o,c)=>{const l=mt(t," - ",!0,!0,!1,!1,!0),h=o.nodes.filter(x=>x.themeName===e.name&&x.data.nodeType!=="feature"&&x.data.nodeType!=="room"),i=yt(h,!1),d=c.filter(x=>x.presenceStatus==="companion"),m=d.length>0?nt(d," - ",!1,!1,!1,!0):"None",g=c.filter(x=>x.presenceStatus==="nearby"),p=g.length>0?nt(g," - ",!1,!1,!1,!0):"None",f=c.filter(x=>x.presenceStatus==="distant"||x.presenceStatus==="unknown"),w=f.length>0?nt(f," - ",!1,!1,!1,!0):"None specifically known in this theme yet.";return`The player is CONTINUING their adventure by re-entering the theme "${e.name}" after a reality shift.
Player's Character Gender: "${n}"
The Adventure Summary: "${s.summary}"
Main Quest: "${s.mainQuest}"
Current Objective: "${s.currentObjective}"

## Player's Current Inventory (brought from previous reality or last visit):
${l}

List anachronistic Player's Items in playerItemsHint.

## Known Locations:
${i}

## Known NPCs (including presence):
${w}

## Companions traveling with the Player:
${m}

## NPCs Player can interact with (nearby):
${p}

Describe the scene as they re-enter, potentially in a state of confusion from the shift, making it feel like a continuation or a new starting point consistent with the Adventure Summary and current quest/objective.
Provide appropriate action options for the player to orient themselves.

ALWAYS SET "mapUpdated": true.
ALWAYS REQUIRED: "mainQuest", "currentObjective", "localTime", "localEnvironment", and "localPlace".
`},zi=(e,t,n,s,o,c,l,h,i,d,m,g,p,f,w,u,x,C,v)=>{var M;const j=n.length>0?mt(n," - ",!0,!0,!1,!1,!0):"There are no items in player's inventory.",$=s.length>0?`There are items at this location: 
${mt(s," - ",!0,!0,!1,!1,!0)}`:"There are no visible items at this location.",S=yt(i,!0),A=d.filter(_=>_.presenceStatus==="companion"),y=A.length>0?nt(A," - ",!1,!1,!1,!0):"None",E=d.filter(_=>_.presenceStatus==="nearby"),N=E.length>0?nt(E," - ",!1,!1,!1,!0):"None",O=d.filter(_=>_.presenceStatus==="distant"||_.presenceStatus==="unknown"),F=O.length>0?nt(O," - ",!1,!1,!1,!0):"None specifically known in this theme yet.",D=m.length>0?m.map(_=>`- ${_}`).join(`
`):"None",k=Xa(h),L=C.nodes.filter(_=>_.themeName===l.name),I=C.edges.filter(_=>{const Q=L.find(G=>G.id===_.sourceNodeId),W=L.find(G=>G.id===_.targetNodeId);return Q&&W}),T=ar(C,(x==null?void 0:x.id)??null,l,L,I),P=sr(C,(x==null?void 0:x.id)??null,v);let b="";if(P)b=P;else if(v){const _=C.nodes.find(H=>H.id===v),Q=(_==null?void 0:_.placeName)??v,W=_==null?void 0:_.data.parentNodeId,G=W&&W!=="Universe"?((M=C.nodes.find(H=>H.id===W))==null?void 0:M.placeName)??W:null;b=`Player wants to reach ${G?`${Q} in ${G}`:Q}, but does not know how to get there.`}const R=On(i,d,`${e} ${t}`,"### Details on relevant locations mentioned in current scene or action:","### Details on relevant NPCs mentioned in current scene or action:");return`Based on the Previous Scene and Player Action, and taking into account the provided context (including map context), generate the next scene description, options, item changes, log message, etc.

## Context:
Player's Character Gender: "${w}"
Previous Local Time: "${g??"Unknown"}"
Previous Local Environment: "${p??"Undetermined"}"
Previous Local Place: "${f??"Undetermined Location"}"
Main Quest: "${o??"Not set"}"
Current Objective: "${c??"Not set"}"

### Player's Inventory:
${j}

### Items at Current Location:
${$}

### Known Locations:
${S}

### Known NPCs:
${F}

### Companions traveling with the Player:
${y}

### NPCs Player can interact with (nearby):
${N}

### Current Map Context (including your location, possible exits, nearby paths, and other nearby locations):
${T}

${R}

### Relevant Facts about the world:
${D}

### Recent Events to keep in mind (for context and continuity):
${k}
 - A bit later you look around and consider your next move.
IMPORTANT: Recent events are provided only for additional context. These actions have already been processed by the game and should NEVER trigger item actions again, to avoid double counting.

---

Current Theme: "${l.name}"
Previous Scene: "${e}"
Player Action: "${t}"
${b}`},Hi=e=>{const{getCurrentGameState:t,setGameStateStack:n,loadInitialGame:s,enabledThemePacksProp:o,playerGenderProp:c,stabilityLevelProp:l,chaosLevelProp:h,setError:i,setLoadingReason:d,isLoading:m}=e,g=r.useRef({}),p=r.useCallback(async(C,v)=>{if(g.current[C.name])return;g.current[C.name]=!0;const j=await fi(C,v.currentScene,v.gameLog),$=v.mapData.nodes.filter(y=>y.themeName===C.name&&y.data.nodeType!=="feature"&&y.data.nodeType!=="room"),S=v.allNPCs.filter(y=>y.themeName===C.name),A={summary:j??"The details of this reality are hazy...",mainQuest:v.mainQuest??"Unknown",currentObjective:v.currentObjective??"Unknown",placeNames:$.map(y=>y.placeName),npcNames:S.map(y=>y.name)};n(y=>{const E={...y[0]};return E.themeHistory={...E.themeHistory,[C.name]:A},[E,y[1]]}),g.current[C.name]=!1},[n]),f=r.useCallback((C=!1)=>{const v=t(),j=v.currentThemeObject;if(!j||m)return;p(j,v),d("reality_shift_load");const $=(()=>{if(v.pendingNewThemeNameAfterShift&&!v.isAwaitingManualShiftThemeSelection)return v.pendingNewThemeNameAfterShift;if(!v.isAwaitingManualShiftThemeSelection){const A=Za(o);return or(A,j.name)}return null})();if(!$&&!v.isAwaitingManualShiftThemeSelection){i("Could not select a new theme for reality shift. Current theme remains."),d(null);return}const S=v.isCustomGameMode;n(A=>{let y={...A[0]};const E=y.inventory,N=y.score,O=y.themeHistory,F=y.mapData,D=y.allNPCs,k=y.mapLayoutConfig,L=y.globalTurnNumber,I=y.debugLore,T=y.debugGoodFacts,P=y.debugBadFacts;return y=Xt(),y.inventory=E,y.score=N,y.themeHistory=O,y.mapData=F,y.allNPCs=D,y.mapLayoutConfig=k,y.globalTurnNumber=L,y.debugLore=I,y.debugGoodFacts=T,y.debugBadFacts=P,y.pendingNewThemeNameAfterShift=$,y.currentThemeName=null,y.currentThemeObject=null,y.dialogueState=null,y.turnsSinceLastShift=0,y.isCustomGameMode=S,y.isAwaitingManualShiftThemeSelection=v.isAwaitingManualShiftThemeSelection,C&&(y.score=Math.max(0,y.score-10)),y.playerGender=c,y.enabledThemePacks=o,y.stabilityLevel=l,y.chaosLevel=h,[y,A[1]]}),!v.isAwaitingManualShiftThemeSelection&&$&&s({explicitThemeName:$,isTransitioningFromShift:!0,customGameFlag:S})},[t,o,p,s,i,d,n,c,l,h,m]),w=r.useCallback(()=>{const C=t(),v=C.currentThemeObject;!v||m||(i("MANUAL SHIFT! Reality destabilizes..."),p(v,C),C.isCustomGameMode?n(j=>[{...j[0],isAwaitingManualShiftThemeSelection:!0,lastActionLog:"You focus your will, preparing to choose a new reality..."},j[1]]):f(!1))},[t,p,f,i,n,m]),u=r.useCallback(C=>{t().isAwaitingManualShiftThemeSelection&&(d("reality_shift_load"),n(j=>[{...j[0],isAwaitingManualShiftThemeSelection:!1,pendingNewThemeNameAfterShift:C,lastActionLog:`You chose to shift reality to: ${C}. The world warps around you!`},j[1]]),s({explicitThemeName:C,isTransitioningFromShift:!0,customGameFlag:!0}))},[t,n,s,d]),x=r.useCallback(()=>{n(C=>[{...C[0],isAwaitingManualShiftThemeSelection:!1,lastActionLog:"You decide against manually shifting reality for now."},C[1]]),i(null),d(null)},[n,i,d]);return{triggerRealityShift:f,executeManualRealityShift:w,completeManualShiftWithSelectedTheme:u,cancelManualShiftThemeSelection:x}},Wi=({loadingReasonRef:e,setLoadingReason:t,setError:n})=>({processMapUpdates:r.useCallback(async(o,c,l,h,i)=>{try{await rr(o,c,l,h,e.current,t,i)}catch(d){throw n(d instanceof Error?d.message:String(d)),d}},[e,t,n])}),Yi=`** SYSTEM INSTRUCTIONS: **
You are an AI assistant that converts item hints into explicit inventory actions for a text adventure game.
Analyze the hints and optional new items JSON provided in the prompt.

Define any operations on existing items in the Player's Inventory, based on Player's Action and the Player Items Hint.
Define any operations on existing items at Locations, or in NPCs' inventories, according to Location Items Hint and NPCs Items Hint.
Define any transfers of existing items between NPCs' and Player's Inventories using the 'move' action.
Items described in the "World Items Hint" must be placed at their appropriate map node holderId using the 'create' action.

Available actions are: ${Vr}.
CRITICALLY IMPORTANT: Use 'create' only when revealing or creating a **NEW** item at a specific location, specific NPC inventory, or in Player's inventory. You MUST 'create' *all* items in the New Items JSON and *only* the items in the New Items JSON. NEVER create items that are part of the Player's Inventory.
CRITICALLY IMPORTANT: Use 'move' when transferring an **EXISTING** item from one holder to another, or dropping/picking up the item at the current location.
CRITICALLY IMPORTANT: Use 'destroy' ONLY when the item is **IRREVERSIBLY** consumed, destroyed, or otherwise removed from the world.

## Examples:

- Example for gaining a *new* item from the provided New Items JSON:
{
  "create": [
    {
      "name": "Old Lantern",
      "type": "equipment",
      "description": "A dusty old lantern that still flickers faintly.",
      "holderId": "player",
      "activeDescription": "The lantern is lit and casts a warm glow.",
      "isActive": false,
      "knownUses": [
        {
          "actionName": "Light the Lantern",
          "promptEffect": "Light the lantern to illuminate the area.",
          "description": "Use this to light your way in dark places.",
          "appliesWhenInactive": true
        },
        {
          "actionName": "Extinguish the Lantern",
          "promptEffect": "Extinguish the lantern.",
          "description": "Extinguish and conserve the fuel",
          "appliesWhenActive": true
        }
      ]
    }
  ]
}

- Example of gaining a new book item with chapters:
{
  "action": "create",
  item: { 
    "name": "Adventurer's Path",
    "type": "book",
    "description": "A personal recollection filled with the adventures of a seasoned explorer.",
    "holderId": "player",
    "tags": ["handwritten"],
    "chapters": [
      {
        "heading": "Chapter 1: The Beginning",
        "description": "The first steps of an adventurer's journey.",
        "contentLength": 100
      },
      {
        "heading": "Chapter 2: The Trials",
        "description": "Facing challenges and overcoming obstacles.",
        "contentLength": 150
      },
      {
        "heading": "Chapter 3: The Triumph",
        "description": "The final victory and lessons learned.",
        "contentLength": 200
      }
    ]
  }
}

- Example for losing, destroying, completely removing an *existing* item from the world:
{
  "action": "destroy",
  item:
  {
    "id": "item_old_lantern_7fr4",
    "name": "Old Lantern (flickering)"
  }
}

- Example for giving an *existing* item item_iron_sword_ab12 from player to npc_guard_4f3a, or for placing it in the current location:
{ 
  "move": [
    {
      "id": "item_iron_sword_ab12",
      "name": "Iron Sword",
      "newHolderId": "npc_guard_4f3a"
    }
  ]
}

- Example of taking an *existing* item item_coin_pouch_8f2c from npc_bandit_1wrc and putting it in player's inventory:
{ 
  "move": [
    {
      "id": "item_coin_pouch_8f2c",
      "name": "Coin Pouch",
      "newHolderId": "player"
    }
  ]
}

- Example of picking up an *existing* item item_crowbar_55nf from node_rubble_pile_f4s3 and putting it in player's inventory:
{ 
  "move": [
    {
      "id": "item_crowbar_55nf",
      "name": "Crowbar",
      "newHolderId": "player"
    }
  ]
}

- Example for a simple change that only alters "isActive" state (lighting the Plasma Torch). All other properties are inherited from the *existing* item item_plasma_torch_7fr4:
{ 
  "change": [
    {
      "id": "item_plasma_torch_7fr4",
      "name": "Plasma Torch",
      "isActive": true
    }
  ]
}

- Example for transformation or crafting (new item details can be partial and will inherit old properties):
{ 
  "change": [
    {
      "id": "item_scrap_metal_7fr4",
      "name": "Scrap Metal",
      "newName": "Makeshift Shiv",
      "type": "weapon",
      "description": "A sharp piece of metal.",
      "tags": [], /* empty array to remove the 'junk' tag from scrap metal */
      "knownUses": [
        {
          "actionName": "Cut",
          "promptEffect": "Cut something with the shiv.",
          "description": "Use this to cut things."
        }
      ]
    }
  ]
}

- Example for adding a known use to *existing* item (existing properties and known uses are inherited):
{ 
  "change": [
    {
      "id": "item_mystic_orb_7fr4",
      "name": "Mystic Orb",
      "addKnownUse": {
        "actionName": "Peer into the Orb",
        "promptEffect": "Peer into the Mystic Orb, trying to glimpse the future.",
        "description": "Try to see the beyond",
        "AppliesWhenActive": true
      }
    }
  ]
}

- Example for adding a new chapter to an existing written item:
- Example for adding a new chapter to an existing written item:
{
  "addDetails": [
    {
      "id": "item_codex_8g3c",
      "name": "The Codex of Whispering Echoes",
      "type": "book",
      "chapters": [
        {
          "heading": "The Sacrifice of Silence",
          "description": "A grim tale about the price of forbidden knowledge.",
          "contentLength": 120
        }
      ]
    }
  ]
}

- CRITICALLY IMPORTANT: holderId and newHolderId can only be 'node_*', 'npc_*' or 'player'. NEVER put an item inside another item!
- ALWAYS appropriately handle spending single-use items and state toggles ("isActive": true/false).
- Using some "single-use" items (food, water, medicine, etc) MUST add or remove appropriate "status effect" items.
- Use "change" to update the remaining number of uses for multi-use items in their name (in brackets) or in description.
- Use "addDetails" to reveal new chapters, or when missing pages of a book are found and incorporated into the rest of the book.
- Make sure that 'page', 'map' and 'picture' type items have exactly ONE chapter.
- Make sure that 'book' type items have between ${String(Tt)} and ${String(Un)} chapters.
- Make sure 'page', 'book', 'map' and 'picture' type items have one of the required tags: ${Gn}.
IMPORTANT: For items that CLEARLY can be enabled or disabled (e.g., light sources, powered equipment, wielded or worn items) provide at least the two knownUses to enable and disable them with appropriate names:
  - The knownUse to turn on, light, or otherwise enable the item should ALWAYS have "appliesWhenInactive": true (and typically "appliesWhenActive": false or undefined).
  - The knownUse to turn off, extinguish, or disable the item should ALWAYS have "appliesWhenActive": true (and typically "appliesWhenInactive": false or undefined).
  - ALWAYS provide these actions in pairs, e.g. turn on/turn off, wield/put away, wear/take off, light/extinguish, activate/deactivate, start/stop, etc.
IMPORTANT: NEVER add ${ds} known uses - there are dedicated buttons for those in the game.

${Br}

IMPORTANT GAME FEATURE - Anachronistic Items: If some items are CLEARLY anachronistic for the current theme (e.g., a high-tech device in a medieval fantasy setting), you MAY transform them. Use "itemChange" with "action": "change", providing "newName" and optionally the new "type" and "description" if they change. For example, a "Laser Pistol" (Sci-Fi item) in a "Classic Dungeon Delve" (Fantasy theme) might transform into a "Humming Metal Wand"."
`,Ki=(e,t,n,s,o,c,l,h,i,d,m)=>{const g=o.length>0?JSON.stringify(o,null,2):"[]";return`- Player's Last Action: ${e}
- Player Items Hint: "${t}";
- World Items Hint: "${n}";
- NPC Items Hint: "${s}".

${g?`New Items from Storyteller AI or Dialogue AI:
${g}
`:""}
${c?`Current Player's Inventory:
${c}
`:""}
${l?`Current Location Inventory - ID: ${h??"unknown"}
${l}
`:""}
${i?`Companions Inventory:
${i}
`:""}
${d?`Nearby NPCs Inventory:
${d}
`:""}
${m?`Nearby Map Context where you can put Items:
${m}
`:""}

Provide the inventory update as JSON as described in the SYSTEM_INSTRUCTION.`},Ji={type:"object",properties:{observations:{type:"string",minLength:500,description:"Contextually relevant observations about the items."},rationale:{type:"string",minLength:500,description:"Reasoning behind the inventory changes."},create:{type:"array",description:"New items to create, taken exactly from the provided New Items JSON",items:{type:"object",properties:{name:{type:"string",description:"Item name as it will appear to the player."},type:{enum:en,description:`Item type. One of ${Tn}`},description:{type:"string",description:"Concise explanation of what the item is."},activeDescription:{type:"string",description:"Description when item is active."},isActive:{type:"boolean",description:"True if the item is active."},holderId:{type:"string",description:`ID of the location or holder. Use '${me}', 'npc_*' or 'node_*', depending on Item Hints.`},tags:{type:"array",items:{enum:[...Sn,...qr]},description:`Example tags: ${Kr}, 'book', 'page', 'map', and 'picture' type items require one of ${Gn} and optionally ${Jr}.`},chapters:{type:"array",description:`For type page, map, or picture - exactly one chapter. For type book - between ${String(Tt)} and ${String(Un)} chapters.`,items:{type:"object",properties:{heading:{type:"string",description:"Short heading for the chapter."},description:{type:"string",description:"Detailed abstract of the chapter contents."},contentLength:{type:"number",minimum:50,maximum:500,description:"Approximate length in words."}},required:["heading","description","contentLength"],additionalProperties:!1}},knownUses:{type:"array",items:{type:"object",properties:{actionName:{type:"string",description:"Name of the use action."},promptEffect:{type:"string",description:"Short effect description for the AI."},description:{type:"string",description:"Tooltip hint for this use."},appliesWhenActive:{type:"boolean",description:"Use is available when item is active."},appliesWhenInactive:{type:"boolean",description:"Use is available when item is inactive."}},required:["actionName","promptEffect","description"],additionalProperties:!1}}},required:["name","type","description","holderId","tags"],additionalProperties:!1}},change:{type:"array",description:"Updates to existing items.",items:{type:"object",properties:{id:{type:"string",description:"Identifier of the item to change."},name:{type:"string",description:"Current item name."},newName:{type:"string",description:"Updated name if changed."},type:{enum:en,description:`Updated type if changed. One of ${Tn}.`},description:{type:"string",description:"Updated description if changed."},activeDescription:{type:"string",description:"Updated active description."},isActive:{type:"boolean",description:"Updated active state."},tags:{type:"array",items:{enum:Sn},description:"Updated tags."},knownUses:{type:"array",items:{type:"object",properties:{actionName:{type:"string"},promptEffect:{type:"string"},description:{type:"string"},appliesWhenActive:{type:"boolean"},appliesWhenInactive:{type:"boolean"}},required:["actionName","promptEffect","description"],additionalProperties:!1}}},required:["id","name"],additionalProperties:!1}},move:{type:"array",description:"Move an existing item to a new holder.",items:{type:"object",properties:{id:{type:"string"},name:{type:"string"},newHolderId:{type:"string",description:`ID of the new location or holder of the Item. Use '${me}', 'npc_*' or 'node_*'.`}},required:["id","name","newHolderId"],additionalProperties:!1}},destroy:{type:"array",description:"Remove items from the world.",items:{type:"object",properties:{id:{type:"string"},name:{type:"string"}},required:["id","name"],additionalProperties:!1}},addDetails:{type:"array",description:"Add new knownUses, chapters, or tags to an existing item.",items:{type:"object",properties:{id:{type:"string",description:"ID of the item like item_* ."},name:{type:"string",description:"Name of the item."},tags:{type:"array",items:{enum:[...Sn,"restored"]},description:"Updated tags. Written items can receive 'recovered' tag if translated, decoded, or restored."},knownUses:{type:"array",items:{type:"object",properties:{actionName:{type:"string"},promptEffect:{type:"string"},description:{type:"string"},appliesWhenActive:{type:"boolean"},appliesWhenInactive:{type:"boolean"}},required:["actionName","promptEffect","description"],additionalProperties:!1}},chapters:{type:"array",items:{type:"object",properties:{heading:{type:"string"},description:{type:"string"},contentLength:{type:"number",minimum:50,maximum:500}},required:["heading","description","contentLength"],additionalProperties:!1}}},required:["id","name"],additionalProperties:!1}}},required:["observations","rationale"],additionalProperties:!1},qi=async e=>{if(!je())return console.error("API Key not configured for Inventory Service."),Promise.reject(new Error("API Key not configured."));const t=await ze(async n=>{var s,o,c;try{console.log(`Executing inventory request (Attempt ${String(n+1)}/${String(Ee+1)})`),He(Fe.inventory.icon);const{response:l,systemInstructionUsed:h,jsonSchemaUsed:i,promptUsed:d}=await _e({modelNames:[Re,at,Oe],prompt:e,systemInstruction:Yi,jsonSchema:Ji,thinkingBudget:1024,includeThoughts:!0,responseMimeType:"application/json",temperature:.7,label:"Inventory"}),g=(((c=(o=(s=l.candidates)==null?void 0:s[0])==null?void 0:o.content)==null?void 0:c.parts)??[]).filter(p=>p.thought===!0&&typeof p.text=="string").map(p=>p.text);return{result:{response:l,thoughts:g,systemInstructionUsed:h,jsonSchemaUsed:i,promptUsed:d}}}catch(l){throw console.error(`Error executing inventory request (Attempt ${String(n+1)}/${String(Ee+1)}):`,l),l}});if(!t)throw new Error("Failed to execute inventory request.");return t},Qi=(e,t)=>{for(const n of t){const s=n.chapters;if(!s||s.length===0)continue;const o=e.find(c=>c.action==="create"&&c.item.name===n.name);if(o&&o.action==="create"){const c=o.item;(!c.chapters||c.chapters.length!==s.length)&&(c.chapters=s)}}},Xi=async(e,t,n,s,o,c,l,h,i,d,m,g,p,f)=>{var E;const w=(e==null?void 0:e.trim())??"",u=(t==null?void 0:t.trim())??"",x=(n==null?void 0:n.trim())??"";if(!w&&!u&&!x&&s.length===0)return{itemChanges:[],debugInfo:null};const C=Ki(o,w,u,x,s,c,l,h,i,d,f),{response:v,thoughts:j,systemInstructionUsed:$,jsonSchemaUsed:S,promptUsed:A}=await qi(C);let y=zr(v.text??"");if(!y||y.itemChanges.length===0&&(((E=v.text)==null?void 0:E.trim())??"")!=="[]"){const N=await Hr(v.text??"",g,m,w,u,x,h,i,d,p);N&&(y={itemChanges:N})}if(y){Qi(y.itemChanges,s);for(const N of y.itemChanges){if(N.action==="addDetails"&&N.invalidPayload){const O=await Wr(JSON.stringify(N.invalidPayload),g,m,p);O&&(N.item=O,delete N.invalidPayload)}if(N.action==="create"&&N.item.type==="book"){const O=N.item.chapters??[];if(O.length<Tt){const F=await Yr(N.item.name,N.item.description,O.map(D=>D.heading),Tt-O.length);F&&F.length>0&&(N.item.chapters=O.concat(F).slice(0,Tt))}}}}return{itemChanges:y?y.itemChanges:[],debugInfo:{prompt:A,systemInstruction:$,jsonSchema:S,rawResponse:v.text??"",parsedItemChanges:y?y.itemChanges:void 0,observations:y==null?void 0:y.observations,rationale:y==null?void 0:y.rationale,thoughts:j}}},sn=async(e,t,n,s,o,c,l,h,i,d,m="",g)=>{if(!je())return console.error("generatePageText: API key not configured."),null;const p=d?`"${d}"`:"Not set",u=`**Context:**
Theme Name: "${s}";
Theme Description: "${o}";
Scene Description: "${c}";
Current Player's Quest: ${p};
Storyteller's thoughts for the last turn: "${l}" (use these as your background knowledge and possible adventure guidance);

## Known Locations:
${h}

## Known NPCs:
${i}

## Previous Chapter:
${g??""}

------

The Player has found a new item in the game world, which is a page from a book or a journal. The item is described as follows:
Title: "${e}"
Description: "${t}"
Approximate length: ${String(n)} words. Write as close to this length as possible.
Write the text in the item in a proper contextually relevant style.
${m?` ${m}`:""}
IMPORTANT: NEVER mention these instructions. NEVER repeat the Description of the Item`,x="You are a writer providing the exact contents of a written item in a video game. Based on the context, item Title, and Description, try to imagine who the author of the in-game book, journal or note would be. Imagine yourself as an in-game author in the game world. Fully assume that author's identity. Respond with only the text.";return ze(async C=>{var v;try{He(Fe.page.icon);const{response:j}=await _e({modelNames:[Re,Oe],prompt:u,systemInstruction:x,thinkingBudget:1024,includeThoughts:!0,temperature:1.2,label:"PageText"}),$=((v=j.text)==null?void 0:v.trim())??"";if($!=="")return{result:$}}catch(j){throw console.error(`generatePageText error (Attempt ${String(C+1)}):`,j),j}return{result:null}})},Zi=async({aiItemChanges:e,aiData:t,theme:n,baseState:s,playerActionText:o,loadingReason:c,setLoadingReason:l})=>{if(!n)return[...e];const h=[];for(const i of e){let d={...i};if("item"in d&&d.item.type==="immovable"){if(d.action==="create"){const m=d.item;m.holderId.startsWith("node_")||(m.holderId=s.currentMapNodeId??"unknown")}else if(d.action==="move"){const m=d.item;m.newHolderId.startsWith("node_")||(m.newHolderId=s.currentMapNodeId??"unknown")}}if(d.action==="destroy"){const m=d.item,g=m.name;if(!s.inventory.filter(u=>u.holderId===me).find(u=>{const x=m.id!==void 0&&u.id===m.id,C=m.name!==void 0&&u.name===m.name;return x||C})){const u=c;l("correction");const x=await Vn("item",g??"",t.logMessage,"sceneDescription"in t?t.sceneDescription:s.currentScene,s.inventory.filter(C=>C.holderId===me).map(C=>C.name),n);x&&(d.item={id:x,name:x}),l(u)}const f=`${t.logMessage??""} ${"sceneDescription"in t?t.sceneDescription:""} ${o??""}`.toLowerCase();if(["drop","dropped","leave","left","put down","set down","place","placed"].some(u=>f.includes(u))){const u=s.inventory.find(x=>x.holderId===me&&(m.id!=null&&x.id===m.id||m.name!=null&&x.name.toLowerCase()===m.name.toLowerCase()));u&&(d={action:"create",item:{...u,holderId:s.currentMapNodeId??"unknown"}})}}h.push(d)}return h},el=async({aiData:e,theme:t,draftState:n,baseState:s,turnChanges:o,processMapUpdates:c})=>{t&&await c(e,n,s,t,o)},tl=async({aiData:e,theme:t,draftState:n,baseState:s,correctedItemChanges:o,playerActionText:c,loadingReason:l,setLoadingReason:h})=>{const i=s.inventory.filter(w=>w.holderId===me),d=s.inventory.filter(w=>w.holderId===s.currentMapNodeId),m=s.allNPCs.filter(w=>w.presenceStatus==="companion"),g=s.allNPCs.filter(w=>w.presenceStatus==="nearby"),p=w=>w.length===0?"None.":w.map(u=>{const x=s.inventory.filter(C=>C.holderId===u.id);return`ID: ${u.id} - ${u.name}: ${mt(x," - ",!0,!0,!1,!0)}`}).join(`
`);let f=[...o];if(t){const w=l;h("inventory");const u=dr(n.mapData,n.currentMapNodeId,s.inventory),x=await Xi("playerItemsHint"in e?e.playerItemsHint:void 0,"worldItemsHint"in e?e.worldItemsHint:void 0,"npcItemsHint"in e?e.npcItemsHint:void 0,"newItems"in e&&Array.isArray(e.newItems)?e.newItems:[],c??"",mt(i," - ",!0,!0,!1,!0),mt(d," - ",!0,!0,!1,!0),s.currentMapNodeId??null,p(m),p(g),"sceneDescription"in e?e.sceneDescription:s.currentScene,e.logMessage,t,u);h(w),x&&(f=f.concat(x.itemChanges),n.lastDebugPacket&&(n.lastDebugPacket.inventoryDebugInfo=x.debugInfo))}return{combinedItemChanges:f,baseInventoryForPlayer:i}},nl=(e,t,n)=>{"dialogueSetup"in t&&t.dialogueSetup?(e.actionOptions=[],e.dialogueState={participants:t.dialogueSetup.participants,history:t.dialogueSetup.initialNpcResponses,options:t.dialogueSetup.initialPlayerOptions}):n&&(e.dialogueState=null)},al=({loadingReasonRef:e,setLoadingReason:t,setError:n,setGameStateStack:s,debugLore:o,openDebugLoreModal:c})=>{const{processMapUpdates:l}=Wi({loadingReasonRef:e,setLoadingReason:t,setError:n}),h=r.useRef(null),i=r.useCallback(()=>{h.current&&(clearTimeout(h.current),h.current=null)},[]);return{processAiResponse:r.useCallback(async(m,g,p,f)=>{var N,O,F,D,k,L,I,T,P,b;const{baseStateSnapshot:w,isFromDialogueSummary:u=!1,scoreChangeFromAction:x=0,playerActionText:C}=f,v={itemChanges:[],npcChanges:[],objectiveAchieved:!1,objectiveTextChanged:!1,mainQuestTextChanged:!1,localTimeChanged:!1,localEnvironmentChanged:!1,localPlaceChanged:!1,currentMapNodeIdChanged:!1,scoreChangedBy:x,mapDataChanged:!1};if(!m){n("The Dungeon Master's connection is unstable... (Invalid AI response after retries)"),!u&&"actionOptions"in p&&(p.actionOptions=["Try to wait for the connection to improve.","Consult the ancient network spirits.","Check your own connection.","Sigh dramatically."]),p.lastActionLog="The Dungeon Master seems to be having trouble communicating the outcome of your last action.",p.localTime=p.localTime??"Time Unknown",p.localEnvironment=p.localEnvironment??"Environment Undetermined",p.localPlace=p.localPlace??"Undetermined Location",p.lastTurnChanges=v,p.dialogueState=null;return}p.lastDebugPacket={...p.lastDebugPacket??{},prompt:((N=p.lastDebugPacket)==null?void 0:N.prompt)??"Prompt not captured for this state transition",rawResponseText:((O=p.lastDebugPacket)==null?void 0:O.rawResponseText)??"Raw text not captured",parsedResponse:m,timestamp:new Date().toISOString(),mapUpdateDebugInfo:null,inventoryDebugInfo:null,loremasterDebugInfo:((F=p.lastDebugPacket)==null?void 0:F.loremasterDebugInfo)??{collect:null,extract:null,integrate:null,distill:null,journal:null}},m.localTime!==void 0&&(p.localTime!==m.localTime&&(v.localTimeChanged=!0),p.localTime=m.localTime),m.localEnvironment!==void 0&&(p.localEnvironment!==m.localEnvironment&&(v.localEnvironmentChanged=!0),p.localEnvironment=m.localEnvironment),m.localPlace!==void 0&&(p.localPlace!==m.localPlace&&(v.localPlaceChanged=!0),p.localPlace=m.localPlace),m.mainQuest!==void 0&&(p.mainQuest!==m.mainQuest&&(v.mainQuestTextChanged=!0),p.mainQuest=m.mainQuest);const j=p.currentObjective;m.currentObjective!==void 0&&(p.currentObjective!==m.currentObjective&&(v.objectiveTextChanged=!0),p.currentObjective=m.currentObjective),i();let $=null;m.currentObjective!==void 0&&m.currentObjective!==j?$=m.objectiveAchieved?"success":"neutral":m.objectiveAchieved&&j!==null&&($="success"),$?(p.objectiveAnimationType=$,h.current=window.setTimeout(()=>{s(R=>[{...R[0],objectiveAnimationType:null},R[1]]),h.current=null},5e3)):p.objectiveAnimationType=null,v.objectiveAchieved=m.objectiveAchieved??!1,m.objectiveAchieved&&(p.score=p.score+1,v.scoreChangedBy+=1),"sceneDescription"in m&&m.sceneDescription&&(p.currentScene=m.sceneDescription),m.options.length>0&&!m.dialogueSetup?p.actionOptions=m.options:!u&&!m.dialogueSetup&&(p.actionOptions=["Look around.","Ponder your situation.","Check your inventory.","Wait for something to happen.","Consider your objective.","Plan your next steps."]);const S=m.itemChange,A=await Zi({aiItemChanges:S,aiData:m,theme:g,baseState:w,playerActionText:C,loadingReason:e.current,setLoadingReason:t});await el({aiData:m,theme:g,draftState:p,baseState:w,turnChanges:v,processMapUpdates:l});const{combinedItemChanges:y,baseInventoryForPlayer:E}=await tl({aiData:m,theme:g,draftState:p,baseState:w,correctedItemChanges:A,playerActionText:C,loadingReason:e.current,setLoadingReason:t});if(v.itemChanges=ir(y,E),p.inventory=lr(y,f.forceEmptyInventory?[]:w.inventory),m.logMessage?(p.gameLog=es(p.gameLog,m.logMessage,ps),p.lastActionLog=m.logMessage):u||(p.lastActionLog="The Dungeon Master remains silent on the outcome of your last action."),g){for(const R of y)if(R.action==="addDetails"){const U=cr([R.item.id,R.item.name],p.inventory,!1,!0);if(!U)continue;const M=(D=R.item.chapters)==null?void 0:D[0];if(!M)continue;const{name:_,systemInstructionModifier:Q}=g,W=p.mapData.nodes.filter(ae=>ae.themeName===_&&ae.data.nodeType!=="feature"&&ae.data.nodeType!=="room"),G=yt(W,!0),z=p.allNPCs.filter(ae=>ae.themeName===_),H=z.length>0?nt(z," - ",!1,!1,!1,!0):"None specifically known in this theme yet.",q=((L=(k=U.chapters)==null?void 0:k[U.chapters.length-1])==null?void 0:L.actualContent)??"",ne=((I=p.lastDebugPacket.storytellerThoughts)==null?void 0:I.slice(-1)[0])??"",Z=await sn(M.heading,M.description,M.contentLength,_,Q,p.currentScene,ne,G,H,p.mainQuest,`Take into account: ${p.lastActionLog??""}`,q);if(Z){const ae=U.tags??[];let ie=Z;ae.includes("foreign")?ie=await sn(M.heading,M.description,M.contentLength,_,Q,p.currentScene,ne,G,H,p.mainQuest,`Translate the following text into an artificial nonexistent language that fits the theme and context:
"""${Z}"""`)??Z:ae.includes("encrypted")?ie=ts(Z):ae.includes("runic")&&(ie=ns(Z)),ae.includes("torn")&&!ae.includes("recovered")&&(ie=as(ie));const se={...M,actualContent:Z,visibleContent:ie},ue=p.inventory.findIndex(we=>we.id===U.id),ee={...U,chapters:[...U.chapters??[],se],lastInspectTurn:void 0};p.inventory[ue]=ee}}}if(g){const R=((T=p.lastDebugPacket.storytellerThoughts)==null?void 0:T.join(`
`))??"",U=u?[f.dialogueTranscript??"",R?`
  ## Storyteller's Thoughts:
${R}
------`:""].filter(Boolean).join(`
`):[C?`Action: ${C}`:"",m.sceneDescription,m.logMessage??"",R?`
  ## Storyteller's Thoughts:

${R}
------`:""].filter(Boolean).join(`
`),M=p.mapData.nodes.filter(q=>q.themeName===g.name&&q.data.nodeType!=="feature"&&q.data.nodeType!=="room"),_=p.allNPCs.filter(q=>q.themeName===g.name),Q=p.inventory.filter(q=>q.holderId===me||M.some(ne=>ne.id===q.holderId)||_.some(ne=>ne.id===q.holderId)),W=[`Node IDs: ${M.map(q=>q.id).join(", ")}`,`NPC IDs: ${_.map(q=>q.id).join(", ")}`,`Item IDs: ${Q.map(q=>q.id).join(", ")}`].join(`
`),G=`${U}
${W}`,z=e.current,H=await Ri({themeName:g.name,turnContext:G,existingFacts:p.themeFacts,onFactsExtracted:o?async q=>new Promise(ne=>{c(q.map(Z=>Z.text),(Z,ae,ie)=>{ie&&(p.debugGoodFacts.push(...Z),p.debugBadFacts.push(...ae)),ne({proceed:ie})})}):void 0,onSetLoadingReason:t});p.lastDebugPacket.loremasterDebugInfo&&(p.lastDebugPacket.loremasterDebugInfo.extract=((P=H==null?void 0:H.debugInfo)==null?void 0:P.extract)??null,p.lastDebugPacket.loremasterDebugInfo.integrate=((b=H==null?void 0:H.debugInfo)==null?void 0:b.integrate)??null),H!=null&&H.refinementResult&&Fn(p,H.refinementResult.factsChange,p.globalTurnNumber,g.name),t(z)}nl(p,m,u),p.lastTurnChanges=v},[e,t,n,s,l,i,o,c]),clearObjectiveAnimationTimer:i}},sl=({getCurrentGameState:e,commitGameState:t,isLoading:n})=>{const s=r.useRef(e);r.useEffect(()=>{s.current=e},[e]);const o=r.useCallback((w,u)=>{var y;const x=e();if(n||x.dialogueState)return;const C=x.inventory.find(E=>E.name===w&&E.holderId===me);if(!C)return;const v=he(x),j=x.currentMapNodeId??"unknown";v.inventory=v.inventory.map(E=>{if(E.name!==w||E.holderId!==me)return E;const N=E.type==="page"||E.type==="book"||E.type==="picture"||E.type==="map";return{...E,holderId:j,...N?{stashed:!1}:{}}});const S={itemChanges:[{type:"loss",lostItem:{...C}}],npcChanges:[],objectiveAchieved:!1,objectiveTextChanged:!1,mainQuestTextChanged:!1,localTimeChanged:!1,localEnvironmentChanged:!1,localPlaceChanged:!1,currentMapNodeIdChanged:!1,scoreChangedBy:0,mapDataChanged:!1};v.lastTurnChanges=S;let A=u;if(!A){const E=((y=x.mapData.nodes.find(N=>N.id===j))==null?void 0:y.placeName)??x.localPlace??"Unknown Place";C.type==="vehicle"&&!C.isActive?A=`You left your ${w} parked at ${E}.`:A=`You left your ${w} at ${E}.`}A&&(v.gameLog=es(v.gameLog,A,ps),v.lastActionLog=A),t(v)},[e,t,n]),c=r.useCallback(w=>{var A;const u=e();if(n||u.dialogueState)return;const x=u.currentMapNodeId;if(!x)return;const C=ss(u.mapData,x),v=u.inventory.find(y=>y.name!==w?!1:y.holderId===x?!0:C.includes(y.holderId));if(!v)return;const j=he(u);j.inventory=j.inventory.map(y=>y.name===w&&y.holderId===v.holderId?{...y,holderId:me}:y);const S={itemChanges:[{type:"acquire",acquiredItem:{...v,holderId:me}}],npcChanges:[],objectiveAchieved:!1,objectiveTextChanged:!1,mainQuestTextChanged:!1,localTimeChanged:!1,localEnvironmentChanged:!1,localPlaceChanged:!1,currentMapNodeIdChanged:!1,scoreChangedBy:0,mapDataChanged:!1};j.lastTurnChanges=S,j.gameLog=ur(j.gameLog,w),(A=j.lastActionLog)!=null&&A.startsWith(`You left your ${w}`)&&(j.lastActionLog=null),t(j)},[e,t,n]),l=r.useCallback((w,u,x,C,v)=>{const j=s.current(),$=he(j);$.inventory=$.inventory.map(S=>{if(S.id!==w)return S;if(S.chapters){const A=typeof C=="number"?C:0,y=S.chapters.map((E,N)=>{if(N!==A)return E;const O={...E};return u!==void 0&&(O.actualContent=u),x!==void 0&&(O.visibleContent=x),v!==void 0&&(O.imageData=v),O});return{...S,chapters:y}}return S}),t($)},[t]),h=r.useCallback((w,u)=>{const x=s.current(),C=he(x);C.inventory=C.inventory.map(v=>{if(v.id!==w)return v;const j={...u,heading:Ta(u.heading,v.chapters??[])};return{...v,chapters:[...v.chapters??[],j],lastWriteTurn:x.globalTurnNumber}}),t(C)},[t]),i=r.useCallback((w,u)=>{const x=s.current(),C=he(x),v={...w,heading:Ta(w.heading,C.playerJournal)};C.playerJournal=[...C.playerJournal,v],C.lastJournalWriteTurn=x.globalTurnNumber,u&&(C.lastDebugPacket??(C.lastDebugPacket={prompt:"",rawResponseText:null,parsedResponse:null,timestamp:new Date().toISOString(),storytellerThoughts:null,mapUpdateDebugInfo:null,inventoryDebugInfo:null,loremasterDebugInfo:{collect:null,extract:null,integrate:null,distill:null,journal:null},dialogueDebugInfo:null}),C.lastDebugPacket.loremasterDebugInfo&&(C.lastDebugPacket.loremasterDebugInfo.journal=u)),t(C)},[t]),d=r.useCallback((w,u)=>{const x=s.current(),C=typeof u=="number"?u:0;if(C<0||C>=x.playerJournal.length)return;const v=he(x);v.playerJournal=v.playerJournal.map((j,$)=>$===C?{...j,actualContent:w}:j),t(v)},[t]),m=r.useCallback(()=>{const w=s.current(),u=he(w);return u.lastJournalInspectTurn=w.globalTurnNumber,t(u),u},[t]),g=r.useCallback((w,u)=>{const x=s.current(),C=he(x),v=C.inventory.map(j=>{if(j.id!==w)return j;const $=j.tags??[];return $.includes(u)?j:{...j,tags:[...$,u]}});C.inventory=v,t(C)},[t]),p=r.useCallback(w=>{const u=e();if(n||u.dialogueState)return;const x=he(u);x.inventory=x.inventory.map(C=>C.name===w&&C.holderId===me?{...C,stashed:!C.stashed}:C),x.lastTurnChanges=u.lastTurnChanges,t(x)},[e,t,n]),f=r.useCallback((w,u)=>{const x=u??s.current(),C=he(x);return C.inventory=C.inventory.map(v=>v.id===w?{...v,lastInspectTurn:x.globalTurnNumber}:v),t(C),C},[t]);return{handleDropItem:o,handleTakeLocationItem:c,updateItemContent:l,addJournalEntry:h,addPlayerJournalEntry:i,updatePlayerJournalContent:d,addTag:g,recordInspect:f,recordPlayerJournalInspect:m,handleStashToggle:p}},ol=e=>{const{getCurrentGameState:t,commitGameState:n,setGameStateStack:s,playerGenderProp:o,stabilityLevelProp:c,chaosLevelProp:l,setIsLoading:h,setLoadingReason:i,setError:d,setParseErrorCounter:m,triggerRealityShift:g,executeManualRealityShift:p,freeFormActionText:f,setFreeFormActionText:w,isLoading:u,hasGameBeenInitialized:x,loadingReasonRef:C,debugLore:v,openDebugLoreModal:j}=e,{processAiResponse:$,clearObjectiveAnimationTimer:S}=al({loadingReasonRef:C,setLoadingReason:i,setError:d,setGameStateStack:s,debugLore:v,openDebugLoreModal:j}),{handleDropItem:A,handleTakeLocationItem:y,updateItemContent:E,addJournalEntry:N,addPlayerJournalEntry:O,updatePlayerJournalContent:F,recordPlayerJournalInspect:D,recordInspect:k,handleStashToggle:L}=sl({getCurrentGameState:t,commitGameState:n,isLoading:u}),I=r.useCallback(async M=>{const _=M.currentThemeObject;if(_&&M.globalTurnNumber>0&&M.globalTurnNumber%ms===0&&M.lastLoreDistillTurn!==M.globalTurnNumber){const Q=M.mapData.nodes.filter(H=>H.themeName===_.name),W=Array.from(new Set(M.inventory.filter(H=>H.holderId===me||Q.some(ne=>ne.id===H.holderId)?!0:!!M.allNPCs.find(ne=>ne.id===H.holderId&&ne.themeName===_.name)).map(H=>H.name))),G=Q.map(H=>H.placeName);i("loremaster_refine");const z=await ws({themeName:_.name,facts:M.themeFacts,currentQuest:M.mainQuest,currentObjective:M.currentObjective,inventoryItemNames:W,mapNodeNames:G});M.lastLoreDistillTurn=M.globalTurnNumber,M.lastDebugPacket??(M.lastDebugPacket={prompt:"",rawResponseText:null,parsedResponse:null,timestamp:new Date().toISOString(),storytellerThoughts:null,mapUpdateDebugInfo:null,inventoryDebugInfo:null,loremasterDebugInfo:{collect:null,extract:null,integrate:null,distill:null,journal:null},dialogueDebugInfo:null}),M.lastDebugPacket.loremasterDebugInfo&&(M.lastDebugPacket.loremasterDebugInfo.distill=(z==null?void 0:z.debugInfo)??null),z!=null&&z.refinementResult&&Fn(M,z.refinementResult.factsChange,M.globalTurnNumber,_.name)}},[i]),T=r.useCallback(async(M,_=!1,Q)=>{const W=Q??t();if(u||W.dialogueState)return;h(!0),d(null),m(0),w("");const G=he(W),z=_?-Rt:0,H=W.currentThemeObject;if(!H){d("Critical error: Current theme object not found. Cannot proceed."),h(!1),i(null);return}const q=W.gameLog.slice(-Bn),ne=W.mapData.nodes.filter(J=>J.themeName===H.name&&J.data.nodeType!=="feature"&&J.data.nodeType!=="room"),Z=W.allNPCs.filter(J=>J.themeName===H.name),ae=W.currentMapNodeId?W.mapData.nodes.find(J=>J.id===W.currentMapNodeId)??null:null,ie=W.inventory.filter(J=>J.holderId!==me&&J.holderId===W.currentMapNodeId),se=On(ne,Z,`${W.currentScene} ${M}`,"Locations mentioned:","NPCs mentioned:"),ue=[...W.themeFacts].sort((J,oe)=>oe.tier-J.tier||oe.createdTurn-J.createdTurn).map(J=>({text:J.text,tier:J.tier}));i("loremaster_collect");const ee=await xs({themeName:H.name,facts:ue,lastScene:W.currentScene,playerAction:M,recentLogEntries:q,detailedContext:se}),we=(ee==null?void 0:ee.facts)??[],V=zi(W.currentScene,M,W.inventory.filter(J=>J.holderId===me),ie,W.mainQuest,W.currentObjective,H,q,ne,Z,we,W.localTime,W.localEnvironment,W.localPlace,o,W.themeHistory,ae,W.mapData,W.destinationNodeId);let B=he(W);const le={prompt:V,systemInstruction:Ut,jsonSchema:void 0,rawResponseText:null,parsedResponse:null,timestamp:new Date().toISOString(),storytellerThoughts:null,mapUpdateDebugInfo:null,inventoryDebugInfo:null,loremasterDebugInfo:{collect:(ee==null?void 0:ee.debugInfo)??null,extract:null,integrate:null,distill:null,journal:null},dialogueDebugInfo:null};B.lastDebugPacket=le,_&&(B.score-=Rt);let ce=!1;try{i("storyteller");const{response:J,thoughts:oe,systemInstructionUsed:ye,jsonSchemaUsed:Ae,promptUsed:Te}=await Ln(V);B.lastDebugPacket={...B.lastDebugPacket,rawResponseText:J.text??null,storytellerThoughts:oe,systemInstruction:ye,jsonSchema:Ae,prompt:Te};const Pe={nodes:B.mapData.nodes.filter(ke=>ke.themeName===H.name),edges:B.mapData.edges.filter(ke=>{const Ge=B.mapData.nodes.find(et=>et.id===ke.sourceNodeId),De=B.mapData.nodes.find(et=>et.id===ke.targetNodeId);return(Ge==null?void 0:Ge.themeName)===H.name&&(De==null?void 0:De.themeName)===H.name})},Ke=await an(J.text??"",o,H,()=>{m(1)},W.lastActionLog??void 0,W.currentScene,Z,Pe,W.inventory.filter(ke=>ke.holderId===me));await $(Ke,H,B,{baseStateSnapshot:G,scoreChangeFromAction:z,playerActionText:M})}catch(J){if(ce=!0,console.error("Error executing player action:",J),Rn(J)){const oe=rn(J);d(`AI service error (${String(oe??"unknown")}). Please retry.`)}else{const oe=J instanceof Error?J.message:String(J);d(`The Dungeon Master's connection seems unstable. Error: (${oe}). Please try again or consult the game log.`)}B=he(G),B.lastActionLog=`Your action ("${M}") caused a ripple in reality, but the outcome is obscured.`,B.actionOptions=["Look around.","Ponder the situation.","Check your inventory.","Try to move on.","Consider your objective.","Plan your next steps."],B.dialogueState=null,B.lastDebugPacket={...le,error:J instanceof Error?J.message:String(J)}}finally{if(ce||(B.turnsSinceLastShift+=1,B.globalTurnNumber+=1,await I(B)),n(B),h(!1),i(null),!B.isCustomGameMode&&!B.dialogueState){const J=H.name===B.pendingNewThemeNameAfterShift?0:c;B.turnsSinceLastShift>J&&Math.random()*100<l&&(d("CHAOS SHIFT! Reality fractures without warning!"),g(!0))}}},[t,n,u,o,c,l,g,h,i,d,m,w,$,I]),P=r.useCallback(M=>{var G;const _=t();let Q=M;const W=pr(_.inventory.map(z=>({name:z.name,type:"item",description:z.description,item:z})));if(W){const{regex:z,lookup:H}=W,q=new Set;let ne;for(;(ne=z.exec(M))!==null;){const Z=H.get(ne[0].toLowerCase()),ae=Z==null?void 0:Z.entityData.item;ae&&(ae.type==="book"||ae.type==="page")&&q.add(ae)}for(const Z of q){const ae=(G=Z.tags)==null?void 0:G.includes("recovered"),ie=(Z.chapters??[]).map(se=>`${se.heading}
${ae?se.actualContent??"":se.visibleContent??""}`).join(`

`);Q+=`
The contents of the ${Z.name} follow:
${ie}`}}if(M==="Try to force your way back to the previous reality."){const z=Object.keys(_.themeHistory).pop();if(z){const H={..._,pendingNewThemeNameAfterShift:z};s(q=>[H,q[1]]),_.isCustomGameMode?p():g()}else d("No previous reality to return to.")}else T(Q)},[t,T,g,d,s,p]),b=r.useCallback((M,_,Q,W)=>{var G;if(_==="inspect"){const z=k(M.id,W);if(M.type==="book"||M.type==="page"){const H=(G=M.tags)==null?void 0:G.includes("recovered"),q=(M.chapters??[]).map(ne=>`${ne.heading}
${H?ne.actualContent??"":ne.visibleContent??""}

`).join("");T(`Player reads the ${M.name} - ${M.description}. Here's what the player reads:
${q}`,!1,z)}else T(`Player investigates the ${M.name} - ${M.description}.`,!1,z)}else _==="specific"&&Q?T(Q.promptEffect):_==="generic"&&T(`Attempt to use: ${M.name}`)},[T,k]),R=r.useCallback(()=>{const M=t();f.trim()&&M.score>=Rt&&!u&&x&&!M.dialogueState&&T(f.trim(),!0)},[f,t,u,x,T]),U=r.useCallback(()=>{s(M=>{const[_,Q]=M;return Q&&_.globalTurnNumber>0?(S(),[Q,_]):M})},[s,S]);return{processAiResponse:$,executePlayerAction:T,handleActionSelect:P,handleItemInteraction:b,handleDropItem:A,handleTakeLocationItem:y,updateItemContent:E,addJournalEntry:N,addPlayerJournalEntry:O,updatePlayerJournalContent:F,handleStashToggle:L,recordPlayerJournalInspect:D,handleFreeFormActionSubmit:R,handleUndoTurn:U}},Ft=()=>({IDEAL_EDGE_LENGTH:is,NESTED_PADDING:rs,NESTED_ANGLE_PADDING:os,LABEL_MARGIN_PX:nn,LABEL_LINE_HEIGHT_EM:tn,LABEL_OVERLAP_MARGIN_PX:gs,ITEM_ICON_SCALE:hs}),rl=e=>{const{setGameStateStack:t}=e,n=r.useCallback(l=>{t(h=>{const i=h[0].mapLayoutConfig;return i.IDEAL_EDGE_LENGTH===l.IDEAL_EDGE_LENGTH&&i.NESTED_PADDING===l.NESTED_PADDING&&i.NESTED_ANGLE_PADDING===l.NESTED_ANGLE_PADDING&&i.LABEL_OVERLAP_MARGIN_PX===l.LABEL_OVERLAP_MARGIN_PX&&i.ITEM_ICON_SCALE===l.ITEM_ICON_SCALE?h:[{...h[0],mapLayoutConfig:l},h[1]]})},[t]),s=r.useCallback(l=>{t(h=>[{...h[0],mapViewBox:l},h[1]])},[t]),o=r.useCallback(l=>{t(h=>{const i=h[0];let d=!1;const m=new Map(i.mapData.nodes.map(f=>[f.id,{...f}]));for(const f of l){const w=m.get(f.id);if(w){const u=w.position.x!==f.position.x||w.position.y!==f.position.y,x=f.data.visualRadius!==void 0&&w.data.visualRadius!==f.data.visualRadius;(u||x)&&(w.position={...f.position},f.data.visualRadius!==void 0&&(w.data.visualRadius=f.data.visualRadius),d=!0)}}const g={...i.mapData,nodes:Array.from(m.values())},p={...i,mapData:g};return d?[p,h[1]]:h})},[t]),c=r.useCallback(l=>{t(h=>[{...h[0],destinationNodeId:l},h[1]])},[t]);return{handleMapLayoutConfigChange:n,handleMapViewBoxChange:s,handleMapNodesPositionChange:o,handleSelectDestinationNode:c}},il=e=>{const{setGameStateStack:t}=e,n=rl({setGameStateStack:t});return{...ol(e),...n}},ll=e=>{const{theme:t,inventory:n,playerGender:s,isTransitioningFromShift:o,themeMemory:c,mapDataForTheme:l,npcsForTheme:h}=e,i=n.filter(m=>m.holderId===me);let d="";return o&&c&&l&&h?d=Bi(t,i,s,c,l,h):o?d=Vi(t,i,s):d=Ui(t,s),d},Cs="idb:",ft=(e,t)=>`${e}_${String(t)}`,st=(e,t)=>`${Cs}${ft(e,t)}`,Vt=e=>typeof e=="string"&&e.startsWith(Cs),zn=Jo("whispers-images",1,{upgrade(e){e.createObjectStore("chapterImages")}}),Ss=async()=>{const t=(await zn).transaction("chapterImages","readwrite");await t.store.clear(),await t.done},It=async(e,t,n)=>{const s=await zn,o=ft(e,t);await s.put("chapterImages",n,o)},jt=async(e,t)=>{const n=await zn,s=ft(e,t);return await n.get("chapterImages",s)??null},cl=async e=>{const t=he(e);return await Promise.all(t.inventory.map(async n=>{var s;await Promise.all(((s=n.chapters)==null?void 0:s.map(async(o,c)=>{o.imageData&&!Vt(o.imageData)&&(await It(n.id,c,o.imageData),o.imageData=st(n.id,c))}))??[])})),await Promise.all(t.playerJournal.map(async(n,s)=>{n.imageData&&!Vt(n.imageData)&&(await It(fe,s,n.imageData),n.imageData=st(fe,s))})),t},Fa=async e=>{const t=he(e);return await Promise.all(t.inventory.map(async n=>{var s;await Promise.all(((s=n.chapters)==null?void 0:s.map(async(o,c)=>{if(Vt(o.imageData)){const l=await jt(n.id,c);o.imageData=l??void 0}}))??[])})),await Promise.all(t.playerJournal.map(async(n,s)=>{if(Vt(n.imageData)){const o=await jt(fe,s);n.imageData=o??void 0}})),t},_a=async e=>{const t=he(e);return await Promise.all(t.inventory.map(async n=>{var s;await Promise.all(((s=n.chapters)==null?void 0:s.map(async(o,c)=>{o.imageData||await jt(n.id,c)&&(o.imageData=st(n.id,c))}))??[])})),await Promise.all(t.playerJournal.map(async(n,s)=>{n.imageData||await jt(fe,s)&&(n.imageData=st(fe,s))})),t},dl=e=>{const{playerGenderProp:t,enabledThemePacksProp:n,stabilityLevelProp:s,chaosLevelProp:o,setIsLoading:c,setLoadingReason:l,setError:h,setParseErrorCounter:i,setHasGameBeenInitialized:d,onSettingsUpdateFromLoad:m,getCurrentGameState:g,commitGameState:p,resetGameStateStack:f,setGameStateStack:w,processAiResponse:u}=e,x=r.useCallback(async(S={})=>{const{isRestart:A=!1,explicitThemeName:y=null,isTransitioningFromShift:E=!1,customGameFlag:N=!1,savedStateToLoad:O=null,clearImages:F=!1}=S;if(c(!0),l(E?"reality_shift_load":"initial_load"),h(null),i(0),(A||F)&&await Ss(),O){const[b,R]=O;let U=b.currentThemeObject;!U&&b.currentThemeName&&(U=Zt(b.currentThemeName)),b.currentThemeName&&!U&&h(`Failed to apply loaded state: Theme "${b.currentThemeName}" not found. Game state may be unstable.`);let M=b.mapData;U&&(M=await mr(M,U));const _=b.currentMapNodeId,Q=b.destinationNodeId,W=b.mapLayoutConfig;typeof W.NESTED_PADDING!="number"&&(W.NESTED_PADDING=Ft().NESTED_PADDING),typeof W.NESTED_ANGLE_PADDING!="number"&&(W.NESTED_ANGLE_PADDING=Ft().NESTED_ANGLE_PADDING);const G={...b,currentThemeObject:U,mapData:M,currentMapNodeId:_,destinationNodeId:Q,mapLayoutConfig:W,mapViewBox:b.mapViewBox,isCustomGameMode:b.isCustomGameMode,isAwaitingManualShiftThemeSelection:b.isAwaitingManualShiftThemeSelection,globalTurnNumber:b.globalTurnNumber};w([G,R??G]),m({stabilityLevel:G.stabilityLevel,chaosLevel:G.chaosLevel,enabledThemePacks:G.enabledThemePacks,playerGender:G.playerGender}),d(!0),c(!1),l(null);return}let D=y;if(!D){const b=Za(n);if(b.length===0){h("No adventure themes are enabled or available. Please check settings."),c(!1),l(null);return}D=b[Math.floor(Math.random()*b.length)].name}const k=Zt(D);if(!k){h(`Theme "${D}" not found. Cannot start game.`),c(!1),l(null);return}let L=Xt();if(L.playerGender=t,L.enabledThemePacks=n,L.stabilityLevel=s,L.chaosLevel=o,L.mapLayoutConfig=Ft(),L.mapViewBox=Pn,L.globalTurnNumber=0,L.isCustomGameMode=N,L.currentThemeName=k.name,L.currentThemeObject=k,L.turnsSinceLastShift=0,E){const b=g();L.inventory=b.inventory,L.score=b.score,L.themeHistory=b.themeHistory,L.mapLayoutConfig=b.mapLayoutConfig,L.mapViewBox=b.mapViewBox,L.globalTurnNumber=b.globalTurnNumber,L.mapData.nodes=b.mapData.nodes.filter(R=>R.themeName!==k.name),L.mapData.edges=b.mapData.edges.filter(R=>{const U=b.mapData.nodes.find(_=>_.id===R.sourceNodeId),M=b.mapData.nodes.find(_=>_.id===R.targetNodeId);return(U==null?void 0:U.themeName)!==k.name||(M==null?void 0:M.themeName)!==k.name}),L.allNPCs=b.allNPCs.filter(R=>R.themeName!==k.name)}else L.mapData={nodes:[],edges:[]},L.allNPCs=[],L.themeHistory={},L.score=0,L.inventory=[],L.mapViewBox=Pn;const I=he(L),T=Object.prototype.hasOwnProperty.call(L.themeHistory,k.name),P=ll({theme:k,inventory:L.inventory,playerGender:t,isTransitioningFromShift:E,themeMemory:T?L.themeHistory[k.name]:void 0,mapDataForTheme:L.mapData,npcsForTheme:L.allNPCs.filter(b=>b.themeName===k.name)});L.lastDebugPacket={prompt:P,systemInstruction:Ut,jsonSchema:void 0,rawResponseText:null,parsedResponse:null,timestamp:new Date().toISOString(),storytellerThoughts:null,mapUpdateDebugInfo:null,inventoryDebugInfo:null,loremasterDebugInfo:{collect:null,extract:null,integrate:null,distill:null,journal:null},dialogueDebugInfo:null};try{const{response:b,thoughts:R,systemInstructionUsed:U,jsonSchemaUsed:M,promptUsed:_}=await Ln(P);L.lastDebugPacket.rawResponseText=b.text??null,L.lastDebugPacket.storytellerThoughts=R,L.lastDebugPacket.systemInstruction=U,L.lastDebugPacket.jsonSchema=M,L.lastDebugPacket.prompt=_;const Q={nodes:L.mapData.nodes.filter(G=>G.themeName===k.name),edges:L.mapData.edges.filter(G=>{const z=L.mapData.nodes.find(q=>q.id===G.sourceNodeId),H=L.mapData.nodes.find(q=>q.id===G.targetNodeId);return(z==null?void 0:z.themeName)===k.name&&(H==null?void 0:H.themeName)===k.name})},W=await an(b.text??"",t,k,()=>{i(1)},void 0,void 0,L.allNPCs.filter(G=>G.themeName===k.name),Q,L.inventory.filter(G=>G.holderId===me));await u(W,k,L,{baseStateSnapshot:I,forceEmptyInventory:!E&&A,playerActionText:void 0}),d(!0),L.pendingNewThemeNameAfterShift=null,(!E||L.globalTurnNumber===0)&&(L.globalTurnNumber=1)}catch(b){if(console.error("Error loading initial game:",b),Rn(b)){L=he(I);const R=rn(b);h(`AI service error (${String(R??"unknown")}). Please retry.`)}else{const R=b instanceof Error?b.message:String(b);h(`Failed to initialize the adventure in "${k.name}": ${R}`)}L.lastDebugPacket&&(L.lastDebugPacket.error=b instanceof Error?b.message:String(b))}finally{p(L),c(!1),l(null)}},[t,n,s,o,c,l,h,i,d,m,g,p,u,w]),C=r.useCallback(()=>{const S=bn(t,n,s,o);f(S),d(!1),x({isRestart:!0,customGameFlag:!1})},[x,d,f,t,n,s,o]),v=r.useCallback(S=>{const A=bn(t,n,s,o);f(A),d(!1),x({explicitThemeName:S,isRestart:!0,customGameFlag:!0})},[x,d,f,t,n,s,o]),j=r.useCallback(()=>{h(null);const S=bn(t,n,s,o);f(S),d(!1),x({isRestart:!0,customGameFlag:!1})},[x,h,d,f,t,n,s,o]),$=r.useCallback(async()=>{var F;h(null);const S=g();if(!S.currentThemeName){await x({isRestart:!0,customGameFlag:S.isCustomGameMode});return}const A=(F=S.lastDebugPacket)==null?void 0:F.prompt,y=S.currentThemeObject;if(!A||!y){const D={...S,actionOptions:["Look around.","Ponder the situation.","Try to move on.","Check your inventory.","Consider your objective.","Plan your next steps."],lastActionLog:"Attempting to re-establish connection with the narrative flow...",dialogueState:null};p(D),c(!1),l(null);return}c(!0),l("storyteller"),i(0);const E=he(S);let N=he(S);const O={prompt:A,systemInstruction:Ut,jsonSchema:void 0,rawResponseText:null,parsedResponse:null,timestamp:new Date().toISOString(),storytellerThoughts:null,mapUpdateDebugInfo:null,inventoryDebugInfo:null,loremasterDebugInfo:{collect:null,extract:null,integrate:null,distill:null,journal:null},dialogueDebugInfo:null};N.lastDebugPacket=O;try{const{response:D,thoughts:k,systemInstructionUsed:L,jsonSchemaUsed:I,promptUsed:T}=await Ln(A);N.lastDebugPacket.rawResponseText=D.text??null,N.lastDebugPacket.storytellerThoughts=k,N.lastDebugPacket.systemInstruction=L,N.lastDebugPacket.jsonSchema=I,N.lastDebugPacket.prompt=T;const P=N.allNPCs.filter(U=>U.themeName===y.name),b={nodes:N.mapData.nodes.filter(U=>U.themeName===y.name),edges:N.mapData.edges.filter(U=>{const M=N.mapData.nodes.find(Q=>Q.id===U.sourceNodeId),_=N.mapData.nodes.find(Q=>Q.id===U.targetNodeId);return(M==null?void 0:M.themeName)===y.name&&(_==null?void 0:_.themeName)===y.name})},R=await an(D.text??"",t,y,()=>{i(1)},S.lastActionLog??void 0,S.currentScene,P,b,S.inventory.filter(U=>U.holderId===me));await u(R,y,N,{baseStateSnapshot:E,scoreChangeFromAction:0,playerActionText:void 0}),N.turnsSinceLastShift+=1,N.globalTurnNumber+=1}catch(D){console.error("Error retrying last main AI request:",D);const k=D instanceof Error?D.message:String(D);h(`Retry failed: ${k}.`),N=he(E),N.lastActionLog="Retry failed. The outcome remains uncertain.",N.actionOptions=["Look around.","Ponder the situation.","Check your inventory.","Try to move on.","Consider your objective.","Plan your next steps."],N.dialogueState=null,N.lastDebugPacket&&(N.lastDebugPacket.error=k)}finally{p(N),c(!1),l(null)}},[g,x,p,h,c,l,i,u,t]);return{loadInitialGame:x,handleStartNewGameFromButton:C,startCustomGame:v,executeRestartGame:j,handleRetry:$}},Ga=e=>{const{currentState:t,playerGender:n,enabledThemePacks:s,stabilityLevel:o,chaosLevel:c}=e;return{...t,saveGameVersion:Ze,playerGender:n,enabledThemePacks:s,stabilityLevel:o,chaosLevel:c,mapData:t.mapData,currentMapNodeId:t.currentMapNodeId,destinationNodeId:t.destinationNodeId,mapLayoutConfig:t.mapLayoutConfig,mapViewBox:t.mapViewBox,isCustomGameMode:t.isCustomGameMode,isAwaitingManualShiftThemeSelection:t.isAwaitingManualShiftThemeSelection,globalTurnNumber:t.globalTurnNumber,currentThemeObject:t.currentThemeObject}},ul=e=>{const{playerGenderProp:t,enabledThemePacksProp:n,stabilityLevelProp:s,chaosLevelProp:o,onSettingsUpdateFromLoad:c,initialSavedStateFromApp:l,initialDebugStackFromApp:h,isAppReady:i,openDebugLoreModal:d}=e,[m,g]=r.useState(()=>[Xt(),Xt()]),[p,f]=r.useState(()=>h??[null,null]),[w,u]=r.useState(!1),x=ys(),C=r.useRef(x),v=r.useCallback(X=>{C.current=X,Xe(X)},[]),[j,$]=r.useState(null),[S,A]=r.useState(0),[y,E]=r.useState(""),[N,O]=r.useState(!1),F=r.useRef(!1),D=r.useRef(!1),k=r.useRef(()=>{}),L=r.useRef(()=>{}),I=r.useRef(()=>Promise.resolve()),T=r.useCallback(()=>m[0],[m]),P=r.useCallback(X=>{g(re=>[X,re[0]]),f(re=>[X.lastDebugPacket??null,re[0]])},[]),b=r.useCallback(X=>{g([X,X]),f([X.lastDebugPacket??null,X.lastDebugPacket??null])},[]),R=r.useCallback(()=>{const[X,re]=m;return[Ga({currentState:X,playerGender:t,enabledThemePacks:n,stabilityLevel:s,chaosLevel:o}),re?Ga({currentState:re,playerGender:t,enabledThemePacks:n,stabilityLevel:s,chaosLevel:o}):void 0]},[m,t,n,s,o]),U=r.useCallback(()=>p,[p]),{triggerRealityShift:M,executeManualRealityShift:_,completeManualShiftWithSelectedTheme:Q,cancelManualShiftThemeSelection:W}=Hi({getCurrentGameState:T,setGameStateStack:g,loadInitialGame:X=>{I.current(X)},enabledThemePacksProp:n,playerGenderProp:t,stabilityLevelProp:s,chaosLevelProp:o,setError:$,setLoadingReason:v,isLoading:w});k.current=M,L.current=_;const G=T(),z=r.useCallback(()=>{g(X=>[{...X[0],debugLore:!X[0].debugLore},X[1]])},[]),H=r.useCallback(()=>{g(X=>[{...X[0],debugGoodFacts:[],debugBadFacts:[]},X[1]])},[]),{handleMapLayoutConfigChange:q,handleMapViewBoxChange:ne,handleMapNodesPositionChange:Z,handleSelectDestinationNode:ae,processAiResponse:ie,handleActionSelect:se,handleItemInteraction:ue,handleDropItem:ee,handleTakeLocationItem:we,handleStashToggle:V,updateItemContent:B,addJournalEntry:le,addPlayerJournalEntry:ce,updatePlayerJournalContent:J,recordPlayerJournalInspect:oe,handleFreeFormActionSubmit:ye,handleUndoTurn:Ae}=il({getCurrentGameState:T,commitGameState:P,setGameStateStack:g,playerGenderProp:t,stabilityLevelProp:s,chaosLevelProp:o,setIsLoading:u,setLoadingReason:v,setError:$,setParseErrorCounter:A,triggerRealityShift:M,executeManualRealityShift:_,freeFormActionText:y,setFreeFormActionText:E,isLoading:w,hasGameBeenInitialized:N,loadingReasonRef:C,debugLore:G.debugLore,openDebugLoreModal:d}),{loadInitialGame:Te,handleStartNewGameFromButton:Pe,startCustomGame:Ke,executeRestartGame:ke,handleRetry:Ge}=dl({playerGenderProp:t,enabledThemePacksProp:n,stabilityLevelProp:s,chaosLevelProp:o,setIsLoading:u,setLoadingReason:v,setError:$,setParseErrorCounter:A,setHasGameBeenInitialized:O,onSettingsUpdateFromLoad:c,getCurrentGameState:T,commitGameState:P,resetGameStateStack:b,setGameStateStack:g,processAiResponse:ie});I.current=Te;const{isDialogueExiting:De,handleDialogueOptionSelect:et,handleForceExitDialogue:Pt}=Gi({getCurrentGameState:T,commitGameState:P,playerGenderProp:t,setError:$,setIsLoading:u,setLoadingReason:v,onDialogueConcluded:(X,re,be)=>{const ge=he(re);return ie(X,re.currentThemeObject,ge,{baseStateSnapshot:he(re),isFromDialogueSummary:!0,playerActionText:void 0,dialogueTranscript:re.gameLog[re.gameLog.length-1]??""}).then(()=>{ge.lastDebugPacket??(ge.lastDebugPacket={prompt:"",rawResponseText:null,parsedResponse:null,timestamp:new Date().toISOString(),storytellerThoughts:null,mapUpdateDebugInfo:null,inventoryDebugInfo:null,loremasterDebugInfo:{collect:null,extract:null,integrate:null,distill:null},dialogueDebugInfo:null}),ge.lastDebugPacket.prompt=`[Dialogue Outcome]
${be.summaryPrompt??ge.lastDebugPacket.prompt}`,ge.lastDebugPacket.rawResponseText=be.summaryRawResponse??null,ge.lastDebugPacket.storytellerThoughts=be.summaryThoughts??null,ge.lastDebugPacket.parsedResponse=X,ge.lastDebugPacket.dialogueDebugInfo=be,P(ge),u(!1),v(null)}).catch(Se=>{console.error("Error in post-dialogue processAiResponse:",Se),$("Failed to fully process dialogue conclusion. Game state might be inconsistent."),P(re),u(!1),v(null)})}});r.useEffect(()=>{i&&!N&&l&&!F.current&&(Te({savedStateToLoad:l}),F.current=!0)},[i,N,l,Te]),r.useEffect(()=>{i&&h&&!D.current&&(f(h),D.current=!0)},[i,h]);const K=T();r.useEffect(()=>{N&&g(X=>{const re=X[0],be=re.enabledThemePacks.length===n.length&&re.enabledThemePacks.every((Se,Ne)=>Se===n[Ne]);return re.playerGender===t&&be&&re.stabilityLevel===s&&re.chaosLevel===o?X:[{...re,playerGender:t,enabledThemePacks:[...n],stabilityLevel:s,chaosLevel:o},X[1]]})},[t,n,s,o,N]);const Je=r.useMemo(()=>{const X={},re=new Set(K.mapData.nodes.map(be=>be.id));return K.inventory.forEach(be=>{var ge;if(re.has(be.holderId)){const Se=X[be.holderId]??{hasUseful:!1,hasVehicle:!1};(ge=be.tags)!=null&&ge.includes("junk")||(Se.hasUseful=!0),be.type==="vehicle"&&(Se.hasVehicle=!0),X[be.holderId]=Se}}),X},[K.inventory,K.mapData.nodes]),dt=r.useCallback(async()=>{const X=T(),re=X.currentThemeObject;if(!re)return;u(!0),$(null);const be=X.mapData.nodes.filter(Ue=>Ue.themeName===re.name),ge=Array.from(new Set(X.inventory.filter(Ue=>Ue.holderId===me||be.some(We=>We.id===Ue.holderId)?!0:!!X.allNPCs.find(We=>We.id===Ue.holderId&&We.themeName===re.name)).map(Ue=>Ue.name))),Se=be.map(Ue=>Ue.placeName);v("loremaster_refine");const Ne=await ws({themeName:re.name,facts:X.themeFacts,currentQuest:X.mainQuest,currentObjective:X.currentObjective,inventoryItemNames:ge,mapNodeNames:Se}),Ie=he(X);Ie.lastLoreDistillTurn=X.globalTurnNumber,Ie.lastDebugPacket??(Ie.lastDebugPacket={prompt:"",rawResponseText:null,parsedResponse:null,timestamp:new Date().toISOString(),storytellerThoughts:null,mapUpdateDebugInfo:null,inventoryDebugInfo:null,loremasterDebugInfo:{collect:null,extract:null,integrate:null,distill:null},dialogueDebugInfo:null}),Ie.lastDebugPacket.loremasterDebugInfo&&(Ie.lastDebugPacket.loremasterDebugInfo.distill=(Ne==null?void 0:Ne.debugInfo)??null),Ne!=null&&Ne.refinementResult&&Fn(Ie,Ne.refinementResult.factsChange,Ie.globalTurnNumber,re.name),P(Ie),u(!1),v(null)},[P,T,$,u,v]);return r.useEffect(()=>{!N||w||K.dialogueState!==null||K.globalTurnNumber>0&&K.globalTurnNumber%ms===0&&K.lastLoreDistillTurn!==K.globalTurnNumber&&dt()},[K.globalTurnNumber,K.lastLoreDistillTurn,dt,N,w,K.dialogueState]),{currentTheme:K.currentThemeObject,currentScene:K.currentScene,actionOptions:K.actionOptions,mainQuest:K.mainQuest,currentObjective:K.currentObjective,inventory:K.inventory.filter(X=>X.holderId===me),playerJournal:K.playerJournal,lastJournalWriteTurn:K.lastJournalWriteTurn,lastJournalInspectTurn:K.lastJournalInspectTurn,lastLoreDistillTurn:K.lastLoreDistillTurn,itemsHere:r.useMemo(()=>{if(!K.currentMapNodeId)return[];const X=K.inventory.filter(Se=>Se.holderId===K.currentMapNodeId),re=ss(K.mapData,K.currentMapNodeId),be=K.inventory.filter(Se=>re.includes(Se.holderId)),ge=[...X];return be.forEach(Se=>{ge.includes(Se)||ge.push(Se)}),ge},[K.currentMapNodeId,K.inventory,K.mapData]),itemPresenceByNode:Je,gameLog:K.gameLog,lastActionLog:K.lastActionLog,isLoading:w||K.dialogueState!==null&&De,loadingReason:x,error:j,themeHistory:K.themeHistory,allNPCs:K.allNPCs,mapData:K.mapData,currentMapNodeId:K.currentMapNodeId,destinationNodeId:K.destinationNodeId,mapLayoutConfig:K.mapLayoutConfig,mapViewBox:K.mapViewBox,score:K.score,freeFormActionText:y,setFreeFormActionText:E,handleFreeFormActionSubmit:ye,objectiveAnimationType:K.objectiveAnimationType,localTime:K.localTime,localEnvironment:K.localEnvironment,localPlace:K.localPlace,turnsSinceLastShift:K.turnsSinceLastShift,globalTurnNumber:K.globalTurnNumber,isCustomGameMode:K.isCustomGameMode,isAwaitingManualShiftThemeSelection:K.isAwaitingManualShiftThemeSelection,dialogueState:K.dialogueState,isDialogueExiting:De,handleDialogueOptionSelect:et,handleForceExitDialogue:Pt,lastDebugPacket:p[0],lastTurnChanges:K.lastTurnChanges,gameStateStack:m,debugPacketStack:p,handleActionSelect:se,handleItemInteraction:ue,handleDropItem:ee,handleTakeLocationItem:we,updateItemContent:B,handleRetry:Ge,executeRestartGame:ke,executeManualRealityShift:_,completeManualShiftWithSelectedTheme:Q,cancelManualShiftThemeSelection:W,startCustomGame:Ke,gatherCurrentGameState:R,gatherDebugPacketStack:U,applyLoadedGameState:Te,setError:$,setIsLoading:u,hasGameBeenInitialized:N,handleStartNewGameFromButton:Pe,handleMapLayoutConfigChange:q,handleMapViewBoxChange:ne,handleMapNodesPositionChange:Z,handleSelectDestinationNode:ae,handleUndoTurn:Ae,handleStashToggle:V,addJournalEntry:le,addPlayerJournalEntry:ce,updatePlayerJournalContent:J,recordPlayerJournalInspect:oe,commitGameState:P,handleDistillFacts:dt,toggleDebugLore:z,clearDebugFacts:H,debugLore:K.debugLore,debugGoodFacts:K.debugGoodFacts,debugBadFacts:K.debugBadFacts}};function Ns({tag:e="h2",children:t,icon:n,preset:s="amber",font:o="2xl"}){const c=e,l={slate:"text-slate-300",gray:"text-gray-400",zinc:"text-zinc-400",neutral:"text-neutral-400",stone:"text-stone-400",red:"text-red-400",orange:"text-orange-400",amber:"text-amber-400",yellow:"text-yellow-400",lime:"text-lime-400",green:"text-green-400",emerald:"text-emerald-400",teal:"text-teal-400",cyan:"text-cyan-400",sky:"text-sky-400",blue:"text-blue-400",indigo:"text-indigo-400",violet:"text-violet-400",purple:"text-purple-400",fuchsia:"text-fuchsia-400",pink:"text-pink-400",rose:"text-rose-400"},h={sm:"text-sm font-semibold",base:"text-base font-semibold",lg:"text-lg font-semibold",xl:"text-xl font-semibold","2xl":"text-2xl font-semibold","3xl":"text-3xl font-semibold","4xl":"text-4xl font-semibold"},i=n?a.jsx("span",{className:"mr-2 inline-flex",children:n}):null;return r.createElement(c,{className:`${h[o]} ${l[s]}`},i,t)}Ns.defaultProps={children:void 0,font:"2xl",icon:void 0,preset:"amber",tag:"h2"};function Be({header:e,headerIcon:t,children:n,text:s,highlightEntities:o,enableMobileTap:c=!1,containerClassName:l="p-3",headerTag:h="h2",borderColorClass:i="border-amber-700",backgroundColorClass:d="",borderWidthClass:m="border-b",headerFont:g="2xl",headerPreset:p="amber",headerWrapperClassName:f="",contentFontClass:w="",contentColorClass:u="text-slate-200"}){const x=s?s.split(`
`).map(C=>a.jsx("p",{className:"mb-3 last:mb-0",children:o?_n(C,o,c):C},C)):n;return a.jsxs("section",{className:`${l} ${d} ${m} ${i}`,children:[e?a.jsx("div",{className:` ${f} `,children:a.jsx(Ns,{font:g,icon:t,preset:p,tag:h,children:e})}):null,a.jsx("div",{className:`${w} ${u}`,children:x})]})}Be.defaultProps={backgroundColorClass:"",borderColorClass:"border-amber-700",borderWidthClass:"border-b",children:void 0,containerClassName:"p-3",contentColorClass:"text-slate-200",contentFontClass:"",enableMobileTap:!1,header:void 0,headerFont:"2xl",headerIcon:void 0,headerPreset:"amber",headerTag:"h2",headerWrapperClassName:"",highlightEntities:void 0,text:void 0};function Ts({description:e,lastActionLog:t,inventory:n,mapData:s,allNPCs:o,currentThemeName:c,localTime:l,localEnvironment:h,localPlace:i}){const d=r.useMemo(()=>ln(n,s,o,c),[n,s,o,c]),m=typeof window<"u"&&window.matchMedia("(hover: none)").matches,g=a.jsx(Be,{backgroundColorClass:"bg-slate-800",borderColorClass:"border-slate-600",borderWidthClass:"rounded-lg border",contentFontClass:"leading-relaxed text-lg",enableMobileTap:m,highlightEntities:d,text:e||void 0}),p=t?a.jsx(Be,{backgroundColorClass:"bg-slate-800",borderColorClass:"border-slate-600",borderWidthClass:"rounded-lg border",contentColorClass:"text-yellow-200",contentFontClass:"leading-relaxed text-lg",enableMobileTap:m,highlightEntities:d,text:t||void 0}):null,f=l||h||i?a.jsx(Be,{borderColorClass:"border-slate-600",borderWidthClass:"border-t",contentColorClass:"text-slate-300",contentFontClass:"text-lg",text:`Time: ${l??"Unknown"}. Environment: ${h??"Unknown"} Location: ${i??"Unknown"}`}):null;return a.jsxs("div",{className:"space-y-3",children:[p,g,f]})}Ts.defaultProps={lastActionLog:null,localEnvironment:null,localPlace:null,localTime:null};function pl({options:e,onActionSelect:t,disabled:n,inventory:s,mapData:o,allNPCs:c,currentThemeName:l}){const h=r.useMemo(()=>ln(s,o,c,l),[s,o,c,l]),i=r.useCallback(d=>m=>{t(d),m.currentTarget.blur()},[t]);return a.jsx("div",{className:"mt-6",children:a.jsx("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-3",children:e.map(d=>a.jsx(Y,{ariaLabel:d,disabled:n||d==="...",label:a.jsx(a.Fragment,{children:_n(d,h)}),onClick:i(d),preset:"sky",size:"lg",variant:"standard"},d))})})}function Hn({type:e}){const n={"single-use":"text-red-400","multi-use":"text-yellow-400",equipment:"text-sky-400",container:"text-orange-400",key:"text-lime-400",weapon:"text-amber-400",ammunition:"text-cyan-400",vehicle:"text-indigo-400",immovable:"text-purple-400","status effect":"text-pink-400",page:"text-green-400",book:"text-green-400",picture:"text-fuchsia-400",map:"text-teal-400"}[e];return a.jsx("span",{className:`text-xs italic ${n}`,children:e})}function ml({items:e,onTakeItem:t,onItemInteract:n,disabled:s,currentNodeId:o,mapNodes:c}){const l=r.useCallback(g=>{const p=g.currentTarget.dataset.itemName;p&&(t(p),g.currentTarget.blur())},[t]),h=r.useCallback(g=>{const p=g.currentTarget.dataset.itemName;if(!p)return;const f=e.find(w=>w.name===p);f&&(n(f,"inspect"),g.currentTarget.blur())},[e,n]),i=r.useCallback(g=>{const p=g.currentTarget.dataset.itemName;if(!p)return;const f=e.find(w=>w.name===p);f&&(n(f,"generic"),g.currentTarget.blur())},[e,n]),d=r.useCallback(g=>{const{itemName:p,actionName:f,promptEffect:w}=g.currentTarget.dataset;if(!p||!f||!w)return;const u=e.find(C=>C.name===p);if(!u)return;n(u,"specific",{actionName:f,promptEffect:w,description:f}),g.currentTarget.blur()},[e,n]),m=r.useCallback(g=>g.knownUses?g.knownUses.filter(p=>{const f=!!g.isActive;return p.appliesWhenActive!==void 0&&p.appliesWhenInactive!==void 0?p.appliesWhenActive&&f||p.appliesWhenInactive&&!f||!p.appliesWhenActive&&!p.appliesWhenInactive:p.appliesWhenActive!==void 0?p.appliesWhenActive===f:p.appliesWhenInactive!==void 0?p.appliesWhenInactive===!f:!0}):[],[]);return e.length===0?null:a.jsxs("div",{className:"bg-slate-800 p-6 rounded-lg shadow-lg border border-slate-700",children:[a.jsxs("h3",{className:"text-xl font-bold text-amber-400 mb-2 border-b-2 border-amber-700 pb-2 flex items-center",children:[a.jsx(pe,{color:"amber",inline:!0,marginRight:8,name:"inventory",size:20})," ","Items Here"]}),a.jsx("ul",{className:"flex flex-wrap justify-center gap-4 list-none p-0",children:e.map(g=>{var u;const p=g.isActive&&g.activeDescription?g.activeDescription:g.description,f=g.holderId===o,w=f?null:(u=c.find(x=>x.id===g.holderId))==null?void 0:u.placeName;return a.jsxs("li",{className:"w-[270px] text-slate-300 bg-slate-700/60 p-4 rounded-md shadow border border-slate-600 flex flex-col",children:[a.jsxs("div",{className:"flex justify-between items-center mb-1 text-xs",children:[a.jsx(Hn,{type:g.type}),g.isActive?a.jsx("span",{className:"text-green-400 font-semibold",children:"Active"}):null]}),a.jsx("div",{className:"mb-1",children:a.jsx("span",{className:"font-semibold text-lg text-slate-100",children:g.name})}),a.jsx("p",{className:"text-sm text-slate-300 mb-1 italic leading-tight flex-grow",children:p}),!f&&w?a.jsxs("p",{className:"text-xs text-slate-300 mb-2",children:["Reachable at ",w]}):null,a.jsx("div",{className:"mt-auto space-y-2",children:g.type==="immovable"?a.jsxs(a.Fragment,{children:[m(g).map(x=>a.jsx(Y,{ariaLabel:`${x.actionName}${x.description?": "+x.description:""}`,"data-action-name":x.actionName,"data-item-name":g.name,"data-prompt-effect":x.promptEffect,disabled:s,label:x.actionName,onClick:d,preset:"teal",size:"sm",title:x.description},`${g.name}-ku-${x.actionName}`)),a.jsx(Y,{ariaLabel:`Inspect ${g.name}`,"data-item-name":g.name,disabled:s,label:"Inspect",onClick:h,preset:"indigo",size:"sm"}),a.jsx(Y,{ariaLabel:`Attempt to use ${g.name}`,"data-item-name":g.name,disabled:s,label:"Attempt to Use (Generic)",onClick:i,preset:"sky",size:"sm"})]}):a.jsx("button",{"aria-label":g.type==="vehicle"?`Enter ${g.name}`:`Take ${g.name}`,className:"w-full text-sm bg-green-700 hover:bg-green-600 text-white font-medium py-1.5 px-3 rounded shadow disabled:bg-slate-600 disabled:text-slate-300 disabled:cursor-not-allowed transition-colors duration-150 ease-in-out","data-item-name":g.name,disabled:s,onClick:l,type:"button",children:g.type==="vehicle"?"Enter Vehicle":"Take"})})]},g.name)})})]})}function Is({item:e,isNew:t,isStashing:n,isConfirmingDiscard:s,applicableUses:o,disabled:c,currentTurn:l,onSpecificUse:h,onInspect:i,onGenericUse:d,onVehicleToggle:m,onStartConfirmDiscard:g,onConfirmDrop:p,onCancelDiscard:f,onRead:w,onStashToggle:u,filterMode:x,registerRef:C}){var F,D,k,L,I,T,P,b,R;const v=e.isActive&&e.activeDescription?e.activeDescription:e.description,j=e.type==="page"||e.type==="book"||e.type==="picture"||e.type==="map",$=e.type==="picture"||e.type==="map",S=e.type!=="status effect"&&e.type!=="vehicle",A=!((F=e.tags)!=null&&F.includes("junk"))&&e.type!=="vehicle"&&e.type!=="status effect",y=x==="stashed"&&(!!e.stashed||n),E=A&&!s&&(!j||y),N=[];o.forEach(U=>{N.push(a.jsx(Y,{ariaLabel:`${U.actionName}${U.description?": "+U.description:""}`,"data-action-name":U.actionName,"data-item-name":e.name,"data-prompt-effect":U.promptEffect,disabled:c||s,label:U.actionName,onClick:h,preset:"teal",size:"sm",title:U.description},`${e.name}-knownuse-${U.actionName}`))});const O=c||s||(j?e.id===fe?(((D=e.chapters)==null?void 0:D.length)??0)===0:((k=e.chapters)==null?void 0:k.some(U=>!U.actualContent))??!0:$?((L=e.chapters)==null?void 0:L.some(U=>!U.imageData))??!0:!1)||e.lastInspectTurn!==void 0&&l-e.lastInspectTurn<fs;return N.push(a.jsx(Y,{ariaLabel:`Inspect ${e.name}`,"data-item-name":e.name,disabled:O,label:"Inspect",onClick:i,preset:"indigo",size:"sm"},`${e.name}-inspect`)),(e.type==="page"||e.type==="book"||e.type==="picture"||e.type==="map")&&N.push(a.jsx(Y,{ariaLabel:`Read ${e.name}`,"data-item-name":e.name,disabled:c||s||e.id===fe&&(((I=e.chapters)==null?void 0:I.length)??0)===0,label:"Read",onClick:w,preset:"teal",size:"sm"},`${e.name}-read`)),S&&N.push(a.jsx(Y,{ariaLabel:`Attempt to use ${e.name} (generic action)`,"data-item-name":e.name,disabled:c||s,label:"Attempt to Use (Generic)",onClick:d,preset:"sky",size:"sm"},`${e.name}-generic-use`)),e.type==="vehicle"&&N.push(a.jsx(Y,{ariaLabel:e.isActive?`Exit ${e.name}`:`Enter ${e.name}`,"data-item-name":e.name,disabled:c||s,label:e.isActive?`Exit ${e.name}`:`Enter ${e.name}`,onClick:m,preset:"sky",size:"sm"},`${e.name}-vehicle-action`)),(T=e.tags)!=null&&T.includes("junk")&&!s&&N.push(a.jsx(Y,{ariaLabel:`Discard ${e.name}`,"data-item-name":e.name,disabled:c,icon:a.jsx(pe,{color:"white",inline:!0,marginRight:4,name:"trash",size:16}),label:"Discard",onClick:g,preset:"orange",size:"sm"},`${e.name}-discard`)),(e.type==="page"||e.type==="book"||e.type==="picture"||e.type==="map")&&!s&&N.push(a.jsx(Y,{ariaLabel:x==="stashed"?`Retrieve ${e.name}`:`Stash ${e.name}`,"data-item-name":e.name,disabled:c,label:x==="stashed"?"Retrieve":"Stash",onClick:u,preset:"sky",size:"sm"},`${e.name}-stash`)),A&&j&&E&&N.push(a.jsx(Y,{ariaLabel:`Drop ${e.name}`,"data-item-name":e.name,disabled:c,label:"Drop",onClick:g,preset:"sky",size:"sm"},`${e.name}-drop`)),A&&!j&&E&&N.push(a.jsx(Y,{ariaLabel:`Drop ${e.name}`,"data-item-name":e.name,disabled:c,label:"Drop",onClick:g,preset:"sky",size:"sm"},`${e.name}-drop`)),!((P=e.tags)!=null&&P.includes("junk"))&&!s&&e.type==="vehicle"&&!e.isActive&&N.push(a.jsx(Y,{ariaLabel:`Park ${e.name} here`,"data-item-name":e.name,disabled:c,label:"Park Here",onClick:g,preset:"sky",size:"sm"},`${e.name}-drop`)),s&&N.push(a.jsxs("div",{className:"grid grid-cols-2 gap-2 mt-2",children:[a.jsx(Y,{ariaLabel:`Confirm drop of ${e.name}`,"data-item-name":e.name,disabled:c,label:e.type==="vehicle"&&!e.isActive?"Confirm Park":(b=e.tags)!=null&&b.includes("junk")?"Confirm Discard":"Confirm Drop",onClick:p,preset:"red",size:"sm"},`${e.name}-confirm-drop`),a.jsx(Y,{ariaLabel:"Cancel discard",disabled:c,label:"Cancel",onClick:f,preset:"slate",size:"sm"},`${e.name}-cancel-discard`)]},`${e.name}-confirm-group`)),a.jsxs("li",{className:`w-[270px] text-slate-300 bg-slate-700/60 p-4 rounded-md shadow border border-slate-600 ${t?"animate-new-item-pulse":""} ${n?"animate-archive-fade-out":""} flex flex-col`,"data-item-name":e.name,ref:C,children:[a.jsxs("div",{className:"flex justify-between items-center mb-1 text-xs",children:[a.jsx(Hn,{type:e.type}),e.isActive?a.jsx("span",{className:"text-green-400 font-semibold",children:"Active"}):null]}),a.jsx("div",{className:"mb-1",children:a.jsx("span",{className:"font-semibold text-lg text-slate-100",children:e.name})}),a.jsx("p",{className:"text-sm text-slate-300 mb-3 italic leading-tight flex-grow",children:v}),(R=e.tags)!=null&&R.includes("junk")?a.jsx("p",{className:"text-xs text-orange-400 mb-1 italic",children:"(Marked as junk)"}):null,a.jsx("div",{className:"space-y-2 mt-auto",children:N})]},e.name)}Is.defaultProps={registerRef:void 0};function hl({sortOrder:e,disabled:t,onSortByName:n,onSortByType:s}){return a.jsxs("div",{className:"mb-4 flex flex-wrap gap-2",children:[a.jsx(Y,{ariaLabel:"Sort by Name",disabled:t,label:"Sort by Name",onClick:n,preset:e==="name"?"sky":"slate",pressed:e==="name",size:"sm",variant:"toggle"}),a.jsx(Y,{ariaLabel:"Sort by Type",disabled:t,label:"Sort by Type",onClick:s,preset:e==="type"?"sky":"slate",pressed:e==="type",size:"sm",variant:"toggle"})]})}function gl({filterMode:e,disabled:t,onFilterAll:n,onFilterStashed:s}){return a.jsxs("div",{className:"mb-4 flex flex-wrap gap-2",children:[a.jsx(Y,{ariaLabel:"Show All",disabled:t,label:"All",onClick:n,preset:e==="all"?"sky":"slate",pressed:e==="all",size:"sm",variant:"toggle"}),a.jsx(Y,{ariaLabel:"Show Stashed",disabled:t,label:"Stashed",onClick:s,preset:e==="stashed"?"sky":"slate",pressed:e==="stashed",size:"sm",variant:"toggle"})]})}const fl=({items:e,onItemInteract:t,onDropItem:n,onStashToggle:s,onReadPage:o})=>{const[c,l]=r.useState(new Set),h=r.useRef(e),[i,d]=r.useState(null),[m,g]=r.useState("default"),[p,f]=r.useState("all"),[w,u]=r.useState(new Set),x=r.useCallback(I=>{g(T=>T==="name"?"default":"name"),I.currentTarget.blur()},[]),C=r.useCallback(I=>{g(T=>T==="type"?"default":"type"),I.currentTarget.blur()},[]),v=r.useCallback(I=>{f("all"),I.currentTarget.blur()},[]),j=r.useCallback(I=>{f(T=>T==="stashed"?"all":"stashed"),I.currentTarget.blur()},[]),$=r.useCallback(I=>{const T=I.currentTarget.dataset.itemName;T&&(d(T),I.currentTarget.blur())},[]),S=r.useCallback(I=>{const T=I.currentTarget.dataset.itemName;!T||!e.find(b=>b.name===T)||(n(T),d(null),I.currentTarget.blur())},[e,n]),A=r.useCallback(I=>{const T=I.currentTarget.dataset.itemName;if(T){const P=e.find(b=>b.name===T);s(T),P!=null&&P.stashed?p==="stashed"?(u(b=>new Set(b).add(T)),setTimeout(()=>{u(b=>{const R=new Set(b);return R.delete(T),R})},1e3)):(l(b=>new Set(b).add(T)),setTimeout(()=>{l(b=>{const R=new Set(b);return R.delete(T),R})},1500)):(u(b=>new Set(b).add(T)),setTimeout(()=>{u(b=>{const R=new Set(b);return R.delete(T),R})},1e3)),I.currentTarget.blur()}},[p,e,s]),y=r.useCallback(I=>{d(null),I.currentTarget.blur()},[]),E=r.useCallback(I=>{const{itemName:T,actionName:P,promptEffect:b}=I.currentTarget.dataset;if(!T||!P||!b)return;const R=e.find(M=>M.name===T);if(!R)return;t(R,"specific",{actionName:P,promptEffect:b,description:P}),I.currentTarget.blur()},[e,t]),N=r.useCallback(I=>{const T=I.currentTarget.dataset.itemName;if(!T)return;const P=e.find(b=>b.name===T);P&&(t(P,"inspect"),I.currentTarget.blur())},[e,t]),O=r.useCallback(I=>{const T=I.currentTarget.dataset.itemName;if(!T)return;const P=e.find(b=>b.name===T);P&&(t(P,"generic"),I.currentTarget.blur())},[e,t]),F=r.useCallback(I=>{const T=I.currentTarget.dataset.itemName;if(!T)return;const P=e.find(U=>U.name===T);if(!P)return;const b=P.isActive?`Exit ${P.name}`:`Enter ${P.name}`;t(P,"specific",{actionName:b,promptEffect:b,description:b}),I.currentTarget.blur()},[e,t]),D=r.useCallback(I=>{const T=I.currentTarget.dataset.itemName;if(!T)return;const P=e.find(b=>b.name===T);P&&(o(P),I.currentTarget.blur())},[e,o]);r.useEffect(()=>{const I=new Set(e.map(b=>b.name)),T=new Set(h.current.map(b=>b.name)),P=[];I.forEach(b=>{T.has(b)||P.push(b)}),P.length>0&&(l(b=>{const R=new Set(b);return P.forEach(U=>R.add(U)),R}),P.forEach(b=>{setTimeout(()=>{l(R=>{const U=new Set(R);return U.delete(b),U})},1500)})),h.current=e},[e]);const k=r.useMemo(()=>{const T=[...e.filter(P=>{if(w.has(P.name))return!0;const b=["page","book","picture","map"].includes(P.type);return p==="stashed"?P.stashed&&b:!(P.stashed&&b)})];return m==="name"?T.sort((P,b)=>P.name.localeCompare(b.name)):m==="type"?T.sort((P,b)=>{const R=P.type.localeCompare(b.type);return R!==0?R:P.name.localeCompare(b.name)}):T.reverse(),T},[e,m,p,w]),L=r.useCallback(I=>I.knownUses?I.knownUses.filter(T=>{const P=!!I.isActive;return T.appliesWhenActive!==void 0&&T.appliesWhenInactive!==void 0?T.appliesWhenActive&&P||T.appliesWhenInactive&&!P||!T.appliesWhenActive&&!T.appliesWhenInactive:T.appliesWhenActive!==void 0?T.appliesWhenActive===P:T.appliesWhenInactive!==void 0?T.appliesWhenInactive===!P:!0}):[],[]);return{displayedItems:k,newlyAddedItemNames:c,stashingItemNames:w,confirmingDiscardItemName:i,sortOrder:m,filterMode:p,handleSortByName:x,handleSortByType:C,handleFilterAll:v,handleFilterStashed:j,handleStartConfirmDiscard:$,handleConfirmDrop:S,handleCancelDiscard:y,handleSpecificUse:E,handleInspect:N,handleGenericUse:O,handleVehicleToggle:F,handleStashToggleInternal:A,handleRead:D,getApplicableKnownUses:L}};function yl({items:e,onItemInteract:t,onDropItem:n,onStashToggle:s,onReadPage:o,currentTurn:c,disabled:l}){const{displayedItems:h,newlyAddedItemNames:i,stashingItemNames:d,confirmingDiscardItemName:m,sortOrder:g,handleSortByName:p,handleSortByType:f,filterMode:w,handleFilterAll:u,handleFilterStashed:x,handleStartConfirmDiscard:C,handleConfirmDrop:v,handleCancelDiscard:j,handleSpecificUse:$,handleInspect:S,handleGenericUse:A,handleVehicleToggle:y,handleStashToggleInternal:E,handleRead:N,getApplicableKnownUses:O}=fl({items:e,onItemInteract:t,onDropItem:n,onStashToggle:s,onReadPage:o}),F=r.useRef(new Map),D=r.useRef(new Map),k=r.useRef(l),L=r.useCallback(I=>{if(!I)return;const T=I.dataset.itemName;T&&F.current.set(T,I)},[]);return r.useLayoutEffect(()=>{const I=new Map;if(F.current.forEach((T,P)=>{if(!T.isConnected){F.current.delete(P),D.current.delete(P);return}I.set(P,T.getBoundingClientRect())}),k.current!==l){k.current=l,D.current=I;return}l||D.current.forEach((T,P)=>{const b=I.get(P),R=F.current.get(P);if(!b||!R)return;const U=Math.round(T.left-b.left),M=Math.round(T.top-b.top);(U!==0||M!==0)&&(R.style.transition="none",R.style.transform=`translate(${String(U)}px, ${String(M)}px)`,requestAnimationFrame(()=>{R.style.transition="transform 0.2s",R.style.transform=""}),setTimeout(()=>{R.style.transition=""},200))}),D.current=I},[h,l]),a.jsxs("div",{className:"bg-slate-800 p-6 rounded-lg shadow-lg border border-slate-700 h-full",children:[a.jsxs("h3",{className:"text-xl font-bold text-amber-400 mb-2 border-b-2 border-amber-700 pb-2 flex items-center",children:[a.jsx(pe,{color:"amber",inline:!0,marginRight:8,name:"inventory",size:20})," ","Inventory"]}),a.jsx(hl,{disabled:l,onSortByName:p,onSortByType:f,sortOrder:g}),a.jsx(gl,{disabled:l,filterMode:w,onFilterAll:u,onFilterStashed:x}),h.length===0?a.jsx("p",{className:"text-slate-300 italic",children:"Your pockets are empty."}):a.jsx("ul",{className:"flex flex-wrap justify-center gap-4 list-none p-0",children:h.map(I=>{const T=O(I),P=i.has(I.name),b=d.has(I.name),R=m===I.name;return a.jsx(Is,{applicableUses:T,currentTurn:c,disabled:l,filterMode:w,isConfirmingDiscard:R,isNew:P,isStashing:b,item:I,onCancelDiscard:j,onConfirmDrop:v,onGenericUse:A,onInspect:S,onRead:N,onSpecificUse:$,onStartConfirmDiscard:C,onStashToggle:E,onVehicleToggle:y,registerRef:L},I.name)})})]})}function bl({allNPCs:e,currentMapNodeId:t,currentObjective:n,currentThemeName:s,enableMobileTap:o,inventory:c,itemsHere:l,mainQuest:h,mapNodes:i,objectiveAnimationType:d,onDropItem:m,onStashToggle:g,onItemInteract:p,onReadPage:f,onReadPlayerJournal:w,onTakeItem:u,globalTurnNumber:x,disabled:C}){const v=r.useMemo(()=>ln(c,i,e,s),[c,i,e,s]);return a.jsxs(a.Fragment,{children:[a.jsx("div",{className:"flex justify-start gap-4 mb-2",children:a.jsx(Y,{ariaLabel:"Open journal",disabled:C,icon:a.jsx(pe,{name:"journalPen",size:24}),onClick:w,preset:"blue",size:"lg",title:"Open Journal",variant:"toolbarLarge"})}),h?a.jsx(Be,{backgroundColorClass:"bg-purple-800/50",borderColorClass:"border-purple-600",borderWidthClass:"border rounded-lg",containerClassName:"p-3",contentColorClass:"text-purple-200",contentFontClass:"text-lg",enableMobileTap:o,header:"Main Quest",headerFont:"lg",headerPreset:"purple",highlightEntities:v,text:h}):null,n?a.jsx(Be,{backgroundColorClass:"bg-amber-800/50",borderColorClass:"border-amber-600",borderWidthClass:"border rounded-lg",containerClassName:`p-3 ${d==="success"?"animate-objective-success":d==="neutral"?"animate-objective-neutral":""}`,contentColorClass:"text-amber-200",contentFontClass:"text-lg",enableMobileTap:o,header:"Current Objective",headerFont:"lg",headerPreset:"amber",highlightEntities:v,text:n}):null,a.jsx(ml,{currentNodeId:t,disabled:C,items:l,mapNodes:i,onItemInteract:p,onTakeItem:u}),a.jsx(yl,{currentTurn:x,disabled:C,items:c,onDropItem:m,onItemInteract:p,onReadPage:f,onStashToggle:g})]})}const js=()=>{const[e,t]=r.useState(hr()),[n,s]=r.useState(gr());r.useEffect(()=>(fr(t),yr(s),()=>{br(t),vr(s)}),[]);const o=r.useCallback(()=>{ls()},[]);return{progress:e,retryCount:n,clearProgress:o}};function gt(){const e=ys(),{progress:t,retryCount:n}=js(),o="rounded-full h-16 w-16 border-t-4 border-b-4 animate-spin border-sky-600",c="text-sky-400",l=e?Fe[e]:void 0,h=(l==null?void 0:l.text)??"Loading...",i=t?t+t.split("").reverse().join(""):"",d=n>0?`Retry ${String(n)}`:"";return a.jsxs("div",{"aria-live":"polite",className:"flex flex-col items-center my-8",role:"status",children:[a.jsx("div",{"aria-hidden":"true",className:o}),a.jsx("p",{className:`mt-2 text-xl ${c} text-shadow-md`,children:h}),d?a.jsx("p",{className:`text-sm ${c} text-shadow-md mt-1`,children:d}):null,i?a.jsx("div",{className:"mt-2 text-2xl text-sky-300 font-mono text-shadow-md",children:i}):null]})}function An({message:e,onRetry:t}){return a.jsxs("div",{className:"bg-red-800 border border-red-600 text-red-100 p-6 rounded-lg shadow-xl my-4 animate-pulse",children:[a.jsxs("div",{className:"flex items-center mb-2",children:[a.jsx(pe,{color:"red",inline:!0,marginRight:12,name:"error",size:32}),a.jsx("h3",{className:"font-bold text-2xl text-red-200",children:"A Shadow Falls!"})]}),a.jsx("p",{className:"text-red-200 mb-4",children:e}),t?a.jsx(Y,{ariaLabel:"Try again after error",label:"Try Again",onClick:t,preset:"red",size:"md",variant:"compact"}):null]})}An.defaultProps={onRetry:void 0};function vl({score:e,isLoading:t,currentThemeName:n,currentSceneExists:s,onOpenVisualizer:o,onOpenKnowledgeBase:c,onOpenHistory:l,onOpenMap:h,onOpenTitleMenu:i,onManualRealityShift:d,turnsSinceLastShift:m}){return a.jsxs("div",{className:"flex justify-between items-center w-full",children:[a.jsxs("div",{className:"flex items-center space-x-3",children:[a.jsxs("div",{"aria-label":`Current score: ${String(e)} points`,className:"flex items-center p-2 border border-amber-500 rounded-md shadow-md",title:`Score: ${String(e)} points`,children:[a.jsx(pe,{color:"amber",inline:!0,marginRight:8,name:"coin",size:20}),a.jsx("span",{className:"text-amber-400 font-semibold text-lg",children:e})]}),n?a.jsxs("div",{"aria-label":`Turns since last reality shift: ${String(m)}`,className:"flex items-center p-2 border border-indigo-500 rounded-md shadow-md",title:`Turns since last reality shift: ${String(m)}`,children:[a.jsx(pe,{color:"indigo",inline:!0,marginRight:8,name:"clock",size:20}),a.jsx("span",{className:"text-indigo-400 font-semibold text-lg",children:m})]}):null]}),a.jsxs("div",{className:"flex space-x-2",children:[a.jsx(Y,{ariaLabel:"Visualize Scene",disabled:t||!n||!s,icon:a.jsx(pe,{inline:!0,name:"visualize",size:20}),onClick:o,preset:"blue",size:"md",title:"Visualize Scene",variant:"toolbar"}),a.jsx(Y,{ariaLabel:"Open Knowledge Base",disabled:t||!n,icon:a.jsx(pe,{inline:!0,name:"bookOpen",size:20}),onClick:c,preset:"blue",size:"md",title:"Open Knowledge Base",variant:"toolbar"}),a.jsx(Y,{ariaLabel:"Open History",disabled:t||!n,icon:a.jsx(pe,{inline:!0,name:"scroll",size:20}),onClick:l,preset:"blue",size:"md",title:"Open History",variant:"toolbar"}),a.jsx(Y,{ariaLabel:"Open Map",disabled:t||!n,icon:a.jsx(pe,{inline:!0,name:"map",size:20}),onClick:h,preset:"blue",size:"md",title:"Open Map",variant:"toolbar"}),a.jsx(Y,{ariaLabel:"Force Reality Shift",disabled:t||!n,icon:a.jsx(pe,{inline:!0,name:"realityShift",size:20}),onClick:d,preset:"purple",size:"md",title:"Force Reality Shift",variant:"toolbar"}),a.jsx(Y,{ariaLabel:"Open Title Menu",disabled:t,icon:a.jsx(pe,{inline:!0,name:"menu",size:20}),onClick:i,preset:"gray",size:"md",title:"Open Title Menu",variant:"toolbar"})]})]})}const Ua=()=>({[Oe]:{model:Oe,count:vn(Oe),limit:Zr},[Re]:{model:Re,count:vn(Re),limit:Xr},[at]:{model:at,count:vn(at),limit:Qr}}),xl=()=>{const[e,t]=r.useState(()=>Ua());return r.useEffect(()=>{const n=()=>{t(Ua())},s=xr(n),o=setInterval(n,1e3);return()=>{s(),clearInterval(o)}},[]),e},wl="w-4 h-4 rounded",Cl=e=>e<.1?"bg-green-500":e<.2?"bg-lime-500":e<.3?"bg-yellow-500":e<.4?"bg-orange-500":e<.5?"bg-amber-500":"bg-red-500";function Ps(){const e=xl();return a.jsxs("div",{"aria-label":"Model usage last minute",className:"flex space-x-1 items-center my-2",children:[Object.values(e).map(t=>{const n=t.count/t.limit,s=`${t.model}: ${String(t.count)}/${String(t.limit)} calls last minute`;return a.jsx("div",{"aria-label":s,className:`${wl} ${Cl(n)}`,title:s},t.model)}),a.jsx("div",{className:"flex-grow border-t border-slate-600 ml-2"})]})}function ks({hasGameBeenInitialized:e,isCustomGameMode:t,currentTheme:n}){return a.jsxs("header",{className:"w-full max-w-screen-xl mb-6 text-center",children:[a.jsx("h1",{className:"text-4xl md:text-5xl font-bold text-sky-400 tracking-wider title-font",children:"Whispers in the Dark"}),a.jsx("p",{className:"text-slate-300 text-lg",children:"An Adventure in Shifting Realities"}),e?a.jsxs("p",{children:[t?a.jsx("span",{className:"block text-xs text-orange-400",children:"(Custom Game - Random Shifts Disabled)"}):null,n?a.jsx("span",{className:"block text-xs text-purple-400",children:n.name}):null]}):null]})}function Ls({version:e,sourceInfo:t}){return a.jsxs("p",{className:"text-sm text-slate-300 absolute bottom-4 right-4",children:[a.jsx("span",{children:"Version: "+e}),a.jsx("br",{}),a.jsx("span",{children:t?`${t}`:null})]})}Ls.defaultProps={sourceInfo:void 0};function As({isVisible:e,onClose:t,onNewGame:n,onCustomGame:s,onSaveGame:o,onLoadGame:c,onOpenSettings:l,onOpenInfo:h,onOpenGeminiKeyModal:i,isGameActive:d}){const m=r.useCallback(()=>{o&&o()},[o]);return a.jsx("div",{"aria-labelledby":"title-menu-heading","aria-modal":"true",className:`animated-frame ${e?"open":""}`,role:"dialog",children:a.jsxs("div",{className:"animated-frame-content relative",children:[" ",d?a.jsx(Y,{ariaLabel:"Close Title Menu",icon:a.jsx(pe,{name:"x",size:20}),onClick:t,size:"sm",variant:"close"}):null,a.jsxs("div",{className:"flex flex-col items-center justify-center h-full w-full p-4 text-center",children:[a.jsx(ks,{currentTheme:null,hasGameBeenInitialized:d,isCustomGameMode:!1}),a.jsxs("div",{className:"space-y-3 sm:space-y-3 w-full max-w-xs sm:max-w-sm",children:[je()?null:a.jsx(Y,{ariaLabel:"Set Gemini API key",label:"Set Gemini Key",onClick:i,preset:"indigo",size:"lg"}),a.jsx(Y,{ariaLabel:d?"Start a New Game (Random Shifts, Progress will be lost)":"Start a New Game (Random Shifts)",disabled:!je(),label:"New Game",onClick:n,preset:"red",size:"lg"}),a.jsx(Y,{ariaLabel:d?"Start a Custom Game (Choose Theme, No Random Shifts, Progress will be lost)":"Start a Custom Game (Choose Theme, No Random Shifts)",disabled:!je(),label:"Custom Game",onClick:s,preset:"orange",size:"lg"}),d&&o?a.jsx(Y,{ariaLabel:"Save Current Game to File",label:"Save Game",onClick:m,preset:"green",size:"lg"}):null,a.jsx(Y,{ariaLabel:d?"Load Game from File (Current progress will be lost)":"Load Game from File",disabled:!je(),label:"Load Game",onClick:c,preset:"blue",size:"lg"}),a.jsx(Y,{ariaLabel:"Open Settings",label:"Settings",onClick:l,preset:"gray",size:"lg"}),a.jsx(Y,{ariaLabel:"About & Game Guide",label:"About",onClick:h,preset:"cyan",size:"lg"}),d?a.jsx(Y,{ariaLabel:"Return to Game",label:"Return to Game",onClick:t,preset:"sky",size:"lg"}):null]})]}),a.jsx(Ls,{sourceInfo:ti()?"Using System Gemini Key":void 0,version:ei})]})})}As.defaultProps={onSaveGame:void 0,onOpenGeminiKeyModal:void 0};function Es({isVisible:e,onClose:t,history:n,options:s,onOptionSelect:o,participants:c,isLoading:l,isDialogueExiting:h,inventory:i,mapData:d,allNPCs:m,currentThemeName:g}){const p=r.useRef(null),f=r.useRef(null);r.useEffect(()=>{e&&f.current&&f.current.scrollIntoView({behavior:"smooth",block:"end"})},[n,e]),r.useEffect(()=>{if(!e)return;const j=p.current;j&&l&&(h||s.length===0)&&j.scrollTo({top:j.scrollHeight,behavior:"smooth"})},[l,h,s.length,e,n.length]);const w=r.useMemo(()=>ln(i,d,m,g),[i,d,m,g]),u=c.join(", "),x=l||h,C=r.useCallback(j=>{const $=j.currentTarget.dataset.option;$&&(o($),j.currentTarget.blur())},[o]);if(!e)return null;const v=()=>{if(h||l)return a.jsx(gt,{});if(s.length>0)return a.jsx("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-3",children:s.map(j=>a.jsx(Y,{ariaLabel:j,"data-option":j,disabled:x,enableHighlightTap:!0,highlightEntities:w,label:j,onClick:C,preset:"sky",size:"md",variant:"standard"},j))})};return a.jsx("div",{"aria-labelledby":"dialogue-title","aria-modal":"true",className:"dialogue-frame open",ref:p,role:"dialog",children:a.jsxs("div",{className:"dialogue-frame-content",children:[a.jsx(Y,{ariaLabel:"End Conversation",disabled:l||h,icon:a.jsx(pe,{name:"x",size:20}),onClick:t,size:"sm",variant:"close"}),a.jsxs("h1",{className:"text-2xl font-bold text-sky-300 mb-4 text-center",id:"dialogue-title",children:["Conversation with:"," ",u]}),a.jsx("div",{className:"dialogue-log-area flex-grow mb-4 pr-2 min-h-[200px] overflow-y-auto",children:n.map((j,$)=>{const S=j.speaker.toLowerCase()==="player";return a.jsxs("div",{className:`mb-3 p-3 rounded-lg animate-dialogue-new-entry ${S?"bg-slate-700 ml-auto w-11/12 text-right":"bg-slate-600 mr-auto w-11/12"}`,ref:$===n.length-1?f:null,children:[a.jsxs("strong",{className:S?"text-amber-400":"text-emerald-400",children:[j.speaker,":"]}),a.jsx("span",{className:"text-slate-100 ml-2",children:_n(j.line,w)})]},j.line)})}),a.jsxs("div",{className:"dialogue-options-area mt-auto pt-4",children:[a.jsxs("div",{className:"flex items-center mb-2",children:[a.jsx(Ps,{}),a.jsx("div",{className:"flex-grow border-t border-slate-600 ml-2"})]}),v()]})]})})}Es.defaultProps={isDialogueExiting:!1};const Va=600,Sl=2e3,Nl=(e,t)=>{const n=e??[],s=t??[];if(n.length!==s.length)return!1;if(n.length===0)return!0;const o=h=>{const i={};return Object.keys(h).sort().forEach(d=>{i[d]=h[d]}),JSON.stringify(i)},c=n.map(o).sort(),l=s.map(o).sort();for(let h=0;h<c.length;h++)if(c[h]!==l[h])return!1;return!0},Tl=(e,t)=>!e||!t?e===t:e.name!==t.name||e.type!==t.type||e.description!==t.description||(e.activeDescription??"")!==(t.activeDescription??"")||(e.isActive??!1)!==(t.isActive??!1)||JSON.stringify(e.tags??[])!==JSON.stringify(t.tags??[])?!1:Nl(e.knownUses,t.knownUses),Il=({lastTurnChanges:e,isGameBusy:t})=>{const[n,s]=r.useState([]),[o,c]=r.useState(null),[l,h]=r.useState("idle"),[i,d]=r.useState(null),[m,g]=r.useState(!1),[p,f]=r.useState(null),[w,u]=r.useState(null),[x,C]=r.useState(!1),[v,j]=r.useState(null),[$,S]=r.useState(null),A=r.useRef(null),y=r.useCallback(()=>{A.current&&(clearTimeout(A.current),A.current=null)},[]),E=r.useCallback(()=>{y(),s([]),c(null),h("idle"),C(!1),g(!1),f(null),u(null),d(null)},[y]);r.useEffect(()=>{t&&($?(j($),S(null)):e&&e!==v&&j(e),E())},[t,E,$,v,e]),r.useEffect(()=>{if(t||!e){!t&&n.length>0&&s([]);return}if(e===v||e===$||$&&o)return;S(e);const D=[];for(const k of e.itemChanges)k.type==="acquire"&&k.acquiredItem?D.push({type:"acquire",item:k.acquiredItem}):k.type==="loss"&&k.lostItem?D.push({type:"loss",item:k.lostItem}):k.type==="update"&&k.oldItem&&k.newItem&&(Tl(k.oldItem,k.newItem)||D.push({type:"change",oldItem:k.oldItem,newItem:k.newItem}));D.sort((k,L)=>{const I={loss:0,acquire:1,change:2};return I[k.type]-I[L.type]}),D.length>0?s(D):(s([]),j(e),S(null),C(!1))},[e,t,v,$,o,n]);const N=r.useCallback(()=>{if(y(),n.length>0&&!t){const D=n[0];c(D),s(k=>k.slice(1)),C(!0),D.type==="change"&&D.oldItem&&D.newItem?d({oldItem:D.oldItem,newItem:D.newItem}):D.item?d({item:D.item}):d(null),h("appearing")}else c(null),h("idle"),d(null)},[n,t,y]);r.useEffect(()=>{l==="idle"&&!o&&!t&&(n.length>0?N():(C(!1),$&&$!==v&&j($),S(null)))},[l,n,o,N,t,$,v]),r.useEffect(()=>{if(!(t||!o||l==="idle")){switch(y(),l){case"appearing":{f(null),u(null),g(!0);const D=o;A.current=window.setTimeout(()=>{o===D&&h("visible")},Va);break}case"visible":{o.type==="acquire"?u("acquire"):o.type==="loss"?u("loss"):u("change-new");const D=o;A.current=window.setTimeout(()=>{o===D&&h("disappearing")},Sl);break}case"disappearing":u(null),o.type==="loss"?f("disappear-to-large"):f("disappear-to-small"),g(!1),A.current=window.setTimeout(()=>{c(null),h("idle"),f(null)},Va);break}return()=>{y()}}},[o,l,t,y]);const O=r.useCallback(()=>{t||(E(),$?(j($),S(null)):e&&e!==v&&j(e))},[t,E,e,v,$]),F=r.useCallback(D=>{(D.key==="Enter"||D.key===" ")&&O()},[O]);return{itemForCardDisplay:i,currentAnimatingItem:o,isVisibleOverlay:x,isCardVisibleClass:m,explicitDisappearClass:p,activeGlowType:w,handleSkipAnimations:O,handleKeyDown:F}},Jt=()=>{};function jl({lastTurnChanges:e,isGameBusy:t}){const{itemForCardDisplay:n,currentAnimatingItem:s,isVisibleOverlay:o,isCardVisibleClass:c,explicitDisappearClass:l,activeGlowType:h,handleSkipAnimations:i,handleKeyDown:d}=Il({lastTurnChanges:e,isGameBusy:t}),m=u=>{var x,C;return a.jsxs(a.Fragment,{children:[a.jsxs("div",{className:"flex justify-between items-center mb-1 text-xs",children:[a.jsx(Hn,{type:u.type}),u.isActive?a.jsx("span",{className:"text-green-400 font-semibold",children:"Active"}):null]}),a.jsx("div",{className:"mb-1",children:a.jsx("span",{className:"font-semibold text-lg text-slate-100",children:u.name})}),a.jsx("p",{className:"text-sm text-slate-300 mb-3 italic leading-tight flex-grow",children:u.isActive&&u.activeDescription?u.activeDescription:u.description}),(x=u.tags)!=null&&x.includes("junk")?a.jsx("p",{className:"text-xs text-orange-400 mb-1 italic",children:"(Marked as junk)"}):null,a.jsxs("div",{className:"space-y-1 mt-auto",children:[(C=u.knownUses)==null?void 0:C.map(v=>a.jsx(Y,{"aria-hidden":"true",ariaLabel:v.actionName,disabled:!0,label:v.actionName,onClick:Jt,preset:"slate",size:"sm",title:v.description},`${u.name}-anim-ku-${v.actionName}`)),a.jsx(Y,{"aria-hidden":"true",ariaLabel:"Inspect",disabled:!0,label:"Inspect",onClick:Jt,preset:"slate",size:"sm"}),u.type!=="status effect"&&u.type!=="vehicle"&&a.jsx(Y,{"aria-hidden":"true",ariaLabel:"Attempt to Use (Generic)",disabled:!0,label:"Attempt to Use (Generic)",onClick:Jt,preset:"slate",size:"sm"}),u.type==="vehicle"&&a.jsx(Y,{"aria-hidden":"true",ariaLabel:u.isActive?`Exit ${u.name}`:`Enter ${u.name}`,disabled:!0,label:u.isActive?`Exit ${u.name}`:`Enter ${u.name}`,onClick:Jt,preset:"slate",size:"sm"})]})]})};if(!o||!n)return null;const g=u=>h?h==="acquire"&&u==="single"?"apply-green-glow-effect":h==="loss"&&u==="single"?"apply-red-glow-effect":h==="change-new"&&u==="new"?"apply-neutral-glow-effect":"":"",p="animating-item-card",f=c?"visible":"",w=l&&!c?l:"";return a.jsx("div",{"aria-label":"Skip item animations",className:"item-change-overlay active",onClick:i,onKeyDown:d,role:"button",tabIndex:0,children:(s==null?void 0:s.type)==="change"&&n.oldItem&&n.newItem?a.jsxs(a.Fragment,{children:[a.jsx("div",{className:`${p} ${f} ${w} ${g("old")}`,children:m(n.oldItem)}),a.jsx("div",{className:`${p} ${f} ${w} ${g("new")}`,children:m(n.newItem)})]}):n.item?a.jsx("div",{className:`${p} ${f} ${w} ${g("single")}`,children:m(n.item)}):null})}function Ds({theme:e,onSelect:t,disabled:n=!1}){const s=r.useCallback(()=>{t()},[t]);return a.jsx(Y,{ariaLabel:`Start a new game in the theme: ${e.name}${n?" (Current theme, cannot select)":""}`,disabled:n,label:a.jsxs("div",{className:"flex flex-col items-start text-left w-full",style:{minHeight:"180px"},children:[a.jsx("h3",{className:"text-xl font-semibold text-amber-400 mb-2",children:e.name}),a.jsx("p",{className:"text-sm text-slate-300 leading-snug line-clamp-8",children:e.initialSceneDescriptionSeed}),n?a.jsx("p",{className:"text-xs text-orange-300 mt-1 italic",children:"(Currently active theme)"}):null]}),onClick:s,preset:"slate",variant:"standard"})}Ds.defaultProps={disabled:!1};function En({isVisible:e,onClose:t,onThemeSelected:n,disabledThemeName:s=null,titleText:o=void 0,descriptionText:c=void 0}){const l=r.useCallback(m=>()=>{n(m)},[n]);if(!e)return null;const h=Object.keys(Ia).reduce((m,g)=>{const p=g;return m[p]=Ia[p],m},{}),i=o??"Choose Your Adventure Theme",d=c??"Select a theme to start your custom game. In this mode, random reality shifts are disabled, allowing for a focused, single-theme experience. You can still manually trigger a reality shift if you wish to change themes later.";return a.jsx("div",{"aria-labelledby":"custom-game-setup-title","aria-modal":"true",className:"animated-frame open",role:"dialog",children:a.jsxs("div",{className:"animated-frame-content",children:[a.jsx(Y,{ariaLabel:"Close theme selection",icon:a.jsx(pe,{name:"x",size:20}),onClick:t,size:"sm",variant:"close"}),a.jsxs("div",{className:"flex flex-col items-center w-full h-full p-2",children:[a.jsx("h1",{className:"text-3xl font-bold text-sky-300 mb-4 text-center",id:"custom-game-setup-title",children:i}),a.jsx("p",{className:"text-slate-300 mb-6 text-center text-sm max-w-2xl",children:d}),Object.keys(h).length===0?a.jsx("p",{className:"text-slate-300 italic",children:"No themes available. Please check configuration."}):a.jsx("div",{className:"overflow-y-auto flex-grow w-full max-w-5xl px-6",children:Object.entries(h).map(([m,g])=>g.length>0&&a.jsxs("section",{className:"mb-8",children:[a.jsx("h2",{className:"text-2xl font-semibold text-purple-400 mb-3 pb-1 border-b border-purple-600",children:m}),a.jsx("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-4",children:g.map(p=>{const f=p.name===s;return a.jsx(Ds,{disabled:f,onSelect:l(p.name),theme:p},p.name)})})]},m))})]})]})})}En.defaultProps={descriptionText:void 0,disabledThemeName:null,titleText:void 0};function Dn({id:e,label:t,value:n,onChange:s,min:o=0,max:c=100,explanation:l,disabled:h=!1,faded:i=!1,suffix:d=""}){const m=r.useCallback(p=>{s(parseInt(p.target.value,10))},[s]),g=i||h?"opacity-50":"";return a.jsxs("div",{className:"settings-slider-container",children:[a.jsxs("label",{className:`settings-slider-label ${g}`,htmlFor:e,children:[t,":",a.jsxs("span",{children:[n,d]})]}),a.jsx("input",{"aria-labelledby":`${e}-label`,"aria-valuemax":c,"aria-valuemin":o,"aria-valuenow":n,className:`settings-slider ${g}`,disabled:h,id:e,max:c,min:o,onChange:m,type:"range",value:n}),l?a.jsx("p",{className:`settings-explanation ${g}`,id:`${e}-label`,children:l}):null]})}Dn.defaultProps={disabled:!1,explanation:void 0,faded:!1,max:100,min:0,suffix:""};function Ms({name:e,options:t,value:n,onChange:s,addCustom:o=!1,placeholder:c=""}){const l=t.includes(n),h=l||!o||n==="Not Specified"?"":n,[i,d]=r.useState(h);r.useEffect(()=>{const u=t.includes(n);d(u||!o||n==="Not Specified"?"":n)},[n,t,o]);const m=r.useCallback(u=>{s(u==="Custom"?i.trim()||"Not Specified":u)},[i,s]),g=r.useCallback(u=>{m(u.currentTarget.value)},[m]),p=r.useCallback(u=>{const x=u.target.value;d(x),t.includes(n)||s(x.trim()||"Not Specified")},[s,t,n]),f=l?n:"Custom",w=o?[...t,"Custom"]:t;return a.jsxs("div",{className:"space-y-3",children:[w.map(u=>a.jsxs("label",{className:"flex items-center space-x-3 cursor-pointer p-2 bg-slate-700/50 rounded-md hover:bg-slate-600/50 transition-colors",children:[a.jsx("input",{"aria-labelledby":`${e}-${u}`,checked:f===u,className:"form-radio h-5 w-5 text-sky-500 bg-slate-600 border-slate-500 focus:ring-sky-400 focus:ring-offset-slate-800",name:e,onChange:g,type:"radio",value:u}),a.jsx("span",{className:"text-slate-200 text-lg",id:`${e}-${u}`,children:u})]},u)),o&&f==="Custom"?a.jsx("input",{"aria-label":"Custom input",className:"w-full p-2 mt-2 bg-slate-600 text-slate-100 border border-slate-500 rounded-md focus:ring-sky-500 focus:border-sky-500",onChange:p,placeholder:c,type:"text",value:i}):null]})}Ms.defaultProps={addCustom:!1,placeholder:""};function $s({options:e,selected:t,onToggle:n,errorText:s}){const o=r.useCallback(c=>{n(c.currentTarget.value)},[n]);return a.jsxs("div",{className:"space-y-3",children:[e.map(c=>a.jsxs("label",{className:"flex items-center space-x-3 cursor-pointer p-2 bg-slate-700/50 rounded-md hover:bg-slate-600/50 transition-colors",children:[a.jsx("input",{"aria-labelledby":`${c}-label`,checked:t.includes(c),className:"form-checkbox h-5 w-5 text-sky-500 bg-slate-600 border-slate-500 rounded focus:ring-sky-400 focus:ring-offset-slate-800",onChange:o,type:"checkbox",value:c}),a.jsx("span",{className:"text-slate-200 text-lg",id:`${c}-label`,children:c})]},c)),s?a.jsx("p",{className:"text-red-400 mt-2 text-sm",children:s}):null]})}$s.defaultProps={errorText:void 0};function Pl({isVisible:e,onClose:t,stabilityLevel:n,chaosLevel:s,onStabilityChange:o,onChaosChange:c,enabledThemePacks:l,onToggleThemePack:h,playerGender:i,onPlayerGenderChange:d,isCustomGameMode:m}){const g=r.useCallback(f=>{h(f)},[h]),p=r.useCallback(f=>{g(f)},[g]);return a.jsx("div",{"aria-labelledby":"settings-title","aria-modal":"true",className:`animated-frame ${e?"open":""}`,role:"dialog",children:a.jsxs("div",{className:"animated-frame-content",children:[a.jsx(Y,{ariaLabel:"Close settings",icon:a.jsx(pe,{name:"x",size:20}),onClick:t,size:"sm",variant:"close"}),a.jsxs("div",{className:"settings-content-area",children:[a.jsx("h1",{className:"text-3xl font-bold text-sky-300 mb-8 text-center",id:"settings-title",children:"Game Settings"}),a.jsxs("div",{className:"mb-8",id:"reality-shift-controls",children:[" ",a.jsx("h2",{className:"text-xl font-semibold text-amber-400 mb-3 pb-1 border-b border-amber-600",children:"Reality Shift Controls"}),m?a.jsxs("div",{className:"p-3 mb-3 bg-indigo-800/70 border border-indigo-600 rounded-md text-indigo-200 text-sm",children:[a.jsx("p",{children:"Random Reality Shifts are disabled in Custom Game mode."}),a.jsx("p",{children:'You can still change these settings, and they will apply if you start a regular "New Game" from the Main Menu.'})]}):null,a.jsx(Dn,{explanation:"Number of turns after any reality shift before random chaos shifts can occur again. Higher values mean longer periods of stability (e.g., 0 = chaos can happen immediately, 10 = 10 turns of safety). Max 100.",faded:m,id:"stabilitySlider",label:"Stability",onChange:o,value:n}),a.jsx(Dn,{explanation:"Percentage chance (0-100%) of a random reality shift occurring each turn, *after* the 'Stability' period has passed. Higher values mean more frequent shifts.",faded:m,id:"chaosSlider",label:"Chaos",onChange:c,suffix:"%",value:s}),a.jsx("p",{className:"settings-disclaimer",children:"In the Beta, manual reality shift can be triggered at any time regardless of these settings."})]}),a.jsxs("div",{className:"mb-8",children:[a.jsx("h2",{className:"text-xl font-semibold text-amber-400 mb-3 pb-1 border-b border-amber-600",children:"Player Character Gender"}),a.jsx("p",{className:"settings-explanation mb-3",children:"Choose your character's gender. This may subtly influence descriptions and interactions in the game. Changing it in the middle of the game can have unexpected effects."}),a.jsx(Ms,{addCustom:!0,name:"playerGender",onChange:d,options:["Male","Female"],placeholder:"Enter custom gender (or leave blank for 'Not Specified')",value:i})]}),a.jsxs("div",{className:"mb-6",children:[a.jsx("h2",{className:"text-xl font-semibold text-amber-400 mb-3 pb-1 border-b border-amber-600",children:"Theme Pack Preferences"}),a.jsx("p",{className:"settings-explanation mb-3",children:"Select which genre packs to include in the pool for random reality shifts. At least one pack must be enabled. Can be safely changed at any time."}),a.jsx($s,{errorText:l.length===0?"At least one theme pack must be enabled. Please select a pack to continue.":void 0,onToggle:p,options:ni,selected:l})]})]})]})})}function kl({title:e,items:t}){return a.jsxs("div",{children:[a.jsx("h3",{className:"text-xl font-medium text-sky-400 mb-2",children:e}),a.jsx("ul",{className:"list-disc list-inside ml-4 space-y-1",children:t.map(n=>a.jsx("li",{children:n},n))})]})}const on=mi;function Ll(e){return e.replace(/\{\{CURRENT_SAVE_GAME_VERSION\}\}/g,Ze).replace(/\{\{GEMINI_MODEL_NAME\}\}/g,Oe)}const Al=on.sections.map(e=>a.jsx(Be,{contentFontClass:"leading-relaxed space-y-3",header:e.header,text:e.text.map(t=>Ll(t)).join(`
`)},e.header)),El=on.changelog.map(e=>a.jsx(kl,{items:e.items,title:e.title},e.title));function Dl({isVisible:e,onClose:t}){return a.jsx("div",{"aria-labelledby":"info-title","aria-modal":"true",className:`animated-frame ${e?"open":""}`,role:"dialog",children:a.jsxs("div",{className:"animated-frame-content",children:[a.jsx(Y,{ariaLabel:"Close game information",icon:a.jsx(pe,{name:"x",size:20}),onClick:t,size:"sm",variant:"close"}),a.jsxs("div",{className:"info-content-area",children:[a.jsx(Be,{borderColorClass:"border-sky-700",borderWidthClass:"border-b-2",containerClassName:"mb-6",header:on.title,headerFont:"3xl",headerPreset:"sky",headerTag:"h1",headerWrapperClassName:"text-center"}),Al,a.jsx(Be,{contentFontClass:"leading-relaxed space-y-4",header:"Changelog",children:El}),a.jsx(Be,{containerClassName:"mt-8",contentColorClass:"text-slate-500",contentFontClass:"text-sm text-center",text:on.footer})]})]})})}const Ml=qo.memo(Dl);function $l({isVisible:e,facts:t,onSubmit:n,onClose:s}){const[o,c]=r.useState({});r.useEffect(()=>{e&&c({})},[t,e]);const l=r.useCallback((f,w)=>{c(u=>({...u,[f]:u[f]===w?void 0:w}))},[]),h=r.useCallback(()=>{const f=[],w=[];t.forEach((u,x)=>{o[x]==="good"&&f.push(u),o[x]==="bad"&&w.push(u)}),n(f,w,!0)},[t,o,n]),i=r.useCallback(()=>{n([],[],!1)},[n]),d=r.useCallback(f=>{l(f,"good")},[l]),m=r.useCallback(f=>{l(f,"bad")},[l]),g=r.useMemo(()=>t.map((f,w)=>()=>{d(w)}),[t,d]),p=r.useMemo(()=>t.map((f,w)=>()=>{m(w)}),[t,m]);return a.jsx("div",{"aria-labelledby":"debug-lore-title","aria-modal":"true",className:`animated-frame debug-lore-frame ${e?"open":""}`,role:"dialog",children:a.jsxs("div",{className:"animated-frame-content",children:[a.jsx(Y,{ariaLabel:"Close debug lore",icon:a.jsx(pe,{name:"x",size:20}),onClick:s,size:"sm",variant:"close"}),a.jsx("h1",{className:"text-2xl font-bold text-amber-400 mb-3 text-center",id:"debug-lore-title",children:"Evaluate Extracted Facts"}),a.jsx("ul",{className:"mb-4 space-y-2",children:t.map((f,w)=>a.jsxs("li",{className:"flex items-start gap-2",children:[a.jsx("span",{className:"flex-grow text-slate-300",children:f}),a.jsx(Y,{ariaLabel:"Mark good",label:"Good",onClick:g[w],preset:"green",pressed:o[w]==="good",size:"sm",variant:"toggle"}),a.jsx(Y,{ariaLabel:"Mark bad",label:"Bad",onClick:p[w],preset:"red",pressed:o[w]==="bad",size:"sm",variant:"toggle"})]},f))}),a.jsxs("div",{className:"flex justify-end gap-2",children:[a.jsx(Y,{ariaLabel:"Skip",label:"Skip",onClick:i,preset:"stone",size:"sm"}),a.jsx(Y,{ariaLabel:"OK",label:"OK",onClick:h,preset:"sky",size:"sm"})]})]})})}function Rl({isVisible:e,onClose:t}){const[n,s]=r.useState("");r.useEffect(()=>{e&&s(ai()??"")},[e]);const o=r.useCallback(l=>{s(l.target.value)},[]),c=r.useCallback(()=>{si(n.trim()),t()},[n,t]);return e?a.jsx("div",{"aria-labelledby":"gemini-key-title","aria-modal":"true",className:"animated-frame open",role:"dialog",children:a.jsxs("div",{className:"animated-frame-content flex flex-col items-center",children:[a.jsx(Y,{ariaLabel:"Close Gemini key setup",icon:a.jsx(pe,{name:"x",size:20}),onClick:t,size:"sm",variant:"close"}),a.jsx("h1",{className:"text-2xl font-bold text-sky-300 mb-4",id:"gemini-key-title",children:"Configure Gemini API Key"}),a.jsxs("div",{className:"mb-4 text-slate-200 text-center",children:["Visit"," ",a.jsx("a",{href:"https://aistudio.google.com",target:"_blank",rel:"noopener noreferrer",className:"text-sky-400 underline hover:text-sky-300",children:"https://aistudio.google.com"})," ","to generate a free API key. Paste it below."]}),a.jsxs("div",{className:"flex w-full max-w-md space-x-2",children:[a.jsx("input",{"aria-label":"Gemini API key",className:"flex-grow p-2 bg-slate-700 text-slate-200 border border-slate-600 rounded-md shadow-sm focus:ring-sky-500 focus:border-sky-500",onChange:o,placeholder:"Enter API key",type:"password",value:n}),a.jsx(Y,{ariaLabel:"Save API key",disabled:n.trim()==="",label:"Save",onClick:c,preset:"green",variant:"compact"})]})]})}):null}function Ol({isBlurred:e,isDebugViewVisible:t,setIsDebugViewVisible:n}){const s=r.useCallback(()=>{n(o=>!o)},[n]);return a.jsx("footer",{className:`w-full max-w-screen-xl mt-12 text-center text-slate-500 text-sm ${e?"filter blur-sm pointer-events-none":""}`,children:a.jsxs("div",{className:"flex justify-between items-center",children:[a.jsxs("p",{className:"text-left",children:["©"," ",new Date().getFullYear(),". Developed by"," ",oi,", Codex, and Gemini."," ",a.jsx("br",{}),"Powered by Gemini."]}),a.jsx("button",{"aria-label":t?"Hide Debug View":"Open Debug View",className:"px-3 py-1 bg-slate-700 hover:bg-slate-600 text-slate-300 text-xs rounded shadow-md transition-colors",onClick:s,type:"button",children:"Debug"})]})})}function Fl({allNPCs:e,currentTheme:t,isVisible:n,onClose:s}){const o=r.useMemo(()=>{const l={};return e.forEach(h=>{let i=l[h.themeName];i||(i=[],l[h.themeName]=i),i.push(h)}),l},[e]),c=r.useMemo(()=>Object.keys(o).sort((l,h)=>t&&l===t.name?-1:t&&h===t.name?1:l.localeCompare(h)),[o,t]);return a.jsx("div",{"aria-labelledby":"knowledge-base-title","aria-modal":"true",className:`animated-frame ${n?"open":""}`,role:"dialog",children:a.jsxs("div",{className:"animated-frame-content",children:[a.jsx(Y,{ariaLabel:"Close knowledge base",icon:a.jsx(pe,{name:"x",size:20}),onClick:s,size:"sm",variant:"close"}),a.jsxs("div",{className:"knowledge-base-content-area",children:[a.jsx("h1",{className:"text-3xl font-bold text-sky-300 mb-6 text-center",id:"knowledge-base-title",children:"Knowledge Base"}),c.length===0&&n?a.jsx("p",{className:"text-slate-300 italic text-center",children:"No knowledge has been recorded yet."}):null,n?c.map(l=>{const h=o[l]??[];return h.length===0?null:a.jsxs("section",{className:"mb-8",children:[a.jsxs("h2",{className:"kb-theme-group-title",children:["Theme:"," ",l,t&&l===t.name?a.jsx("span",{className:"text-sm text-purple-400 ml-2",children:"(Current Active Theme)"}):null]}),h.length>0&&a.jsxs(a.Fragment,{children:[a.jsx("h3",{className:"text-xl font-semibold text-emerald-400 mt-4 mb-2",children:"NPCs"}),a.jsx("div",{className:"kb-card-grid",children:h.map(i=>{let d;if(t&&l===t.name&&(i.presenceStatus==="companion"||i.presenceStatus==="nearby")){const g=i.presenceStatus==="companion"?"companion":"nearbyNpc",p=i.presenceStatus==="companion"?"(Companion)":"(Nearby)",f=i.presenceStatus==="companion"?"text-green-300":"text-sky-300";d=a.jsxs("p",{className:"text-sm text-slate-300 flex items-center",children:[a.jsx(pe,{color:g==="companion"?"green":"sky",inline:!0,marginRight:4,name:g,size:16}),a.jsxs("span",{className:`ml-1 ${f} italic`,children:[i.preciseLocation??""," ",p]})]})}else i.lastKnownLocation&&i.lastKnownLocation!=="Unknown"?d=a.jsx("p",{className:"text-sm text-slate-300 flex items-center",children:a.jsxs("span",{className:"ml-1 italic",children:[i.lastKnownLocation," ","(",i.presenceStatus,")"]})}):d=a.jsx("p",{className:"text-sm text-slate-500 flex items-center",children:a.jsxs("span",{className:"ml-1 italic",children:["(",i.presenceStatus,", Location Unknown)"]})});return a.jsxs("div",{className:"kb-card",children:[a.jsx("div",{className:"kb-card-name-header",children:i.name}),i.aliases&&i.aliases.length>0?a.jsxs("p",{className:"kb-card-aliases",children:["Aliases:",i.aliases.join(", ")]}):null,a.jsx("p",{className:"kb-card-description",children:i.description}),a.jsx("div",{className:"mt-2 pt-2 border-t border-slate-600",children:d})]},`${l}-npc-${i.name}`)})})]})]},l)}):null]})]})})}const _l=(e=`${String(-Ct/2)} ${String(-St/2)} ${String(Ct)} ${String(St)}`,t)=>{const[n,s]=r.useState(e),o=S=>{s(S),t&&t(S)},c=r.useRef(null),[l,h]=r.useState(!1),[i,d]=r.useState(null),[m,g]=r.useState(null);r.useEffect(()=>{s(S=>S===e?S:e)},[e]);const p=S=>{S.target.closest(".map-node")||(h(!0),d({x:S.clientX,y:S.clientY}),c.current&&(c.current.style.cursor="grabbing"))},f=S=>{if(!l||!i||!c.current)return;const A=c.current,y=tt(A,i.x,i.y),E=tt(A,S.clientX,S.clientY),N=y.x-E.x,O=y.y-E.y,[F,D,k,L]=n.split(" ").map(parseFloat);o(`${String(F+N)} ${String(D+O)} ${String(k)} ${String(L)}`),d({x:S.clientX,y:S.clientY})},w=()=>{h(!1),d(null),c.current&&(c.current.style.cursor="grab")},u=()=>{l&&w()},x=S=>{if(S.cancelable&&S.preventDefault(),!c.current)return;const[A,y,E,N]=n.split(" ").map(parseFloat),O=1.1,F=S.deltaY<0?E/O:E*O,D=S.deltaY<0?N/O:N*O,k=Math.min(Ct,St)*.1,L=Math.min(Ct,St)*10;if(F<k||F>L||D<k||D>L)return;const I=c.current,T=tt(I,S.clientX,S.clientY),P=T.x-(T.x-A)*(F/E),b=T.y-(T.y-y)*(D/N);o(`${String(P)} ${String(b)} ${String(F)} ${String(D)}`)},C=(S,A)=>Math.sqrt(Math.pow(S.clientX-A.clientX,2)+Math.pow(S.clientY-A.clientY,2));return{viewBox:n,svgRef:c,handleMouseDown:p,handleMouseMove:f,handleMouseUp:w,handleMouseLeave:u,handleWheel:x,handleTouchStart:S=>{if(c.current)if(S.cancelable&&S.preventDefault(),S.touches.length===1){if(S.target.closest(".map-node"))return;h(!0),d({x:S.touches[0].clientX,y:S.touches[0].clientY}),g(null),c.current.style.cursor="grabbing"}else S.touches.length===2&&(h(!1),g(C(S.touches[0],S.touches[1])),d(null))},handleTouchMove:S=>{if(c.current){if(S.cancelable&&S.preventDefault(),S.touches.length===1&&l&&i){const A=S.touches[0],y=c.current,E=tt(y,i.x,i.y),N=tt(y,A.clientX,A.clientY),O=E.x-N.x,F=E.y-N.y,[D,k,L,I]=n.split(" ").map(parseFloat);o(`${String(D+O)} ${String(k+F)} ${String(L)} ${String(I)}`),d({x:A.clientX,y:A.clientY})}else if(S.touches.length===2&&m!==null){const A=C(S.touches[0],S.touches[1]);if(A===0||m===0)return;const y=A/m,[E,N,O,F]=n.split(" ").map(parseFloat);let D=O/y,k=F/y;const L=Math.min(Ct,St)*.1,I=Math.min(Ct,St)*10;(D<L||D>I||k<L||k>I)&&(D<L&&(k*=L/D,D=L),k<L&&(D*=L/k,k=L),D>I&&(k*=I/D,D=I),k>I&&(D*=I/k,k=I));const T=(S.touches[0].clientX+S.touches[1].clientX)/2,P=(S.touches[0].clientY+S.touches[1].clientY)/2,b=c.current,R=tt(b,T,P),U=R.x-(R.x-E)*(D/O),M=R.y-(R.y-N)*(k/F);o(`${String(U)} ${String(M)} ${String(D)} ${String(k)}`),g(A)}}},handleTouchEnd:S=>{c.current&&(c.current.style.cursor="grab"),S.touches.length<2&&g(null),S.touches.length<1&&(h(!1),d(null))}}},Gl=({nodes:e,edges:t,svgRef:n,viewBox:s,destinationNodeId:o,onSelectDestination:c})=>{const[l,h]=r.useState(null),[i,d]=r.useState(!1),m=r.useRef(null),g=250,[p,f]=r.useState(null);r.useLayoutEffect(()=>{if(!l||!n.current){f(null);return}const{x:S,y:A}=wr(n.current,l.svgX,l.svgY),y=n.current.getBoundingClientRect();f({x:S-y.left,y:A-y.top})},[l,s,n]);const w=r.useCallback((S,A,y)=>{const E=S>y.width/2?"right":"left";return`${A>y.height*.75?"bottom":"top"}-${E}`},[]),u=r.useCallback(()=>{m.current&&(clearTimeout(m.current),m.current=null),i||h(null)},[i]),x=r.useCallback(S=>{const A=S.target;!A.closest(".map-node")&&!A.closest(".map-edge-group")&&(d(!1),h(null))},[]),C=r.useCallback(S=>{var T;if(i)return;const A=S.currentTarget.dataset.edgeId;if(!A)return;const y=t.find(P=>P.id===A);if(!y)return;const E=(T=n.current)==null?void 0:T.getBoundingClientRect();if(!E)return;const N=S.clientX-E.left,O=S.clientY-E.top,F=n.current?tt(n.current,S.clientX,S.clientY):{x:0,y:0},D=e.find(P=>P.id===y.sourceNodeId),k=e.find(P=>P.id===y.targetNodeId);let L=y.data.description??`Path between ${(D==null?void 0:D.placeName)??"Unknown"} and ${(k==null?void 0:k.placeName)??"Unknown"}`;y.data.travelTime&&(L+=`
${y.data.travelTime}`),y.data.status&&(L+=`
Status: ${y.data.status}`);const I=w(N,O,E);m.current&&clearTimeout(m.current),m.current=window.setTimeout(()=>{h({content:L,svgX:F.x,svgY:F.y,anchor:I})},g)},[w,t,i,e,n]),v=r.useCallback(S=>{var L;if(i)return;const A=S.currentTarget.getAttribute("data-node-id");if(!A)return;const y=e.find(I=>I.id===A);if(!y)return;const E=(L=n.current)==null?void 0:L.getBoundingClientRect();if(!E)return;const N=S.clientX-E.left,O=S.clientY-E.top,F=n.current?tt(n.current,S.clientX,S.clientY):{x:0,y:0};let D=y.placeName;y.data.aliases&&y.data.aliases.length>0&&(D+=` (aka ${y.data.aliases.join(", ")})`),y.data.description&&(D+=`
${y.data.description}`),D+=`
Status: ${y.data.status}`;const k=w(N,O,E);m.current&&clearTimeout(m.current),m.current=window.setTimeout(()=>{h({content:D,svgX:F.x,svgY:F.y,anchor:k,nodeId:A})},g)},[w,i,e,n]),j=r.useCallback(S=>{var L;S.stopPropagation();const A=S.currentTarget.getAttribute("data-node-id");if(!A)return;const y=e.find(I=>I.id===A);if(!y)return;m.current&&(clearTimeout(m.current),m.current=null);const E=(L=n.current)==null?void 0:L.getBoundingClientRect();if(!E)return;const N=S.clientX-E.left,O=S.clientY-E.top,F=n.current?tt(n.current,S.clientX,S.clientY):{x:0,y:0};let D=y.placeName;y.data.aliases&&y.data.aliases.length>0&&(D+=` (aka ${y.data.aliases.join(", ")})`),y.data.description&&(D+=`
${y.data.description}`),D+=`
Status: ${y.data.status}`,d(!0);const k=w(N,O,E);h({content:D,svgX:F.x,svgY:F.y,anchor:k,nodeId:A})},[w,e,n]),$=r.useCallback(S=>{const A=S.currentTarget.dataset.nodeId;A&&(c(A===o?null:A),d(!1),h(null))},[o,c]);return{tooltip:l,tooltipScreenPosition:p,isTooltipLocked:i,handleMouseLeaveGeneral:u,handleSvgClick:x,handleEdgeMouseEnterById:C,handleNodeMouseEnterById:v,handleNodeClickById:j,handleDestinationClick:$,setIsTooltipLocked:d}},Ba=(e,t)=>{const n=e.position.x,s=e.position.y,o=t.position.x,c=t.position.y,l=o-n,h=c-s,i=Math.sqrt(l*l+h*h)||1,d=(n+o)/2,m=(s+c)/2,g=i*.3,p=-h/i,f=l/i,w=d+p*g,u=m+f*g;return`M ${String(n)} ${String(s)} Q ${String(w)} ${String(u)} ${String(o)} ${String(c)}`},Ul={};function Vl({nodes:e,edges:t,currentMapNodeId:n,destinationNodeId:s,itemPresenceByNode:o=Ul,onSelectDestination:c,labelOverlapMarginPx:l,itemIconScale:h,initialViewBox:i,onViewBoxChange:d}){const m=_l(i,d),{svgRef:g,viewBox:p,handleMouseDown:f,handleMouseMove:w,handleMouseUp:u,handleMouseLeave:x,handleWheel:C,handleTouchStart:v,handleTouchMove:j,handleTouchEnd:$}=m,{tooltip:S,tooltipScreenPosition:A,isTooltipLocked:y,handleMouseLeaveGeneral:E,handleSvgClick:N,handleEdgeMouseEnterById:O,handleNodeMouseEnterById:F,handleNodeClickById:D,handleDestinationClick:k}=Gl({nodes:e,edges:t,svgRef:g,viewBox:p,destinationNodeId:s,onSelectDestination:c}),L=r.useMemo(()=>Cr(e,l),[e,l]),I=r.useMemo(()=>{const b=new Map(e.map(M=>[M.id,M])),R=new Map,U=M=>{if(!M)return 0;const _=R.get(M.id);if(_!==void 0)return _;const Q=M.data.parentNodeId?b.get(M.data.parentNodeId):void 0,W=Q?U(Q)+1:0;return R.set(M.id,W),W};return e.forEach(M=>U(M)),R},[e]),T=r.useMemo(()=>[...e].sort((b,R)=>(I.get(b.id)??0)-(I.get(R.id)??0)),[e,I]),P=r.useMemo(()=>{if(!s)return null;const b=e.find(M=>M.id===s),R=n?e.find(M=>M.id===n):null;if(!b)return null;const U=new Map(e.map(M=>[M.id,M]));return R&&(R.id===b.id||Sr(R,b,U))?null:a.jsx("polygon",{className:"map-destination-marker",pointerEvents:"none",points:"0,-14 10,0 0,14 -10,0",transform:`translate(${String(b.position.x)}, ${String(b.position.y)})`})},[s,e,n]);return e.length===0?a.jsx("div",{className:"map-content-area",children:a.jsx("p",{className:"text-slate-500 italic",children:"No map data available for this theme yet."})}):a.jsxs("div",{className:"map-content-area",children:[a.jsx("svg",{className:"map-svg-container",onClick:N,onMouseDown:f,onMouseLeave:x,onMouseMove:w,onMouseUp:u,onTouchEnd:$,onTouchMove:j,onTouchStart:v,onWheel:C,preserveAspectRatio:"xMidYMid meet",ref:g,viewBox:p,children:a.jsxs("g",{children:[t.map(b=>{const R=e.find(_=>_.id===b.sourceNodeId),U=e.find(_=>_.id===b.targetNodeId);if(!R||!U)return null;let M="map-edge";return b.data.type&&(M+=` ${b.data.type.replace(/\s+/g,"_").toLowerCase()}`),b.data.status&&(M+=` ${b.data.status.replace(/\s+/g,"_").toLowerCase()}`),a.jsx("g",{className:"map-edge-group","data-edge-id":b.id,onMouseEnter:O,onMouseLeave:E,children:b.data.type==="shortcut"?a.jsxs(a.Fragment,{children:[a.jsx("path",{d:Ba(R,U),fill:"none",stroke:"transparent",strokeWidth:ka}),a.jsx("path",{className:M,d:Ba(R,U)})]}):a.jsxs(a.Fragment,{children:[a.jsx("line",{stroke:"transparent",strokeWidth:ka,x1:R.position.x,x2:U.position.x,y1:R.position.y,y2:U.position.y}),a.jsx("line",{className:M,x1:R.position.x,x2:U.position.x,y1:R.position.y,y2:U.position.y})]})},b.id)}),T.map(b=>{let R="map-node-circle";R+=` ${b.data.nodeType}`,b.id===n&&(R+=" current");const U=b.data.status.replace(/\s+/g,"_").toLowerCase();R+=` ${U}`;const M=xn(b);return a.jsxs("g",{className:"map-node","data-node-id":b.id,onClick:D,onMouseLeave:E,transform:`translate(${String(b.position.x)}, ${String(b.position.y)})`,children:[a.jsx("circle",{className:R,"data-node-id":b.id,onMouseEnter:b.data.nodeType==="feature"?F:void 0,onMouseLeave:b.data.nodeType==="feature"?E:void 0,pointerEvents:b.data.nodeType==="feature"?"visible":"none",r:M}),a.jsx("circle",{className:"map-node-hover-ring","data-node-id":b.id,fill:"none",onMouseEnter:F,onMouseLeave:E,pointerEvents:"stroke",r:M,stroke:"transparent",strokeWidth:8})]},b.id)}),P,T.map(b=>{const R=o[b.id]??{hasUseful:!1,hasVehicle:!1};if(!R.hasUseful&&!R.hasVehicle)return null;const M=xn(b)+nn*1.5,_=ri*2*h,Q=b.position.x+M*Math.sin(20*Math.PI/180)-_/2,W=b.position.y-M*Math.cos(20*Math.PI/180)-_/2,G=b.position.x+M*Math.sin(340*Math.PI/180)-_/2,z=b.position.y-M*Math.cos(340*Math.PI/180)-_/2;return a.jsxs("g",{children:[R.hasUseful?a.jsx("g",{pointerEvents:"none",transform:`translate(${String(Q)}, ${String(W)})`,children:a.jsx(pe,{color:"green",name:"mapItemBox",size:_,wrapper:"g"})}):null,R.hasVehicle?a.jsx("g",{pointerEvents:"none",transform:`translate(${String(G)}, ${String(z)})`,children:a.jsx(pe,{color:"green",name:"mapWheel",size:_,wrapper:"g"})}):null]},`${b.id}-icons`)}),T.map(b=>{const R=wn(b.data.nodeType)?20:25,U=Nr(b.placeName,R,ii),M=xn(b),_=wn(b.data.nodeType)?7:12,Q=M+nn+(L[b.id]??0),W=Tr(b.data.nodeType)?-(U.length-1)*.5*tn+.3:Q/_;return a.jsx("text",{className:`map-node-label${wn(b.data.nodeType)?b.data.nodeType==="feature"?" feature-label":b.data.nodeType==="room"?" room-label":" interior-label":""}`,"data-node-id":b.id,onMouseEnter:F,onMouseLeave:E,pointerEvents:"visible",transform:`translate(${String(b.position.x)}, ${String(b.position.y)})`,children:U.map((G,z)=>a.jsx("tspan",{dy:z===0?`${String(W)}em`:`${String(tn)}em`,x:"0",children:G},`${b.id}-${G}`))},`label-${b.id}`)})]})}),S&&A?a.jsxs("div",{className:`map-tooltip anchor-${S.anchor}`,style:{top:A.y,left:A.x,pointerEvents:y?"auto":"none"},children:[y&&S.nodeId?a.jsx("div",{className:"mb-1",children:a.jsx(Y,{ariaLabel:S.nodeId===s?"Remove Destination":"Set Destination","data-node-id":S.nodeId,label:S.nodeId===s?"Remove Destination":"Set Destination",onClick:k,preset:"amber",size:"sm",variant:"standard"})}):null,S.content.split(`
`).map((b,R)=>a.jsxs(r.Fragment,{children:[R===0?a.jsx("strong",{children:b}):b,R<S.content.split(`
`).length-1&&a.jsx("br",{})]},`${String(S.nodeId)}-${String(b)}`))]}):null]})}function qt({label:e,id:t,value:n,onChange:s,min:o,max:c,step:l,explanation:h=""}){const i=r.useCallback(d=>{s(parseFloat(d.target.value))},[s]);return a.jsxs("div",{className:"map-control-group",children:[a.jsxs("label",{className:"map-control-label",htmlFor:t,children:[e,": ",n.toFixed(l<1?2:0)]}),a.jsx("input",{className:"map-control-input",id:t,max:c,min:o,onChange:i,step:l,type:"range",value:n}),h?a.jsx("p",{className:"map-control-explanation",children:h}):null]})}function Bl(e){const[t,n]=r.useState(!1),s=r.useCallback(()=>{n(w=>!w)},[]),{padding:o,setPadding:c,anglePadding:l,setAnglePadding:h,overlapMargin:i,setOverlapMargin:d,itemIconScale:m,setItemIconScale:g,onReset:p,onRefreshLayout:f}=e;return a.jsxs("div",{className:`map-controls-container ${t?"controls-expanded":""}`,children:[t?a.jsxs("div",{className:"map-layout-sliders-wrapper",children:[a.jsx(qt,{explanation:"Distance between parent and child levels",id:"layoutPadding",label:"Padding",max:60,min:5,onChange:c,step:1,value:o}),a.jsx(qt,{explanation:"Extra spacing between siblings",id:"layoutAnglePadding",label:"Angle Padding",max:.5,min:0,onChange:h,step:.01,value:l}),a.jsx(qt,{explanation:"Extra spacing when labels overlap",id:"overlapMargin",label:"Overlap Margin",max:10,min:0,onChange:d,step:1,value:i}),a.jsx(qt,{explanation:"Relative size of item markers",id:"itemIconScale",label:"Icon Size",max:1,min:.2,onChange:g,step:.1,value:m}),a.jsx("div",{className:"mt-2",children:a.jsx(Y,{ariaLabel:"Reset to Defaults",label:"Reset to Defaults",onClick:p,preset:"orange",variant:"standard"})})]}):null,a.jsxs("div",{className:"map-action-buttons-row",children:[a.jsx(Y,{ariaLabel:"Toggle Layout Controls",label:`${t?"Hide":"Show"} Layout Controls`,onClick:s,preset:"blue",size:"sm",variant:"compact"}),a.jsx(Y,{ariaLabel:"Refresh Layout",label:"Refresh Layout",onClick:f,preset:"blue",size:"sm",variant:"compact"})]})]})}function zl({mapData:e,currentThemeName:t,currentMapNodeId:n,destinationNodeId:s,itemPresenceByNode:o,onSelectDestination:c,initialLayoutConfig:l,initialViewBox:h,onViewBoxChange:i,onNodesPositioned:d,onLayoutConfigChange:m,isVisible:g,onClose:p}){const[f,w]=r.useState([]),[u,x]=r.useState(l.IDEAL_EDGE_LENGTH),[C,v]=r.useState(l.NESTED_PADDING),[j,$]=r.useState(l.NESTED_ANGLE_PADDING),S=nn,A=tn,[y,E]=r.useState(l.LABEL_OVERLAP_MARGIN_PX),[N,O]=r.useState(l.ITEM_ICON_SCALE);r.useEffect(()=>{const P=l.IDEAL_EDGE_LENGTH,b=l.NESTED_PADDING,R=l.NESTED_ANGLE_PADDING,U=l.LABEL_OVERLAP_MARGIN_PX,M=l.ITEM_ICON_SCALE;x(_=>_===P?_:P),v(_=>_===b?_:b),$(_=>_===R?_:R),E(_=>_===U?_:U),O(_=>_===M?_:M)},[l]);const F=r.useMemo(()=>({IDEAL_EDGE_LENGTH:u,NESTED_PADDING:C,NESTED_ANGLE_PADDING:j,LABEL_MARGIN_PX:S,LABEL_LINE_HEIGHT_EM:A,LABEL_OVERLAP_MARGIN_PX:y,ITEM_ICON_SCALE:N}),[u,C,j,S,A,y,N]);r.useEffect(()=>{const P=setTimeout(()=>{m(F)},500);return()=>{clearTimeout(P)}},[F,m]);const D=r.useMemo(()=>t?e.nodes.filter(P=>P.themeName===t):[],[e.nodes,t]),k=r.useMemo(()=>{if(!t)return[];const P=new Set(D.map(b=>b.id));return e.edges.filter(b=>P.has(b.sourceNodeId)&&P.has(b.targetNodeId))},[e.edges,D,t]),L=r.useCallback(()=>{const P=[...D],b=cs(P,{padding:C,anglePadding:j});w(b),d(b)},[D,C,j,d]);r.useEffect(()=>{g?L():w([])},[g,L]);const I=r.useCallback(()=>{L()},[L]),T=r.useCallback(()=>{x(is),v(rs),$(os),E(gs),O(hs)},[]);return g?a.jsx("div",{"aria-labelledby":"map-display-title","aria-modal":"true",className:"animated-frame open",role:"dialog",children:a.jsxs("div",{className:"animated-frame-content",children:[a.jsx(Y,{ariaLabel:"Close map view",icon:a.jsx(pe,{name:"x",size:20}),onClick:p,size:"sm",variant:"close"}),a.jsx("h1",{className:"text-xl font-bold text-teal-400 mb-2 text-center",id:"map-display-title",children:t?`Map: ${t}`:"Map"}),a.jsx("p",{className:"text-center text-xs text-slate-300 mb-1",children:"Pan by dragging, zoom with the mouse wheel or pinch. Hover for details."}),a.jsx(Vl,{currentMapNodeId:n,destinationNodeId:s,edges:k,initialViewBox:h,itemIconScale:N,itemPresenceByNode:o,labelOverlapMarginPx:y,nodes:f,onSelectDestination:c,onViewBoxChange:i}),a.jsx(Bl,{anglePadding:j,itemIconScale:N,onRefreshLayout:I,onReset:T,overlapMargin:y,padding:C,setAnglePadding:$,setItemIconScale:O,setOverlapMargin:E,setPadding:v})]})}):null}function $t({isOpen:e,title:t,message:n,onConfirm:s,onCancel:o,confirmText:c="Confirm",cancelText:l="Cancel",confirmPreset:h="sky",isCustomModeShift:i=!1}){const d=r.useCallback(g=>{g.stopPropagation()},[]);if(!e)return null;let m=n;return t==="Confirm Reality Shift"&&i&&(m=a.jsx(a.Fragment,{children:"This will allow you to choose a new theme to shift to. The current adventure will be summarized. Are you sure you wish to proceed?"})),a.jsxs("div",{"aria-labelledby":"confirmation-dialog-title","aria-modal":"true",className:"fixed inset-0 bg-black bg-opacity-85 flex items-center justify-center z-[100] p-4 backdrop-blur-sm",onClick:o,role:"dialog",children:[a.jsxs("div",{className:"bg-slate-800 p-6 md:p-8 rounded-xl shadow-2xl border border-slate-700 w-full max-w-lg transform transition-all duration-300 ease-out scale-95 opacity-0 animate-dialog-enter",onClick:d,style:{animationFillMode:"forwards"},children:[a.jsx("h2",{className:"text-2xl font-bold text-sky-300 mb-5",id:"confirmation-dialog-title",children:t}),a.jsx("div",{className:"text-slate-300 mb-8 text-base leading-relaxed",children:m}),a.jsxs("div",{className:"flex justify-end space-x-4",children:[a.jsx(Y,{ariaLabel:l,label:l,onClick:o,preset:"slate",size:"md",variant:"compact"}),a.jsx(Y,{ariaLabel:c,label:c,onClick:s,preset:h,size:"md",variant:"compact"})]})]}),a.jsx("style",{children:`
        @keyframes dialog-enter {
          to {
            opacity: 1;
            transform: scale(1);
          }
        }
        .animate-dialog-enter {
          animation: dialog-enter 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }
      `})]})}$t.defaultProps={cancelText:"Cancel",confirmPreset:"sky",confirmText:"Confirm",isCustomModeShift:!1};function Hl({messages:e}){const t=r.useRef(null),n="Game Log",s=a.jsx(pe,{color:"emerald",inline:!0,marginRight:8,name:"log",size:20}),o=(()=>{const c=new Map;return e.map(l=>{const h=c.get(l)??0;return c.set(l,h+1),a.jsxs("li",{className:"text-slate-200 leading-snug",children:[a.jsx("span",{className:"mr-1 text-emerald-500",children:"»"}),l]},`${l}-${String(h)}`)})})();return a.jsx(Be,{borderColorClass:"border-emerald-700",borderWidthClass:"border-b-2",containerClassName:"mt-6 bg-slate-800 p-6 rounded-lg shadow-lg border border-slate-700 max-h-80 overflow-y-auto",contentColorClass:"",contentFontClass:"",header:n,headerFont:"xl",headerIcon:s,headerPreset:"emerald",headerTag:"h3",headerWrapperClassName:"flex items-center",children:a.jsxs("ul",{className:"space-y-2 text-sm",children:[o,a.jsx("div",{ref:t})]})})}function Wl({themeHistory:e,gameLog:t,isVisible:n,onClose:s}){const o=Object.entries(e);return a.jsx("div",{"aria-labelledby":"history-title","aria-modal":"true",className:`animated-frame ${n?"open":""}`,role:"dialog",children:a.jsxs("div",{className:"animated-frame-content",children:[a.jsx(Y,{ariaLabel:"Close history",icon:a.jsx(pe,{name:"x",size:20}),onClick:s,size:"sm",variant:"close"}),a.jsxs("div",{className:"theme-memory-content-area",children:[a.jsx(Be,{borderColorClass:"border-purple-700",borderWidthClass:"border-b-2",containerClassName:"mt-4 mb-4",header:"History",headerFont:"2xl",headerPreset:"purple",headerTag:"h2",headerWrapperClassName:"text-center"}),a.jsx(Hl,{messages:t}),a.jsx(Be,{borderColorClass:"border-purple-700",borderWidthClass:"border-b-2",containerClassName:"mt-4 mb-4",header:"Echoes of Past Realities",headerFont:"2xl",headerPreset:"purple",headerTag:"h2",headerWrapperClassName:"text-center"}),o.length===0&&a.jsx("p",{className:"text-slate-300 italic text-center",children:"No alternate timelines have been chronicled yet."}),o.length>0&&a.jsx("ul",{className:"space-y-4",children:o.map(([c,l])=>a.jsxs("li",{className:"text-slate-300 bg-slate-700/80 p-4 rounded-lg shadow-lg border border-slate-600 transition-all hover:shadow-purple-500/40 hover:border-purple-500",children:[a.jsx("h4",{className:"font-semibold text-xl text-purple-300 mb-2",children:c}),l.summary&&l.summary!=="The details of this reality are hazy..."?a.jsxs("p",{className:"text-sm text-slate-300 mb-2 italic leading-relaxed",children:["“",l.summary,"”"]}):a.jsx("p",{className:"text-sm text-slate-300 mb-2 italic",children:"The memories of this reality are too fragmented to recall clearly."})]},c))})]})]})})}const za={dungeon:"a dark, gritty medieval fantasy style, dungeons and dragons concept art",cyberpunk:"a neon-drenched, futuristic cyberpunk cityscape style, Blade Runner aesthetic",eldritch:"a Lovecraftian horror style, cosmic dread, 1920s period","post-apocalyptic":"a desolate, rusty post-apocalyptic wasteland style, Mad Max aesthetic",steampunk:"a steampunk style with clockwork machines and airships, Victorian era","victorian mansion":"a haunted Victorian mansion style, gothic horror, moody and atmospheric","deep space":"a deep space sci-fi style, cosmic anomaly, advanced technology","lost world":"a prehistoric lost world style, lush jungles, dinosaurs, ancient ruins","greek hero":"a mythic Greek hero style, classical art, epic battles","wild west":"a Wild West outlaw style, dusty frontier, cinematic western"};je()||console.error("GEMINI_API_KEY for GoogleGenAI is not set. Image visualization will not work.");function Yl({currentSceneDescription:e,currentTheme:t,mapData:n,allNPCs:s,localTime:o,localEnvironment:c,localPlace:l,isVisible:h,onClose:i,setGeneratedImage:d,cachedImageUrl:m,cachedImageScene:g}){const[p,f]=r.useState(null),[w,u]=r.useState(!1),[x,C]=r.useState(null),[v,j]=r.useState(1),[$,S]=r.useState({x:0,y:0}),[A,y]=r.useState(!1),[E,N]=r.useState(null),[O,F]=r.useState(null),D=r.useRef(null),k=(G,z,H)=>Math.min(H,Math.max(z,G)),L=r.useCallback(G=>{G.cancelable&&G.preventDefault();const z=G.deltaY<0?1.1:.9;j(H=>k(H*z,1,4))},[]),I=r.useCallback(G=>{y(!0),N({x:G.clientX,y:G.clientY})},[]),T=r.useCallback(G=>{if(!A||!E)return;const z=G.clientX-E.x,H=G.clientY-E.y;S(q=>({x:q.x+z,y:q.y+H})),N({x:G.clientX,y:G.clientY})},[A,E]),P=r.useCallback(()=>{y(!1),N(null)},[]),b=(G,z)=>Math.sqrt((G.clientX-z.clientX)**2+(G.clientY-z.clientY)**2),R=r.useCallback(G=>{G.cancelable&&G.preventDefault(),G.touches.length===1?(y(!0),N({x:G.touches[0].clientX,y:G.touches[0].clientY}),F(null)):G.touches.length===2&&(y(!1),N(null),F(b(G.touches[0],G.touches[1])))},[]),U=r.useCallback(G=>{if(G.cancelable&&G.preventDefault(),G.touches.length===1&&A&&E){const z=G.touches[0],H=z.clientX-E.x,q=z.clientY-E.y;S(ne=>({x:ne.x+H,y:ne.y+q})),N({x:z.clientX,y:z.clientY})}else if(G.touches.length===2&&O!==null){const z=b(G.touches[0],G.touches[1]);if(z===0)return;j(H=>k(H*(z/O),1,4)),F(z)}},[A,E,O]),M=r.useCallback(G=>{G.touches.length<2&&F(null),G.touches.length<1&&(y(!1),N(null))},[]);r.useEffect(()=>{j(1),S({x:0,y:0})},[p]);const _=G=>{if(!G)return"a general fantasy style";const z=G.name.toLowerCase();for(const H in za)if(z.includes(H))return za[H];return`a style fitting for ${G.name}`},Q=r.useCallback(async()=>{var Z,ae,ie,se,ue;if(!Ot||!t){C("Image generation service or theme is not available."),u(!1),Xe(null);return}u(!0),Xe("visualize"),C(null),f(null);const G=`A detailed, digital painting in ${_(t)} without ANY text on it.
    Aspect ratio 4:3.
    It is ${o??"now"}. ${c??"The air is okay"}. ${l??"Location is unimportant"}. ${e}`;let z=G;const H=[];n.filter(ee=>ee.themeName===t.name).forEach(ee=>{e.toLowerCase().includes(ee.placeName.toLowerCase())&&(z+=` The ${ee.placeName} is prominent, described as: ${ee.data.description||"A notable location."}.`,H.push(ee.placeName))});const q=[];s.forEach(ee=>{ee.themeName===t.name&&e.toLowerCase().includes(ee.name.toLowerCase())&&(z+=` ${ee.name} here, appearing as: ${ee.description}.`,q.push(ee.name))}),z+=" Focus on creating a faithful representation based on this description. Do not generate any text on the image.",console.log("Original Scene: ",z);let ne=z;try{const{response:ee}=await _e({modelNames:[at,Re],prompt:`Rewrite the following scene description into a safe and aestetic visual depiction suitable for highly censored image generation. Only include the elements that are definitely present in the scene and omit anything non-visual, that is mentioned only for unrelated context. Preserve all details of the landscape or environment. Mention time, weather, mood of the environment. Preserve small details. Avoid any depressing, explicit or unsafe elements. Absolutely avoid nudity or corpses.

Scene:
${z}`,systemInstruction:"Respond ONLY with the visual description of the scene.",temperature:1,label:"ImagePromptSanitizer"});ne=G+(((Z=ee.text)==null?void 0:Z.trim())??z),console.log("Sanitized prompt: ",ne)}catch(ee){console.warn("Prompt sanitization failed, using raw prompt.",ee)}try{const ee=await Ot.models.generateImages({model:"imagen-4.0-generate-preview-06-06",prompt:ne,config:{numberOfImages:1,outputMimeType:"image/jpeg",aspectRatio:"4:3"}});if(ee.generatedImages&&ee.generatedImages.length>0&&((ae=ee.generatedImages[0].image)!=null&&ae.imageBytes)){const V=`data:image/jpeg;base64,${ee.generatedImages[0].image.imageBytes}`;f(V),d(V,e)}else throw new Error("No image data received from API.")}catch(ee){console.error("Error generating image:",ee);const we=ee instanceof Error?ee.message:"Unknown error during image generation.";if(rn(ee)===400)try{const le=await Ot.models.generateContentStream({model:"gemini-2.0-flash-preview-image-generation",contents:[{role:"user",parts:[{text:ne}]}],config:{responseModalities:["IMAGE","TEXT"],responseMimeType:"text/plain"}}),ce=oe=>typeof oe=="object"&&oe!==null&&"inlineData"in oe;let J;for await(const oe of le){const ye=(ie=oe.candidates)==null?void 0:ie[0];ye!=null&&ye.finishReason&&(J=ye.finishReason);const Ae=(ue=(se=ye==null?void 0:ye.content)==null?void 0:se.parts)==null?void 0:ue.find(ce),Te=Ae==null?void 0:Ae.inlineData;if(Te!=null&&Te.data){const Pe=`data:${Te.mimeType??"image/png"};base64,${Te.data}`;f(Pe),d(Pe,e),C(null);return}}J!=null&&J.toUpperCase().includes("SAFETY")?C(`Image blocked due to safety filter (${J}).`):C("Fallback image generation failed to return image data.")}catch(le){console.error("Fallback image generation failed:",le),C("Fallback image generation failed.")}we.includes("quota")||we.includes("billing")?C("Image generation quota exceeded or billing issue. Please check your Google Cloud project."):we.includes("API key not valid")?C("Image generation failed: API key is not valid. Please check configuration."):C(`Failed to visualize scene: ${we.substring(0,100)}`)}finally{u(!1),Xe(null)}},[e,t,n,s,o,c,l,d]),W=r.useCallback(()=>{Q()},[Q]);return r.useEffect(()=>{h&&(m&&g===e?(f(m),u(!1),C(null)):Q())},[h,m,g,e,Q]),a.jsx("div",{"aria-labelledby":"visualizer-title","aria-modal":"true",className:`animated-frame ${h?"open":""}`,role:"dialog",children:a.jsxs("div",{className:"animated-frame-content visualizer-content-area",children:[a.jsx(Y,{ariaLabel:"Close visualizer",icon:a.jsx(pe,{name:"x",size:20}),onClick:i,size:"sm",variant:"close"}),w?a.jsx("div",{className:"visualizer-spinner-container",children:a.jsx(gt,{})}):null,!w&&x?a.jsxs("div",{className:"visualizer-error-container",children:[a.jsx("h2",{className:"text-xl font-semibold text-red-400 mb-2",id:"visualizer-title",children:"Vision Failed"}),a.jsx("p",{children:x}),a.jsx("button",{className:"mt-4 px-6 py-2 bg-sky-600 hover:bg-sky-500 text-white font-semibold rounded-md shadow transition-colors",onClick:W,type:"button",children:"Retry Visualization"})]}):null,!w&&!x&&p?a.jsxs("div",{className:"visualizer-image-container",onMouseDown:I,onMouseLeave:P,onMouseMove:T,onMouseUp:P,onTouchEnd:M,onTouchMove:U,onTouchStart:R,onWheel:L,role:"presentation",children:[a.jsx("img",{alt:"Scene visualization",className:"visualizer-image",ref:D,src:p,style:{transform:`translate(${String($.x)}px, ${String($.y)}px) scale(${String(v)})`}}),a.jsx("h2",{className:"sr-only",id:"visualizer-title",children:"Scene Visualization"})]}):null,!w&&!x&&!p&&h?a.jsx("div",{className:"visualizer-spinner-container",children:a.jsx("p",{className:"mt-2 text-lg text-slate-300",id:"visualizer-title",children:"Preparing to visualize..."})}):null]})})}const Nn={},Kl=(e,t)=>{var s;const n=(s=e.chapters)==null?void 0:s[t];if(n)return n;if(t===0){const o=e;return{heading:e.name,description:e.description,contentLength:o.contentLength??30,actualContent:o.actualContent,visibleContent:o.visibleContent}}return null},Jl=e=>e.startsWith("/9j")?"image/jpeg":(e.startsWith("iVBORw0"),"image/png"),ql=async e=>new Promise((t,n)=>{const s=new Image;s.onload=()=>{const o=document.createElement("canvas");o.width=s.width,o.height=s.height;const c=o.getContext("2d");if(!c){n(new Error("No canvas context"));return}c.drawImage(s,0,0);const l=o.toDataURL("image/jpeg",.7).replace("data:image/jpeg;base64,","");t(l)},s.onerror=n,s.src=`data:${Jl(e)};base64,${e}`}),Ha={dungeon:"a dark, gritty medieval fantasy style, dungeons and dragons concept art",cyberpunk:"a neon-drenched, futuristic cyberpunk cityscape style, Blade Runner aesthetic",eldritch:"a Lovecraftian horror style, cosmic dread, 1920s period","post-apocalyptic":"a desolate, rusty post-apocalyptic wasteland style, Mad Max aesthetic",steampunk:"a steampunk style with clockwork machines and airships, Victorian era","victorian mansion":"a haunted Victorian mansion style, gothic horror, moody and atmospheric","deep space":"a deep space sci-fi style, cosmic anomaly, advanced technology","lost world":"a prehistoric lost world style, lush jungles, dinosaurs, ancient ruins","greek hero":"a mythic Greek hero style, classical art, epic battles","wild west":"a Wild West outlaw style, dusty frontier, cinematic western"},Ql=e=>{if(!e)return"a general fantasy style";const t=e.name.toLowerCase();for(const n in Ha)if(t.includes(n))return Ha[n];return`a style fitting for ${e.name}`},Xl=async(e,t,n)=>{var f;const s=`${e.id}-${String(n)}`,o=Nn[s];if(o)return o;if(!je()||!Ot)return console.error("generateChapterImage: API key not configured."),"";const c=Kl(e,n);if(!c)return console.warn(`generateChapterImage: invalid chapter index ${String(n)}`),"";const l=`${c.description} ${c.actualContent??""}`.trim(),h=`${e.name}: ${e.description}. ${l}`.trim(),i=`A detailed, ${e.type} in ${Ql(t)} without ANY text on it.`,d=`${i} ${h}`;let m=d;try{const{response:w}=await _e({modelNames:[at,Re],prompt:`Rewrite the following item depiction so it prioritizes the item's name and description while including any chapter details. Ensure the result is safe for a highly censored image generation system.

Description:
${d}`,systemInstruction:"Respond ONLY with the visual description.",temperature:1,label:"ImagePromptSanitizer"});m=`${i} ${((f=w.text)==null?void 0:f.trim())??h}`}catch(w){console.warn("Prompt sanitization failed, using raw prompt.",w)}const g=Ot,p=(async()=>{const u=await ze(async x=>{var C,v,j,$,S,A;try{He(Fe.visualize.icon);const E=(j=(v=(C=(await g.models.generateImages({model:"imagen-4.0-generate-preview-06-06",prompt:m,config:{numberOfImages:1,outputMimeType:"image/jpeg",aspectRatio:"4:3"}})).generatedImages)==null?void 0:C[0])==null?void 0:v.image)==null?void 0:j.imageBytes;if(E)return{result:E}}catch(y){if(console.error(`generateChapterImage error (Attempt ${String(x+1)}):`,y),rn(y)===400)try{const N=await g.models.generateContentStream({model:"gemini-2.0-flash-preview-image-generation",contents:[{role:"user",parts:[{text:m}]}],config:{responseModalities:["IMAGE","TEXT"],responseMimeType:"text/plain"}}),O=F=>typeof F=="object"&&F!==null&&"inlineData"in F;for await(const F of N){const D=($=F.candidates)==null?void 0:$[0],k=(A=(S=D==null?void 0:D.content)==null?void 0:S.parts)==null?void 0:A.find(O),L=k==null?void 0:k.inlineData;if(L!=null&&L.data)return{result:L.data}}}catch(N){console.error("Fallback image generation failed:",N)}throw y}return{result:""}})??"";return u?ql(u):""})();Nn[s]=p;try{return await p}finally{Nn[s]=void 0}};function Rs({item:e,currentTheme:t,currentScene:n,storytellerThoughts:s,mapData:o,allNPCs:c,currentQuest:l,isVisible:h,startIndex:i=0,onClose:d,updateItemContent:m,onInspect:g,onWriteJournal:p,canWriteJournal:f=!0,canInspectJournal:w=!0,isWritingJournal:u=!1}){var we;const[x,C]=r.useState(null),[v,j]=r.useState(!1),[$,S]=r.useState(!1),A=v||$,[y,E]=r.useState(!1),[N,O]=r.useState(null),[F,D]=r.useState(i),k=r.useRef(!1),L=(e==null?void 0:e.type)==="book",I=(e==null?void 0:e.type)==="page",T=(e==null?void 0:e.id)===fe,P=r.useMemo(()=>{if(!e)return[];if(e.id===fe)return e.chapters??[];if(e.chapters&&e.chapters.length>0)return e.chapters;const V=e;return[{heading:e.name,description:e.description,contentLength:V.contentLength??30,actualContent:V.actualContent,visibleContent:V.visibleContent}]},[e]),b=r.useMemo(()=>{if(!e||e.type!=="book")return P.length;let V=0;for(;V<P.length&&P[V].actualContent;V+=1);return Math.min(P.length,V+1)},[P,e]),R=r.useMemo(()=>P.every(V=>!!V.actualContent),[P]),U=r.useCallback(()=>{D(V=>Math.max(0,V-1))},[]),M=r.useCallback(()=>{D(V=>Math.min(T?P.length-1:b,V+1))},[T,P.length,b]),_=r.useCallback(()=>{g==null||g()},[g]),Q=r.useCallback(()=>{p==null||p()},[p]),W=r.useCallback(V=>{const B=Number(V.target.value);L&&!T?B<=b&&D(B):B<b&&D(B)},[b,L,T]),{name:G,systemInstructionModifier:z}=t,H=r.useCallback(()=>{E(V=>!V)},[]);r.useEffect(()=>{E(!1),D(i)},[e==null?void 0:e.id,h,i]);const q=r.useCallback(V=>{V.target===V.currentTarget&&d()},[d]),ne=r.useMemo(()=>{const V=(e==null?void 0:e.tags)??[],B=[],le=(e==null?void 0:e.type)==="book"&&!T?F-1:F,J=le>=0&&le<P.length?P[le]:void 0,oe=y&&!!(J!=null&&J.actualContent),ye=!oe&&V.includes("foreign");return V.includes("handwritten")?B.push(ye?"tag-handwritten-foreign":"tag-handwritten"):V.includes("printed")?B.push(ye?"tag-printed-foreign":"tag-printed"):V.includes("typed")?B.push(ye?"tag-typed-foreign":"tag-typed"):V.includes("digital")&&B.push(ye?"tag-digital-foreign":"tag-digital"),V.includes("faded")&&B.push("tag-faded"),V.includes("smudged")&&B.push("tag-smudged"),V.includes("torn")&&B.push("tag-torn"),oe||(V.includes("glitching")&&B.push("tag-glitching"),V.includes("encrypted")&&B.push("tag-encrypted"),V.includes("foreign")&&B.push("tag-foreign")),V.includes("gothic")&&B.push("tag-gothic"),V.includes("runic")&&B.push("tag-runic"),V.includes("recovered")&&y&&B.push("tag-recovered"),B.join(" ")},[e,y,F,P,T]),Z=r.useMemo(()=>{const V=o.nodes.filter(B=>B.themeName===G&&B.data.nodeType!=="feature"&&B.data.nodeType!=="room");return yt(V,!0)},[o,G]),ae=r.useMemo(()=>{const V=c.filter(B=>B.themeName===G);return V.length>0?nt(V," - ",!1,!1,!1,!0):"None specifically known in this theme yet."},[c,G]);r.useEffect(()=>{if(!h||!e){C(null),O(null),j(!1);return}if(e.type==="book"&&!T&&F===0){C(null),j(!1);return}const V=e.type==="book"&&!T?F-1:F;if(V<0||V>=P.length){C(null),j(!1);return}const B=P[V];if(B.visibleContent){C(B.visibleContent),j(!1);return}if(e.id===fe&&B.actualContent){C(B.actualContent),j(!1);return}j(!0),Xe(e.type==="book"?"book":"page"),(async()=>{const le=B.contentLength,ce=await sn(B.heading,B.description,le,G,z,n,s,Z,ae,l,"Write it exclusively in English without any foreign, encrypted, or gibberish text.",e.type==="book"&&!T&&V>0?P[V-1].actualContent??"":void 0);if(ce){const J=e.tags??[];let oe=ce;J.includes("foreign")?oe=await sn(B.heading,B.description,le,G,z,n,s,Z,ae,l,`Translate the following text into an artificial nonexistent language that fits the theme and context:
"""${ce}"""`)??ce:J.includes("encrypted")?oe=ts(ce):J.includes("runic")&&(oe=ns(ce)),J.includes("torn")&&!J.includes("recovered")&&(oe=as(oe)),m(e.id,ce,oe,V),C(oe)}j(!1),Xe(null)})()},[h,e,F,P,G,z,n,s,Z,ae,l,m,T]),r.useEffect(()=>{if(S(!1),!h||!e||e.type!=="picture"&&e.type!=="map"){O(null),S(!1);return}const V=F;if(V<0||V>=P.length){O(null),S(!1);return}const B=P[V];(async()=>{if(Vt(B.imageData)){const ce=await jt(e.id,V);if(ce){O(`data:image/jpeg;base64,${ce}`),S(!1);return}}else if(B.imageData){await It(e.id,V,B.imageData),m(e.id,void 0,void 0,V,st(e.id,V)),O(`data:image/jpeg;base64,${B.imageData}`),S(!1);return}else{const ce=await jt(e.id,V);if(ce){m(e.id,void 0,void 0,V,st(e.id,V)),O(`data:image/jpeg;base64,${ce}`),S(!1);return}}if(k.current)return;k.current=!0,S(!0),Xe(e.type==="book"?"book":"page");const le=await Xl(e,t,V);le&&(await It(e.id,V,le),m(e.id,void 0,void 0,V,st(e.id,V)),O(`data:image/jpeg;base64,${le}`)),S(!1),Xe(null),k.current=!1})()},[h,e,F,P,t,m]);const ie=r.useMemo(()=>{if(!e)return x;const V=e.type==="book"&&!T?F-1:F;if(!(V>=0&&V<P.length))return x;const le=P[V];return y&&le.actualContent?le.actualContent:x},[y,e,x,F,P,T]),se=r.useMemo(()=>T&&u,[T,u]);r.useEffect(()=>{if(se)return Xe("journal"),()=>{Xe(null)}},[se]);const ue=r.useMemo(()=>{var B;if(!e||!((B=e.tags)!=null&&B.includes("torn"))||e.tags.includes("recovered")||!ie)return null;const V=ie.trim();return V.startsWith("--- torn ---")?"top":V.endsWith("--- torn ---")?"bottom":null},[ie,e]),ee=r.useMemo(()=>e?T?w:L||I?R:!0:!1,[e,T,L,I,w,R]);return a.jsx("div",{"aria-labelledby":"page-view-title","aria-modal":"true",className:`animated-frame ${h?"open":""}`,onClick:q,role:"dialog",children:a.jsxs("div",{className:"animated-frame-content page-view-content-area",children:[a.jsx(Y,{ariaLabel:"Close page",icon:a.jsx(pe,{name:"x",size:20}),onClick:d,size:"sm",variant:"close"}),e!=null&&e.name?a.jsx("h2",{className:"text-2xl font-bold text-amber-400 mb-4 text-center",id:"page-view-title",children:e.name}):null,L||T?a.jsxs("div",{className:"flex justify-center items-center gap-2 mb-2",children:[T&&g?a.jsx(Y,{ariaLabel:"Inspect",disabled:!ee,label:"Inspect",onClick:_,preset:"indigo",size:"sm",variant:"compact"}):null,a.jsx(Y,{ariaLabel:"Previous chapter",disabled:F===0,label:"◄",onClick:U,preset:"slate",size:"lg",variant:"toolbar"}),a.jsx("select",{"aria-label":"Select chapter",className:"bg-slate-800 text-white text-md h-9 p-2",onChange:W,value:F,children:L&&!T?a.jsxs(a.Fragment,{children:[a.jsx("option",{value:0,children:"ToC"}),P.slice(0,b).map((V,B)=>a.jsx("option",{value:B+1,children:V.heading},V.heading))]}):P.map((V,B)=>a.jsx("option",{value:B,children:V.heading},V.heading))}),a.jsx(Y,{ariaLabel:"Next chapter",disabled:A||(L&&!T?F>=b||F===P.length:F>=P.length-1),label:"►",onClick:M,preset:"slate",size:"lg",variant:"toolbar"}),T&&p?a.jsx(Y,{ariaLabel:"Write entry",disabled:!f||u,label:"Write",onClick:Q,preset:"blue",size:"sm",title:"Write a new journal entry",variant:"compact"}):null]}):null,(we=e==null?void 0:e.tags)!=null&&we.includes("recovered")?a.jsx("div",{className:"flex justify-center",children:a.jsx(Y,{ariaLabel:y?"Show encoded text":"Show decoded text",label:y?"Hide":"Reveal",onClick:H,preset:y?"sky":"slate",pressed:y,size:"sm",variant:"toggle"})}):null,se?a.jsx(gt,{}):A?a.jsx(gt,{}):(e==null?void 0:e.type)==="book"&&!T&&F===0?a.jsx("ul",{className:`p-5 mt-4 list-disc list-inside overflow-y-auto text-left ${ne}`,children:P.map((V,B)=>a.jsx("p",{children:`${String(B+1)}. ${V.heading}`},V.heading))}):ie||((e==null?void 0:e.type)==="picture"||(e==null?void 0:e.type)==="map")&&N?a.jsxs("div",{className:`whitespace-pre-wrap text-lg overflow-y-auto p-5 mt-4 ${ne} ${ue?`torn-${ue}`:""}`,children:[((e==null?void 0:e.type)==="picture"||(e==null?void 0:e.type)==="map")&&N?a.jsx("div",{className:"mb-4 flex justify-center",children:a.jsx("img",{alt:e.name,className:"max-h-[24rem] object-contain mask-gradient-edges",src:N})}):null,ie?Ir(ie):null]}):T&&P.length===0?a.jsx("div",{className:`whitespace-pre-wrap text-lg overflow-y-auto p-5 mt-4 min-h-[20rem] tag-${t.playerJournalStyle}`}):null]})})}Rs.defaultProps={canInspectJournal:!0,canWriteJournal:!0,isWritingJournal:!1,onInspect:void 0,onWriteJournal:void 0,startIndex:0};function Zl({isVisualizerVisible:e,onCloseVisualizer:t,visualizerImageUrl:n,visualizerImageScene:s,setGeneratedImage:o,currentScene:c,currentTheme:l,mapData:h,allNPCs:i,localTime:d,localEnvironment:m,localPlace:g,isKnowledgeBaseVisible:p,onCloseKnowledgeBase:f,isHistoryVisible:w,onCloseHistory:u,themeHistory:x,gameLog:C,isMapVisible:v,onCloseMap:j,currentThemeName:$,currentMapNodeId:S,destinationNodeId:A,itemPresenceByNode:y,onSelectDestination:E,initialLayoutConfig:N,initialViewBox:O,onViewBoxChange:F,onNodesPositioned:D,onLayoutConfigChange:k,newGameFromMenuConfirmOpen:L,handleConfirmNewGameFromMenu:I,handleCancelNewGameFromMenu:T,newCustomGameConfirmOpen:P,handleConfirmNewCustomGame:b,handleCancelNewCustomGame:R,loadGameFromMenuConfirmOpen:U,handleConfirmLoadGameFromMenu:M,handleCancelLoadGameFromMenu:_,shiftConfirmOpen:Q,handleConfirmShift:W,handleCancelShift:G,isCustomGameModeShift:z,inventory:H,playerJournal:q,lastJournalWriteTurn:ne,pageItemId:Z,pageStartChapterIndex:ae,isPageVisible:ie,onClosePage:se,storytellerThoughts:ue,currentQuest:ee,updateItemContent:we,updatePlayerJournalContent:V,onItemInspect:B,canInspectJournal:le,onWriteJournal:ce,canWriteJournal:J,isWritingJournal:oe}){const ye=r.useCallback((Pe,Ke,ke,Ge,De)=>{Z===fe?V(Ke??"",Ge):we(Pe,Ke,ke,Ge,De)},[Z,we,V]),Ae=r.useCallback(()=>{Z&&(B(Z),se())},[Z,B,se]),Te=r.useCallback(()=>{Z===fe&&ce()},[Z,ce]);return a.jsxs(a.Fragment,{children:[a.jsx(Yl,{allNPCs:i,cachedImageScene:s,cachedImageUrl:n,currentSceneDescription:c,currentTheme:l,isVisible:e,localEnvironment:m,localPlace:g,localTime:d,mapData:h.nodes,onClose:t,setGeneratedImage:o}),a.jsx(Fl,{allNPCs:i,currentTheme:l,isVisible:p,onClose:f}),a.jsx(Wl,{gameLog:C,isVisible:w,onClose:u,themeHistory:x}),a.jsx(Rs,{allNPCs:i,canInspectJournal:le,canWriteJournal:J,currentQuest:ee,currentScene:c,currentTheme:l,isVisible:ie,isWritingJournal:oe,item:Z===fe?{id:fe,name:"Personal Journal",type:"book",description:"Your own journal",holderId:me,chapters:q,lastWriteTurn:ne,tags:[l.playerJournalStyle]}:H.find(Pe=>Pe.id===Z)??null,mapData:h,onClose:se,onInspect:Z?Ae:void 0,onWriteJournal:Z?Te:void 0,startIndex:ae,storytellerThoughts:ue,updateItemContent:ye}),a.jsx(zl,{currentMapNodeId:S,currentThemeName:$,destinationNodeId:A,initialLayoutConfig:N,initialViewBox:O,isVisible:v,itemPresenceByNode:y,mapData:h,onClose:j,onLayoutConfigChange:k,onNodesPositioned:D,onSelectDestination:E,onViewBoxChange:F}),a.jsx($t,{confirmPreset:"red",confirmText:"Start New Game",isOpen:L,message:"Are you sure you want to start a new game? Your current progress will be lost.",onCancel:T,onConfirm:I,title:"Confirm New Game"}),a.jsx($t,{confirmPreset:"orange",confirmText:"Start Custom Game",isOpen:P,message:"Are you sure you want to start a new custom game? Your current progress will be lost.",onCancel:R,onConfirm:b,title:"Confirm Custom Game"}),a.jsx($t,{confirmPreset:"blue",confirmText:"Load Game",isOpen:U,message:"Are you sure you want to load a game? Your current progress will be overwritten if you load a new game.",onCancel:_,onConfirm:M,title:"Confirm Load Game"}),a.jsx($t,{confirmPreset:"purple",confirmText:"Shift Reality",isCustomModeShift:z,isOpen:Q,message:a.jsxs(a.Fragment,{children:["This will destabilize the current reality, leading to an"," ",a.jsx("strong",{className:"text-purple-400",children:"immediate and unpredictable shift"})," ","to a new theme. Are you sure you wish to proceed?"]}),onCancel:G,onConfirm:W,title:"Confirm Reality Shift"})]})}function ec({freeFormActionText:e,canPerformFreeAction:t,onChange:n,onSubmit:s}){const o=r.useCallback(()=>{s()},[s]);return a.jsxs("div",{className:"mt-4 p-4 bg-slate-800 border border-slate-700 rounded-lg shadow",children:[a.jsxs("label",{className:"block text-sm font-medium text-amber-300 mb-1",htmlFor:"freeFormAction",children:["Perform Custom Action (Cost:"," ",Rt," ","Score Points)"]}),a.jsxs("div",{className:"flex space-x-2",children:[a.jsx("input",{"aria-label":"Custom action input",className:"flex-grow p-2 bg-slate-700 text-slate-200 border border-slate-600 rounded-md shadow-sm focus:ring-sky-500 focus:border-sky-500 disabled:bg-slate-600 disabled:text-slate-300",disabled:!t,id:"freeFormAction",maxLength:La,onChange:n,placeholder:"Type your custom action here...",type:"text",value:e}),a.jsx(Y,{ariaLabel:"Submit custom action",disabled:!t||e.trim()==="",label:"Submit",onClick:o,preset:"green",type:"button",variant:"compact"})]}),!t&&a.jsx("p",{className:"text-xs text-red-400 mt-1",children:"Not enough score points."}),t?a.jsxs("p",{className:"text-xs text-slate-300 mt-1",children:["Max",La," ","characters."]}):null]})}const tc=e=>({type:"object",properties:{heading:{type:"string",description:"Short plain text heading for the journal entry."},text:{type:"string",minLength:e-10,description:`Approximately ${String(e)} words of the journal entry, starting with a Markup-formatted heading. Basic Markup syntax is allowed, such as **bold** and *italic*.`}},required:["heading","text"],additionalProperties:!1}),nc=e=>{const t=Bt(e);return ot(t,n=>!!n&&typeof n=="object"&&typeof n.heading=="string"&&typeof n.text=="string")},ac=async(e,t,n,s,o,c,l,h,i,d,m,g)=>{if(!je())return console.error("generateJournalEntry: API key not configured."),null;const p=g?`Current Quest: "${g}"`:"Current Quest: Not set",f=Xa(m),w=`**Context:**
Theme Name: "${o}";
Theme Description: "${c}";
${p};

## Known Locations:
${i}
## Known NPCs:
${d}
## Previous Journal Entry:
${s}

## Last events:
${f}

## Scene Description:
${l};

------
`,u="You are the main protagonist writing a new entry in your personal journal, focusing primarily on Last events and Scene description, logically continuing from the Previous Journal Entry. Always write in-character. NEVER include any ID strings. Provide only the JSON for the new journal entry.",x=tc(e);return ze(async C=>{var v,j,$,S;try{He(Fe.journal.icon);const{response:A,systemInstructionUsed:y,jsonSchemaUsed:E,promptUsed:N}=await _e({modelNames:[Re,at,Oe],prompt:w,systemInstruction:u,temperature:1,thinkingBudget:1024,includeThoughts:!0,responseMimeType:"application/json",jsonSchema:x,label:"Journal"}),F=((($=(j=(v=A.candidates)==null?void 0:v[0])==null?void 0:j.content)==null?void 0:$.parts)??[]).filter(L=>L.thought===!0&&typeof L.text=="string").map(L=>L.text),D=((S=A.text)==null?void 0:S.trim())??"",k=D?nc(D):null;return{result:{entry:k,debugInfo:{prompt:N,systemInstruction:y,jsonSchema:E??x,rawResponse:D,parsedPayload:k??void 0,thoughts:F}}}}catch(A){throw console.error(`generateJournalEntry error (Attempt ${String(C+1)}):`,A),A}return{result:{entry:null,debugInfo:null}}})};function sc(e){if(!e||typeof e!="object")return!1;const t=e;return typeof t.summaryText=="string"&&Array.isArray(t.participants)&&t.participants.every(n=>typeof n=="string")&&typeof t.timestamp=="string"&&typeof t.location=="string"}function Os(e){if(!e||typeof e!="object")return!1;const t=e;return typeof t.heading=="string"&&typeof t.description=="string"&&typeof t.contentLength=="number"&&(t.actualContent===void 0||typeof t.actualContent=="string")&&(t.visibleContent===void 0||typeof t.visibleContent=="string")&&(t.imageData===void 0||typeof t.imageData=="string")}function oc(e){if(!e||typeof e!="object")return!1;const t=e;return typeof t.id=="string"&&typeof t.name=="string"&&typeof t.type=="string"&&en.includes(t.type)&&typeof t.description=="string"&&typeof t.holderId=="string"&&(t.activeDescription===void 0||typeof t.activeDescription=="string")&&(t.isActive===void 0||typeof t.isActive=="boolean")&&(t.stashed===void 0||typeof t.stashed=="boolean")&&(t.tags===void 0||Array.isArray(t.tags)&&t.tags.every(n=>typeof n=="string"))&&(t.lastWriteTurn===void 0||typeof t.lastWriteTurn=="number")&&(t.lastInspectTurn===void 0||typeof t.lastInspectTurn=="number")&&(t.contentLength===void 0||typeof t.contentLength=="number")&&(t.actualContent===void 0||typeof t.actualContent=="string")&&(t.visibleContent===void 0||typeof t.visibleContent=="string")&&(t.imageData===void 0||typeof t.imageData=="string")&&(t.chapters===void 0||Array.isArray(t.chapters)&&t.chapters.every(Os))&&(t.knownUses===void 0||Array.isArray(t.knownUses)&&t.knownUses.every(n=>typeof n.actionName=="string"&&typeof n.promptEffect=="string"&&(n.description===void 0||typeof n.description=="string")&&(n.appliesWhenActive===void 0||typeof n.appliesWhenActive=="boolean")&&(n.appliesWhenInactive===void 0||typeof n.appliesWhenInactive=="boolean")))}function rc(e){if(typeof e!="object"||e===null)return!1;const t=e;for(const n in t)if(Object.prototype.hasOwnProperty.call(t,n)){const s=t[n];if(!s||typeof s.summary!="string"||typeof s.mainQuest!="string"||typeof s.currentObjective!="string"||!Array.isArray(s.placeNames)||!s.placeNames.every(o=>typeof o=="string")||!Array.isArray(s.npcNames)||!s.npcNames.every(o=>typeof o=="string"))return!1}return!0}function ic(e){if(!e||typeof e!="object")return!1;const t=e;return typeof t.id=="number"&&typeof t.text=="string"&&Array.isArray(t.entities)&&t.entities.every(n=>typeof n=="string")&&typeof t.themeName=="string"&&typeof t.createdTurn=="number"&&typeof t.tier=="number"}function lc(e){if(!e||typeof e!="object")return!1;const t=e;return typeof t.id=="string"&&t.id.trim()!==""&&typeof t.themeName=="string"&&typeof t.name=="string"&&t.name.trim()!==""&&typeof t.description=="string"&&t.description.trim()!==""&&(t.aliases===void 0||Array.isArray(t.aliases)&&t.aliases.every(n=>typeof n=="string"))&&(t.presenceStatus===void 0||In.includes(t.presenceStatus))&&(t.lastKnownLocation===void 0||t.lastKnownLocation===null||typeof t.lastKnownLocation=="string")&&(t.preciseLocation===void 0||t.preciseLocation===null||typeof t.preciseLocation=="string")&&(t.dialogueSummaries===void 0||Array.isArray(t.dialogueSummaries)&&t.dialogueSummaries.every(sc))}function cc(e){return Array.isArray(e)&&e.every(t=>typeof t=="string"&&Pr.includes(t))}function dc(e){if(!e||typeof e!="object")return!1;const t=e;return typeof t.description=="string"&&(t.aliases===void 0||Array.isArray(t.aliases)&&t.aliases.every(n=>typeof n=="string"))&&(t.status===void 0||["undiscovered","discovered","rumored","quest_target","blocked"].includes(t.status))&&(t.visited===void 0||typeof t.visited=="boolean")&&(t.isFeature===void 0||typeof t.isFeature=="boolean")&&(t.parentNodeId===void 0||typeof t.parentNodeId=="string")}function uc(e){if(!e||typeof e!="object")return!1;const t=e,n=t.position;return typeof t.id=="string"&&t.id.trim()!==""&&typeof t.themeName=="string"&&typeof t.placeName=="string"&&t.placeName.trim()!==""&&n!==void 0&&typeof n.x=="number"&&typeof n.y=="number"&&dc(t.data)}function pc(e){if(!e||typeof e!="object")return!1;const t=e;return typeof t.id=="string"&&t.id.trim()!==""&&typeof t.sourceNodeId=="string"&&t.sourceNodeId.trim()!==""&&typeof t.targetNodeId=="string"&&t.targetNodeId.trim()!==""&&typeof t.data=="object"}function mc(e){if(!e||typeof e!="object")return!1;const t=e;return Array.isArray(t.nodes)&&t.nodes.every(uc)&&Array.isArray(t.edges)&&t.edges.every(pc)}function hc(e){if(!e||typeof e!="object")return!1;const t=e,n=Object.keys(Ft());for(const s of n){const o=t[s];if(typeof o!="number")return console.warn(`isValidMapLayoutConfig: Key '${s}' is missing or not a number. Value: ${String(o)}`),!1}return!0}function gc(e){if(!e||typeof e!="object")return!1;const t=e;return typeof t.name=="string"&&t.name.trim()!==""&&typeof t.systemInstructionModifier=="string"&&typeof t.initialMainQuest=="string"&&typeof t.initialCurrentObjective=="string"&&typeof t.initialSceneDescriptionSeed=="string"&&typeof t.initialItems=="string"}function fc(e){if(!e||typeof e!="object")return console.warn("Invalid save data: Not an object."),!1;const t=e;if(t.saveGameVersion!==Ze){const o=e.saveGameVersion;console.warn(`Save data version mismatch. Expected ${Ze}, got ${String(o)}. Attempting to load anyway if structure is V3-compatible.`)}const n=["currentThemeName","currentThemeObject","currentScene","actionOptions","mainQuest","currentObjective","inventory","playerJournal","lastJournalWriteTurn","lastJournalInspectTurn","lastLoreDistillTurn","gameLog","lastActionLog","themeHistory","themeFacts","pendingNewThemeNameAfterShift","allNPCs","mapData","currentMapNodeId","destinationNodeId","mapLayoutConfig","mapViewBox","score","stabilityLevel","chaosLevel","localTime","localEnvironment","localPlace","enabledThemePacks","playerGender","turnsSinceLastShift","globalTurnNumber","isCustomGameMode"];for(const o of n)if(!(o in t)&&!(["currentThemeName","currentThemeObject","mainQuest","currentObjective","lastActionLog","pendingNewThemeNameAfterShift","localTime","localEnvironment","localPlace","currentMapNodeId","destinationNodeId","themeFacts"].includes(o)&&t[o]===null)&&o!=="isCustomGameMode"&&o!=="globalTurnNumber"&&o!=="themeFacts")return console.warn(`Invalid save data (V3): Missing field '${o}'.`),!1;if(t.currentThemeName!==null&&typeof t.currentThemeName!="string")return console.warn("Invalid save data (V3): currentThemeName type."),!1;if(t.currentThemeObject!==null&&!gc(t.currentThemeObject))return console.warn("Invalid save data (V3): currentThemeObject type or structure."),!1;if(typeof t.currentScene!="string")return console.warn("Invalid save data (V3): currentScene type."),!1;if(!Array.isArray(t.actionOptions)||!t.actionOptions.every(o=>typeof o=="string"))return console.warn("Invalid save data (V3): actionOptions."),!1;if(t.mainQuest!==null&&typeof t.mainQuest!="string")return console.warn("Invalid save data (V3): mainQuest type."),!1;if(t.currentObjective!==null&&typeof t.currentObjective!="string")return console.warn("Invalid save data (V3): currentObjective type."),!1;if(!Array.isArray(t.inventory)||!t.inventory.every(oc))return console.warn("Invalid save data (V3): inventory."),!1;if(!Array.isArray(t.playerJournal)||!t.playerJournal.every(Os))return console.warn("Invalid save data (V3): playerJournal type."),!1;if(typeof t.lastJournalWriteTurn!="number")return console.warn("Invalid save data (V3): lastJournalWriteTurn type."),!1;if(typeof t.lastJournalInspectTurn!="number")return console.warn("Invalid save data (V3): lastJournalInspectTurn type."),!1;if(typeof t.lastLoreDistillTurn!="number")return console.warn("Invalid save data (V3): lastLoreDistillTurn type."),!1;if(!Array.isArray(t.gameLog)||!t.gameLog.every(o=>typeof o=="string"))return console.warn("Invalid save data (V3): gameLog."),!1;if(t.lastActionLog!==null&&typeof t.lastActionLog!="string")return console.warn("Invalid save data (V3): lastActionLog type."),!1;if(!rc(t.themeHistory))return console.warn("Invalid save data (V3): themeHistory."),!1;if(t.themeFacts!==void 0&&!Array.isArray(t.themeFacts))return console.warn("Invalid save data (V5): themeFacts type."),!1;if(Array.isArray(t.themeFacts)&&!t.themeFacts.every(ic))return console.warn("Invalid save data (V5): themeFacts structure."),!1;if(t.pendingNewThemeNameAfterShift!==null&&typeof t.pendingNewThemeNameAfterShift!="string")return console.warn("Invalid save data (V3): pendingNewThemeNameAfterShift type."),!1;if(!Array.isArray(t.allNPCs)||!t.allNPCs.every(lc))return console.warn("Invalid save data (V3): allNPCs."),!1;if(!mc(t.mapData))return console.warn("Invalid save data (V3): mapData."),!1;if(t.currentMapNodeId!==null&&typeof t.currentMapNodeId!="string")return console.warn("Invalid save data (V3): currentMapNodeId type."),!1;if(t.destinationNodeId!==null&&typeof t.destinationNodeId!="string")return console.warn("Invalid save data (V3): destinationNodeId type."),!1;if(!hc(t.mapLayoutConfig))return console.warn("Invalid save data (V3): mapLayoutConfig."),!1;if(typeof t.mapViewBox!="string")return console.warn("Invalid save data (V3): mapViewBox type."),!1;if(typeof t.score!="number")return console.warn("Invalid save data (V3): score type."),!1;if(typeof t.stabilityLevel!="number")return console.warn("Invalid save data (V3): stabilityLevel type."),!1;if(typeof t.chaosLevel!="number")return console.warn("Invalid save data (V3): chaosLevel type."),!1;if(t.localTime!==null&&typeof t.localTime!="string")return console.warn("Invalid save data (V3): localTime type."),!1;if(t.localEnvironment!==null&&typeof t.localEnvironment!="string")return console.warn("Invalid save data (V3): localEnvironment type."),!1;if(t.localPlace!==null&&typeof t.localPlace!="string")return console.warn("Invalid save data (V3): localPlace type."),!1;if(!cc(t.enabledThemePacks))return console.warn("Invalid save data (V3): enabledThemePacks."),!1;if(typeof t.playerGender!="string")return console.warn("Invalid save data (V3): playerGender type."),!1;if(typeof t.turnsSinceLastShift!="number")return console.warn("Invalid save data(V3): turnsSinceLastShift type."),!1;if(typeof t.globalTurnNumber!="number")return console.warn("Invalid save data(V3): globalTurnNumber type."),!1;if(t.isCustomGameMode!==void 0&&typeof t.isCustomGameMode!="boolean")return console.warn("Invalid save data (V3): isCustomGameMode type."),!1;const s=["dialogueState"];for(const o of s)if(o in t&&t[o]!==null&&t[o]!==void 0)return console.warn(`Invalid save data (V3): Unexpected dialogue field '${o}' found in SavedGameDataShape. It should be null/undefined here.`),!1;return!0}function Wa(e){const t=Ft();if(e.mapLayoutConfig&&typeof e.mapLayoutConfig=="object"){const n=e.mapLayoutConfig,s={};for(const o of Object.keys(t)){const c=n[o];Object.prototype.hasOwnProperty.call(n,o)&&typeof c=="number"?s[o]=c:s[o]=t[o]}e.mapLayoutConfig=s}else e.mapLayoutConfig=t}function Ya(e){!e||!Array.isArray(e.nodes)||e.nodes.forEach(t=>{t.data||(t.data={}),typeof t.data.description!="string"&&(t.data.description="No description provided."),Array.isArray(t.data.aliases)?t.data.aliases=t.data.aliases.filter(s=>typeof s=="string"):t.data.aliases=[],["undiscovered","discovered","rumored","quest_target","blocked"].includes(t.data.status)||(t.data.status="discovered"),typeof t.data.visited!="boolean"&&(t.data.visited=!1),typeof t.data.isFeature!="boolean"&&(t.data.isFeature=!1)})}function yc(e){return e.inventory=e.inventory.map(t=>({...t,id:t.id||jr(t.name),tags:t.tags??[],stashed:t.stashed??!1,holderId:t.holderId||me})),e.allNPCs=e.allNPCs.map(t=>{const n=t;return{...n,id:n.id??Nt(n.name??""),aliases:n.aliases??[],presenceStatus:n.presenceStatus??"unknown",lastKnownLocation:n.lastKnownLocation??null,preciseLocation:n.preciseLocation??null,dialogueSummaries:n.dialogueSummaries??[]}}),e.mapViewBox=typeof e.mapViewBox=="string"?e.mapViewBox:Pn,Array.isArray(e.themeFacts)||(e.themeFacts=[]),Array.isArray(e.playerJournal)||(e.playerJournal=[]),typeof e.lastJournalInspectTurn!="number"&&(e.lastJournalInspectTurn=0),typeof e.lastLoreDistillTurn!="number"&&(e.lastLoreDistillTurn=0),e}function Ka(e,t){let n=null;e.saveGameVersion===Ze||typeof e.saveGameVersion=="string"&&e.saveGameVersion.startsWith(Ze.split(".")[0])?(e.saveGameVersion!==Ze&&console.warn(`Potentially compatible future V${Ze.split(".")[0]}.x save version '${String(e.saveGameVersion)}' from ${t}. Attempting to treat as current version (V3) for validation.`),n=e,Wa(n),Ya(n.mapData)):(console.warn(`Unknown save version '${String(e.saveGameVersion)}' from ${t}. This might fail validation.`),n=e,Wa(n),Ya(n.mapData)),!n.currentThemeObject&&n.currentThemeName&&(n.currentThemeObject=Zt(n.currentThemeName),n.currentThemeObject||console.warn(`Failed to find theme "${n.currentThemeName}" during ${t} load. Game state might be incomplete.`));const s=e.globalTurnNumber;if(typeof s=="string"){const o=parseInt(s,10);n.globalTurnNumber=isNaN(o)?0:o}else s==null&&(n.globalTurnNumber=0);return n.destinationNodeId=n.destinationNodeId??null,fc(n)?yc(n):null}const bc=e=>{const{dialogueState:t,objectiveAnimationType:n,lastDebugPacket:s,lastTurnChanges:o,debugLore:c,debugGoodFacts:l,debugBadFacts:h,isAwaitingManualShiftThemeSelection:i,...d}=e,m={nodes:e.mapData.nodes.map(p=>({...p,data:{description:p.data.description||"Description missing in save prep",aliases:p.data.aliases??[],status:p.data.status,isFeature:p.data.isFeature,visited:p.data.visited,parentNodeId:p.data.parentNodeId,nodeType:p.data.nodeType,...Object.fromEntries(Object.entries(p.data).filter(([f])=>!["description","aliases"].includes(f)))}})),edges:e.mapData.edges};return{...d,saveGameVersion:Ze,currentThemeObject:e.currentThemeObject,inventory:e.inventory.map(p=>({...p,tags:p.tags??[],stashed:p.stashed??!1,holderId:p.holderId||me})),allNPCs:e.allNPCs.map(p=>({...p,aliases:p.aliases??[],presenceStatus:p.presenceStatus,lastKnownLocation:p.lastKnownLocation,preciseLocation:p.preciseLocation,dialogueSummaries:p.dialogueSummaries??[]})),mapData:m,currentMapNodeId:e.currentMapNodeId,destinationNodeId:e.destinationNodeId,mapLayoutConfig:e.mapLayoutConfig,mapViewBox:e.mapViewBox,score:e.score,stabilityLevel:e.stabilityLevel,chaosLevel:e.chaosLevel,localTime:e.localTime,localEnvironment:e.localEnvironment,localPlace:e.localPlace,enabledThemePacks:e.enabledThemePacks,playerGender:e.playerGender,turnsSinceLastShift:e.turnsSinceLastShift,globalTurnNumber:e.globalTurnNumber,isCustomGameMode:e.isCustomGameMode,themeFacts:e.themeFacts}},Ja=e=>{const t={nodes:e.mapData.nodes.map(s=>({...s,data:{...s.data,description:s.data.description||"Description missing on load",aliases:s.data.aliases??[]}})),edges:e.mapData.edges};let n=e.currentThemeObject;return!n&&e.currentThemeName&&(n=Zt(e.currentThemeName),n||console.warn(`expandSavedDataToFullState: Theme "${e.currentThemeName}" not found in current definitions. Game may be unstable.`)),{...e,currentThemeObject:n,allNPCs:e.allNPCs.map(s=>({...s,dialogueSummaries:s.dialogueSummaries??[]})),mapData:t,currentMapNodeId:e.currentMapNodeId,destinationNodeId:e.destinationNodeId,mapLayoutConfig:e.mapLayoutConfig,mapViewBox:e.mapViewBox,isCustomGameMode:e.isCustomGameMode,globalTurnNumber:e.globalTurnNumber,themeFacts:e.themeFacts,debugLore:!1,debugGoodFacts:[],debugBadFacts:[],isAwaitingManualShiftThemeSelection:!1,dialogueState:null,objectiveAnimationType:null,lastDebugPacket:null,lastTurnChanges:null}},qa=e=>{const t=bc(e);return t.inventory=t.inventory.map(n=>{var s;return{...n,chapters:(s=n.chapters)==null?void 0:s.map(o=>({...o,imageData:void 0}))}}),t.playerJournal=t.playerJournal.map(n=>({...n,imageData:void 0})),t},Fs=e=>({current:qa(e[0]),previous:e[1]?qa(e[1]):null}),_s=e=>[Ja(e.current),e.previous?Ja(e.previous):void 0];function Gs(e,t){const n=e.current;if(!n||typeof n!="object")return null;const s=Ka(n,t);if(!s)return null;const o=e.previous;let c=null;if(o&&typeof o=="object"){const l=Ka(o,t);l&&(c=l)}return{current:s,previous:c}}const vc=(e,t,n)=>{const s=new Blob([e],{type:n}),o=URL.createObjectURL(s),c=document.createElement("a");c.href=o,c.download=t,document.body.appendChild(c),c.click(),document.body.removeChild(c),URL.revokeObjectURL(o)},xc=async(e,t,n)=>{try{const s=await Fa(e[0]),o=e[1]?await Fa(e[1]):void 0,c={},l=d=>{d.inventory.forEach(m=>{var g;(g=m.chapters)==null||g.forEach((p,f)=>{p.imageData&&(c[ft(m.id,f)]=p.imageData)})}),d.playerJournal.forEach((m,g)=>{m.imageData&&(c[ft(fe,g)]=m.imageData)})};l(s),o&&l(o);const h=Fs(e),i=JSON.stringify({game:h,debug:t,images:c},null,2);return vc(i,`WhispersInTheDark_Save_V${Ze}_${new Date().toISOString().slice(0,10)}.json`,"application/json"),!0}catch(s){return console.error("Error saving game state to file:",s),n&&n("An error occurred while preparing your game data for download."),!1}},wc=async e=>new Promise(t=>{const n=new FileReader;n.onload=s=>{try{if(s.target&&typeof s.target.result=="string"){const o=ot(s.target.result);if(o===null){t(null);return}const{game:c=o,debug:l,images:h}=o,i=Gs(c,"file");if(i){(async()=>{try{const d=_s(i),m=async w=>{const u=he(w);return h&&(await Promise.all(u.inventory.map(async x=>{var C;await Promise.all(((C=x.chapters)==null?void 0:C.map(async(v,j)=>{const $=ft(x.id,j),S=h[$];S&&(await It(x.id,j,S),v.imageData=st(x.id,j))}))??[])})),await Promise.all(u.playerJournal.map(async(x,C)=>{const v=ft(fe,C),j=h[v];j&&(await It(fe,C,j),x.imageData=st(fe,C))}))),cl(u)},g=await m(d[0]),p=d[1]?await m(d[1]):void 0,f=Array.isArray(l)?[l[0]??null,l[1]??null]:[l??null,null];t({gameStateStack:[g,p],debugPacketStack:f})}catch{t(null)}})();return}}console.warn("File save data is invalid or version mismatch for V3. Not loading."),t(null)}catch(o){console.error("Error loading game state from file:",o),t(null)}},n.onerror=()=>{console.error("Error reading file."),t(null)},n.readAsText(e)}),Mn=(e,t)=>{try{const n=Fs(e);return localStorage.setItem(Qt,JSON.stringify(n)),!0}catch(n){console.error("Error saving game state to localStorage:",n);const s=n instanceof DOMException&&(n.name==="QuotaExceededError"||n.code===22)?"Could not save game: Browser storage is full. Please clear some space or try saving to a file.":"An unexpected error occurred while trying to automatically save your game.";return t&&t(s),!1}},Cc=()=>{try{const e=localStorage.getItem(Qt);if(!e)return null;const t=ot(e);if(t===null)return console.warn("Saved data found in localStorage could not be parsed as JSON."),null;if(typeof t!="object")return console.warn("Saved data found in localStorage is not an object."),null;const n=Gs(t,"localStorage");return n?_s(n):(console.warn("Local save data is invalid or version mismatch for V3. Starting new game."),localStorage.removeItem(Qt),localStorage.removeItem(Gt),null)}catch(e){return console.error("Error loading game state from localStorage:",e),localStorage.removeItem(Qt),localStorage.removeItem(Gt),null}},Sc=async()=>{const e=Cc();if(!e)return null;const[t,n]=e,s=await _a(t),o=n?await _a(n):void 0;return[s,o]},$n=e=>{try{localStorage.setItem(Gt,JSON.stringify(e))}catch(t){console.error("Error saving debug packet stack to localStorage:",t)}},Nc=()=>{try{const e=localStorage.getItem(Gt);if(!e)return null;const t=ot(e);if(Array.isArray(t)){const[n,s]=t;return[n??null,s??null]}return t&&typeof t=="object"?[t,null]:(console.warn("Saved debug stack found in localStorage could not be parsed."),null)}catch(e){return console.error("Error loading debug packet stack from localStorage:",e),localStorage.removeItem(Gt),null}},_t=e=>{try{localStorage.setItem(kn,JSON.stringify(e))}catch(t){console.error("Error saving debug lore state to localStorage:",t)}},Qa=()=>{try{const e=localStorage.getItem(kn);if(!e)return null;const t=ot(e);if(!t||typeof t!="object"||typeof t.debugLore!="boolean")return console.warn("Saved debug lore data found in localStorage could not be parsed."),null;const n=Array.isArray(t.debugGoodFacts)?[...t.debugGoodFacts]:[],s=Array.isArray(t.debugBadFacts)?[...t.debugBadFacts]:[];return{debugLore:t.debugLore,debugGoodFacts:n,debugBadFacts:s}}catch(e){return console.error("Error loading debug lore state from localStorage:",e),localStorage.removeItem(kn),null}},Tc=1500,Ic=({gatherGameStateStack:e,gatherDebugPacketStack:t,applyLoadedGameState:n,setError:s,setIsLoading:o,isLoading:c=!1,dialogueState:l=null,hasGameBeenInitialized:h=!1})=>{const[i,d]=r.useState(li),[m,g]=r.useState([...ci]),[p,f]=r.useState(di),[w,u]=r.useState(ui),[x,C]=r.useState(null),[v,j]=r.useState(null),[$,S]=r.useState(!1);r.useEffect(()=>{(async()=>{const k=await Sc(),L=Nc(),I=Qa();if(k){L&&j(L),I&&(k[0].debugLore=I.debugLore,k[0].debugGoodFacts=I.debugGoodFacts,k[0].debugBadFacts=I.debugBadFacts);const T=k[0];d(T.playerGender),g(T.enabledThemePacks),f(T.stabilityLevel),u(T.chaosLevel),C(k)}else C(null);S(!0)})()},[]);const A=r.useCallback(k=>{k.playerGender!==void 0&&d(k.playerGender),k.enabledThemePacks!==void 0&&g(k.enabledThemePacks),k.stabilityLevel!==void 0&&f(k.stabilityLevel),k.chaosLevel!==void 0&&u(k.chaosLevel)},[]),y=r.useRef(null),E=r.useRef(null);r.useEffect(()=>{if(!(c||!h||!$||l))return E.current&&clearTimeout(E.current),E.current=window.setTimeout(()=>{if(e&&t){const k=e(),L=t();Mn(k,s?I=>{s(I)}:void 0),$n(L),_t({debugLore:k[0].debugLore,debugGoodFacts:k[0].debugGoodFacts,debugBadFacts:k[0].debugBadFacts})}},Tc),()=>{E.current&&clearTimeout(E.current)}},[e,t,c,h,$,l,s]);const N=r.useCallback(async()=>{if(c||l){s==null||s("Cannot save to file while loading or in dialogue.");return}if(e&&t){const k=e(),L=t();await xc(k,L,s?I=>{s(I)}:void 0)}},[e,t,c,l,s]),O=()=>{var k;if(c||l){s==null||s("Cannot load from file while another operation is in progress or while in dialogue.");return}(k=y.current)==null||k.click()},F=async k=>{var I;if(c||l){s==null||s("Cannot load from file while another operation is in progress or while in dialogue."),k.target.value="";return}const L=(I=k.target.files)==null?void 0:I[0];if(L){o==null||o(!0),s==null||s(null),await Ss();const T=await wc(L);if(T){const{gameStateStack:P,debugPacketStack:b}=T,R=Qa();R&&(P[0].debugLore=R.debugLore,P[0].debugGoodFacts=R.debugGoodFacts,P[0].debugBadFacts=R.debugBadFacts),n&&await n({savedStateToLoad:P}),Mn(P,s?U=>{s(U)}:void 0),$n(b),_t(R||{debugLore:P[0].debugLore,debugGoodFacts:P[0].debugGoodFacts,debugBadFacts:P[0].debugBadFacts})}else s==null||s("Failed to load game from file. The file might be corrupted, an incompatible version, or not a valid save file.");o==null||o(!1)}k.target.value=""};return{playerGender:i,setPlayerGender:d,enabledThemePacks:m,setEnabledThemePacks:g,stabilityLevel:p,setStabilityLevel:f,chaosLevel:w,setChaosLevel:u,initialSavedState:x,initialDebugStack:v,appReady:$,fileInputRef:y,handleSaveToFile:N,handleLoadFromFileClick:O,handleFileInputChange:k=>{F(k)},updateSettingsFromLoad:A}},jc=()=>{const[e,t]=r.useState(!1),[n,s]=r.useState(null),[o,c]=r.useState(null),[l,h]=r.useState(!1),[i,d]=r.useState(!1),[m,g]=r.useState(!1),[p,f]=r.useState(!1),[w,u]=r.useState(!1),[x,C]=r.useState(!1),[v,j]=r.useState(!1),[$,S]=r.useState(!1),[A,y]=r.useState(!1),[E,N]=r.useState(!1),[O,F]=r.useState(!1),[D,k]=r.useState(!1),[L,I]=r.useState(!1),[T,P]=r.useState(!1),[b,R]=r.useState(null),[U,M]=r.useState(0),[_,Q]=r.useState(!1),[W,G]=r.useState(!1),[z,H]=r.useState([]),q=r.useRef(null),ne=r.useCallback(()=>{t(!0)},[]),Z=r.useCallback(()=>{t(!1)},[]),ae=r.useCallback(()=>{h(!0)},[]),ie=r.useCallback(()=>{h(!1)},[]),se=r.useCallback(()=>{f(!0)},[]),ue=r.useCallback(()=>{f(!1)},[]),ee=r.useCallback(()=>{d(!0)},[]),we=r.useCallback(()=>{d(!1)},[]),V=r.useCallback(()=>{g(!0)},[]),B=r.useCallback(()=>{g(!1)},[]),le=r.useCallback(()=>{u(!0)},[]),ce=r.useCallback(()=>{u(!1)},[]),J=r.useCallback(()=>{j(!0)},[]),oe=r.useCallback(()=>{j(!1)},[]),ye=r.useCallback(()=>{S(!1)},[]),Ae=r.useCallback(()=>{y(!0)},[]),Te=r.useCallback(()=>{y(!1)},[]),Pe=r.useCallback(()=>{N(!0)},[]),Ke=r.useCallback(()=>{N(!1)},[]),ke=r.useCallback(()=>{F(!0)},[]),Ge=r.useCallback(()=>{F(!1)},[]),De=r.useCallback(()=>{k(!0)},[]),et=r.useCallback(()=>{k(!1)},[]),Pt=r.useCallback(()=>{I(!0)},[]),K=r.useCallback(()=>{I(!1)},[]),Je=r.useCallback(()=>{P(!0)},[]),dt=r.useCallback(()=>{P(!1)},[]),X=r.useCallback((Ne,Ie=0)=>{R(Ne),M(Ie),Q(!0)},[]),re=r.useCallback(()=>{Q(!1),R(null),M(0),ls()},[]),be=r.useCallback((Ne,Ie)=>{H(Ne),q.current=Ie,G(!0)},[]),ge=r.useCallback((Ne,Ie,Ue)=>{var kt;(kt=q.current)==null||kt.call(q,Ne,Ie,Ue),G(!1)},[]),Se=r.useCallback(()=>{var Ne;(Ne=q.current)==null||Ne.call(q,[],[],!1),G(!1)},[]);return{isVisualizerVisible:e,visualizerImageUrl:n,visualizerImageScene:o,isKnowledgeBaseVisible:l,isSettingsVisible:i,isInfoVisible:m,isMapVisible:p,userRequestedTitleMenuOpen:w,shouldReturnToTitleMenu:x,isHistoryVisible:v,isDebugViewVisible:$,isCustomGameSetupVisible:A,isManualShiftThemeSelectionVisible:E,shiftConfirmOpen:O,newGameFromMenuConfirmOpen:D,loadGameFromMenuConfirmOpen:L,newCustomGameConfirmOpen:T,pageItemId:b,pageStartChapterIndex:U,isPageVisible:_,setVisualizerImageUrl:s,setVisualizerImageScene:c,setShouldReturnToTitleMenu:C,setIsDebugViewVisible:S,openVisualizer:ne,closeVisualizer:Z,openKnowledgeBase:ae,closeKnowledgeBase:ie,openMap:se,closeMap:ue,openSettings:ee,closeSettings:we,openInfo:V,closeInfo:B,openTitleMenu:le,closeTitleMenu:ce,openHistory:J,closeHistory:oe,closeDebugView:ye,openCustomGameSetup:Ae,closeCustomGameSetup:Te,openManualShiftThemeSelection:Pe,closeManualShiftThemeSelection:Ke,openShiftConfirm:ke,closeShiftConfirm:Ge,openNewGameFromMenuConfirm:De,closeNewGameFromMenuConfirm:et,openLoadGameFromMenuConfirm:Pt,closeLoadGameFromMenuConfirm:K,openNewCustomGameConfirm:Je,closeNewCustomGameConfirm:dt,openPageView:X,closePageView:re,isDebugLoreVisible:W,debugLoreFacts:z,openDebugLoreModal:be,submitDebugLoreModal:ge,closeDebugLoreModal:Se}},Pc=1500;function kc({gatherGameStateStack:e,gatherDebugPacketStack:t,isLoading:n,hasGameBeenInitialized:s,appReady:o,dialogueState:c,dependencies:l,setError:h}){const i=r.useRef(null),d=JSON.stringify(l);r.useEffect(()=>{if(!(n||!s||!o||c))return i.current&&clearTimeout(i.current),i.current=window.setTimeout(()=>{const m=e(),g=t();Mn(m,h?p=>{h(p)}:void 0),$n(g),_t({debugLore:m[0].debugLore,debugGoodFacts:m[0].debugGoodFacts,debugBadFacts:m[0].debugBadFacts})},Pc),()=>{i.current&&clearTimeout(i.current)}},[e,t,n,s,o,c,d,h])}function Lc(){var ba,va,xa,wa;const{clearProgress:e}=js(),t=r.useRef(null),n=()=>{if(!t.current)throw new Error("Game logic is not initialized");return t.current},{playerGender:s,setPlayerGender:o,enabledThemePacks:c,setEnabledThemePacks:l,stabilityLevel:h,setStabilityLevel:i,chaosLevel:d,setChaosLevel:m,initialSavedState:g,initialDebugStack:p,appReady:f,fileInputRef:w,handleSaveToFile:u,handleLoadFromFileClick:x,handleFileInputChange:C,updateSettingsFromLoad:v}=Ic({gatherGameStateStack:()=>n().gatherCurrentGameState(),gatherDebugPacketStack:()=>n().gatherDebugPacketStack(),applyLoadedGameState:te=>n().applyLoadedGameState(te),setError:te=>{n().setError(te)},setIsLoading:te=>{n().setIsLoading(te)},isLoading:(ba=t.current)==null?void 0:ba.isLoading,dialogueState:(va=t.current)==null?void 0:va.dialogueState,hasGameBeenInitialized:(xa=t.current)==null?void 0:xa.hasGameBeenInitialized}),{isVisualizerVisible:j,visualizerImageUrl:$,setVisualizerImageUrl:S,visualizerImageScene:A,setVisualizerImageScene:y,isKnowledgeBaseVisible:E,isSettingsVisible:N,isInfoVisible:O,isMapVisible:F,userRequestedTitleMenuOpen:D,setShouldReturnToTitleMenu:k,shouldReturnToTitleMenu:L,isHistoryVisible:I,isDebugViewVisible:T,isCustomGameSetupVisible:P,isManualShiftThemeSelectionVisible:b,shiftConfirmOpen:R,newGameFromMenuConfirmOpen:U,loadGameFromMenuConfirmOpen:M,newCustomGameConfirmOpen:_,openVisualizer:Q,closeVisualizer:W,openKnowledgeBase:G,closeKnowledgeBase:z,openMap:H,closeMap:q,openSettings:ne,closeSettings:Z,openInfo:ae,closeInfo:ie,openTitleMenu:se,closeTitleMenu:ue,openHistory:ee,closeHistory:we,closeDebugView:V,setIsDebugViewVisible:B,openCustomGameSetup:le,closeCustomGameSetup:ce,openManualShiftThemeSelection:J,closeManualShiftThemeSelection:oe,openShiftConfirm:ye,closeShiftConfirm:Ae,openNewGameFromMenuConfirm:Te,closeNewGameFromMenuConfirm:Pe,openLoadGameFromMenuConfirm:Ke,closeLoadGameFromMenuConfirm:ke,openNewCustomGameConfirm:Ge,closeNewCustomGameConfirm:De,pageItemId:et,pageStartChapterIndex:Pt,isPageVisible:K,openPageView:Je,closePageView:dt,isDebugLoreVisible:X,debugLoreFacts:re,openDebugLoreModal:be,submitDebugLoreModal:ge,closeDebugLoreModal:Se}=jc(),[Ne,Ie]=r.useState(!1);r.useEffect(()=>{je()||Ie(!0)},[]);const Ue=r.useCallback(()=>{Ie(!0)},[]),kt=r.useCallback(()=>{Ie(!1)},[]),We=ul({playerGenderProp:s,enabledThemePacksProp:c,stabilityLevelProp:h,chaosLevelProp:d,onSettingsUpdateFromLoad:v,initialSavedStateFromApp:g,initialDebugStackFromApp:p,isAppReady:f,openDebugLoreModal:be});t.current=We;const{currentTheme:de,currentScene:qe,mainQuest:Lt,currentObjective:Wn,actionOptions:Yn,inventory:rt,itemsHere:Vs,itemPresenceByNode:Bs,gameLog:it,isLoading:Ve,error:At,lastActionLog:Kn,themeHistory:Jn,mapData:Me,currentMapNodeId:Qe,mapLayoutConfig:Et,allNPCs:lt,score:cn,freeFormActionText:zs,setFreeFormActionText:qn,handleFreeFormActionSubmit:Hs,objectiveAnimationType:Ws,handleActionSelect:Ys,handleItemInteraction:zt,handleTakeLocationItem:Ks,handleRetry:Qn,executeManualRealityShift:Xn,completeManualShiftWithSelectedTheme:Zn,cancelManualShiftThemeSelection:ea,isAwaitingManualShiftThemeSelection:dn,startCustomGame:ta,gatherCurrentGameState:Js,gatherDebugPacketStack:qs,hasGameBeenInitialized:ve,handleStartNewGameFromButton:Ht,localTime:un,localEnvironment:pn,localPlace:mn,dialogueState:Le,handleDialogueOptionSelect:na,handleForceExitDialogue:Qs,isDialogueExiting:aa,lastDebugPacket:ut,lastTurnChanges:Xs,turnsSinceLastShift:sa,globalTurnNumber:bt,isCustomGameMode:Wt,gameStateStack:Zs,debugPacketStack:eo,handleMapLayoutConfigChange:to,handleUndoTurn:no,destinationNodeId:vt,handleSelectDestinationNode:ao,mapViewBox:Dt,handleMapViewBoxChange:so,handleMapNodesPositionChange:hn,commitGameState:oa,updateItemContent:oo,addPlayerJournalEntry:ra,updatePlayerJournalContent:ro,recordPlayerJournalInspect:ia,playerJournal:Ye,lastJournalWriteTurn:ct,lastJournalInspectTurn:la,handleDistillFacts:ca,toggleDebugLore:io,debugLore:da,debugGoodFacts:ua,debugBadFacts:pa}=We,lo=r.useCallback(te=>{oa(te)},[oa]),co=r.useCallback(te=>{const xe=new Blob([te],{type:"application/json"}),Ce=URL.createObjectURL(xe),$e=document.createElement("a");$e.href=Ce,$e.download="DebugLoreFacts.json",document.body.appendChild($e),$e.click(),document.body.removeChild($e),URL.revokeObjectURL(Ce)},[]),uo=r.useCallback(()=>{We.clearDebugFacts(),_t({debugLore:We.debugLore,debugGoodFacts:[],debugBadFacts:[]})},[We]);r.useEffect(()=>{Ve||e()},[Ve,e]);const ma=r.useRef(it.length),ha=r.useRef(qe),ga=D||f&&!ve&&!Ve&&!P&&!b,xt=j||E||N||O||F||I||T||K||X||!!Le||ga||R||U||M||P||_||b;r.useEffect(()=>{const te=document.body;if(xt){const xe=window.innerWidth-document.documentElement.clientWidth;te.style.overflow="hidden",xe>0&&(te.style.paddingRight=`${String(xe)}px`)}else te.style.overflow="",te.style.paddingRight="";return()=>{te.style.overflow="",te.style.paddingRight=""}},[xt]),r.useEffect(()=>{(qe!==ha.current||it.length>ma.current)&&window.scrollTo({top:0,behavior:"smooth"}),ha.current=qe,ma.current=it.length},[qe,it.length]),r.useEffect(()=>{S(null),y(null)},[qe,S,y]),kc({gatherGameStateStack:Js,gatherDebugPacketStack:qs,isLoading:Ve,hasGameBeenInitialized:ve,appReady:f,dialogueState:Le,setError:te=>{n().setError(te)},dependencies:[de,qe,Yn,Lt,Wn,rt,it,Kn,Jn,Me,Qe,Et,lt,cn,un,pn,mn,s,c,h,d,sa,Wt,dn,da,ua,pa]});const po=cn>=Rt&&!Ve&&ve&&!Le,mo=typeof window<"u"&&window.matchMedia("(hover: none)").matches,ho=r.useCallback((te,xe)=>{S(te),y(xe)},[S,y]),go=r.useCallback(()=>{Xn(),Ae()},[Xn,Ae]),fa=r.useCallback(()=>{Qn()},[Qn]),fo=r.useCallback(()=>{ca()},[ca]),yo=r.useCallback(te=>{var Ce;const xe=te.id===fe?Math.max(0,(((Ce=te.chapters)==null?void 0:Ce.length)??0)-1):0;Je(te.id,xe)},[Je]),[Yt,gn]=r.useState(!1),bo=(ct===0||bt-ct>=Aa)&&!Yt,vo=Ye.length>0&&(la===0||bt-la>=fs),xo=r.useCallback(()=>{const te=Ye.length>0?Ye.length-1:0;Je(fe,te)},[Je,Ye.length]),wo=r.useCallback(()=>{!(ct===0||bt-ct>=Aa)||Yt||(gn(!0),Je(fe,Ye.length),(async()=>{var Sa,Na;if(!de){gn(!1);return}const{name:xe,systemInstructionModifier:Ce}=de,$e=Me.nodes.filter(pt=>pt.themeName===xe&&pt.data.nodeType!=="feature"&&pt.data.nodeType!=="room"),Mt=yt($e,!0),Kt=lt.filter(pt=>pt.themeName===xe),Yo=Kt.length>0?nt(Kt," - ",!1,!1,!1,!0):"None specifically known in this theme yet.",Ko=((Sa=Ye[Ye.length-1])==null?void 0:Sa.actualContent)??"",Ca=Math.floor(Math.random()*50)+100,wt=await ac(Ca,"Personal Journal","Your own journal",Ko,xe,Ce,qe,((Na=ut==null?void 0:ut.storytellerThoughts)==null?void 0:Na.slice(-1)[0])??"",Mt,Yo,it.slice(-Bn),Lt);if(wt!=null&&wt.entry){const pt={heading:wt.entry.heading,description:"",contentLength:Ca,actualContent:wt.entry.text};ra(pt,wt.debugInfo??void 0),Je(fe,Ye.length)}gn(!1)})())},[lt,de,qe,ra,Me.nodes,Lt,Je,Ye,ut,it,bt,ct,Yt]),Co=r.useCallback(te=>{if(te===fe){const Ce={id:fe,name:"Personal Journal",type:"book",description:"Your own journal",holderId:me,chapters:Ye,lastWriteTurn:ct,tags:[(de==null?void 0:de.playerJournalStyle)??"handwritten"]},$e=ia();zt(Ce,"inspect",void 0,$e);return}const xe=rt.find(Ce=>Ce.id===te);xe&&zt(xe,"inspect")},[rt,zt,Ye,ct,ia,de]),So=r.useCallback(te=>{qn(te.target.value)},[qn]),No=r.useCallback(()=>{ke(),se()},[ke,se]),To=r.useCallback(()=>{Ae()},[Ae]),Io=r.useCallback(()=>{De(),se()},[De,se]),jo=r.useCallback(()=>{Pe(),se()},[Pe,se]),Po=r.useCallback(te=>{l(xe=>{const Ce=xe.includes(te)?xe.filter($e=>$e!==te):[...xe,te];return Ce.length===0?(n().setError("At least one theme pack must be enabled."),xe):Ce})},[l]);r.useEffect(()=>{dn&&!b&&J()},[dn,b,J]);const ko=r.useCallback(te=>{oe(),Zn(te)},[oe,Zn]),Lo=r.useCallback(()=>{oe(),ea()},[oe,ea]),Ao=r.useCallback(te=>{na(te)},[na]),Eo=r.useCallback(()=>{ue(),ve?Te():Ht()},[ue,ve,Ht,Te]),Do=r.useCallback(()=>{Pe(),Ht()},[Pe,Ht]),Mo=r.useCallback(()=>{ue(),ve?Ke():x()},[ue,ve,x,Ke]),$o=r.useCallback(()=>{ke(),x()},[ke,x]),Ro=r.useCallback(async()=>{ue(),await u()},[ue,u]),Oo=r.useCallback(()=>{ue(),k(!0),ne()},[ue,k,ne]),Fo=r.useCallback(()=>{Z(),(L||!ve)&&se(),k(!1)},[Z,L,ve,se,k]),_o=r.useCallback(()=>{ue(),k(!0),ae()},[ue,k,ae]),Go=r.useCallback(()=>{ie(),(L||!ve)&&se(),k(!1)},[ie,L,ve,se,k]),Uo=r.useCallback(()=>{ue(),ve?Ge():le()},[ue,ve,le,Ge]),Vo=r.useCallback(()=>{De(),le()},[De,le]),Bo=r.useCallback(()=>{ce(),se()},[ce,se]),zo=r.useCallback(te=>{ce(),ta(te)},[ce,ta]),[Ho,fn]=r.useState(Dt),ya=r.useMemo(()=>kr(Me),[Me]),Wo=r.useMemo(()=>!vt||!Qe||Qe===vt||Lr(Me,Qe,vt)?null:Ar(Me,Qe,vt,ya),[vt,Qe,Me,ya,bt]),yn=r.useRef(!1);return r.useEffect(()=>{if(F&&!yn.current){const te=cs(Me.nodes.filter(Ce=>Ce.themeName===(de==null?void 0:de.name)).map(Ce=>({...Ce})),{padding:Et.NESTED_PADDING,anglePadding:Et.NESTED_ANGLE_PADDING});hn(te);const xe=Dt.split(" ").map(parseFloat);if(xe.length===4){const[,,Ce,$e]=xe,Mt=te.find(Kt=>Kt.id===Qe);Mt&&!isNaN(Ce)&&!isNaN($e)?fn(`${String(Mt.position.x-Ce/2)} ${String(Mt.position.y-$e/2)} ${String(Ce)} ${String($e)}`):fn(Dt)}else fn(Dt)}F?yn.current=!0:yn.current=!1},[F,Dt,Qe,Me.nodes,de==null?void 0:de.name,Et,hn]),f?a.jsxs(a.Fragment,{children:[a.jsxs("div",{className:"min-h-screen bg-slate-900 text-slate-200 p-4 md:p-8 flex flex-col items-center",children:[a.jsx(ks,{currentTheme:de,hasGameBeenInitialized:ve,isCustomGameMode:Wt}),At&&!Ve&&!Le&&ve?a.jsx("div",{className:"w-full max-w-3xl my-4",children:a.jsx(An,{message:At,onRetry:fa})}):null,At&&!ve?a.jsx("div",{className:"w-full max-w-3xl my-4",children:a.jsx(An,{message:At,onRetry:fa})}):null,a.jsxs("main",{className:`w-full max-w-screen-xl grid grid-cols-1 lg:grid-cols-4 gap-3 flex-grow ${xt?"filter blur-sm pointer-events-none":""}`,children:[a.jsxs("div",{className:"lg:col-span-2 space-y-3 flex flex-col",children:[a.jsx(vl,{currentSceneExists:!!qe,currentThemeName:de?de.name:null,isLoading:Ve||!!Le,onManualRealityShift:ye,onOpenHistory:ee,onOpenKnowledgeBase:G,onOpenMap:H,onOpenTitleMenu:se,onOpenVisualizer:Q,score:cn,turnsSinceLastShift:sa}),a.jsx(Ps,{}),Ve&&!ve?!At&&a.jsx(gt,{}):null,ve?a.jsxs(a.Fragment,{children:[a.jsxs("div",{className:"relative",children:[a.jsx(Ts,{allNPCs:lt,currentThemeName:de?de.name:null,description:qe,inventory:rt,lastActionLog:Kn,localEnvironment:pn,localPlace:mn,localTime:un,mapData:Me.nodes}),Ve&&!Le&&!aa&&ve?a.jsx("div",{className:"absolute inset-0 flex items-center justify-center bg-slate-900/75 rounded-lg",children:a.jsx(gt,{})}):null]}),a.jsx(pl,{allNPCs:lt,currentThemeName:de?de.name:null,disabled:Ve||!!Le,inventory:rt,mapData:Me.nodes,onActionSelect:Ys,options:Yn}),a.jsx(ec,{canPerformFreeAction:po,freeFormActionText:zs,onChange:So,onSubmit:Hs})]}):a.jsx("div",{className:"bg-slate-800/50 border border-slate-700 rounded-lg flex-grow min-h-48"})]}),a.jsx("div",{className:"lg:col-span-2 space-y-2 flex flex-col",children:ve?a.jsx(bl,{allNPCs:lt,currentMapNodeId:Qe,currentObjective:Wn,currentThemeName:de?de.name:null,disabled:Ve||xt,enableMobileTap:mo,globalTurnNumber:bt,inventory:rt,itemsHere:Vs,mainQuest:Lt,mapNodes:Me.nodes,objectiveAnimationType:Ws,onDropItem:We.handleDropItem,onItemInteract:zt,onReadPage:yo,onReadPlayerJournal:xo,onStashToggle:We.handleStashToggle,onTakeItem:Ks}):a.jsx("div",{className:"hidden lg:block bg-slate-800/50 border border-slate-700 rounded-lg flex-grow min-h-48"})})]}),a.jsx(jl,{isGameBusy:xt||Ve,lastTurnChanges:Xs}),a.jsx(Ol,{isBlurred:xt,isDebugViewVisible:T,setIsDebugViewVisible:B})]}),a.jsx("input",{accept:".json,application/json","aria-hidden":"true",className:"hidden",onChange:C,ref:w,type:"file"}),a.jsx(Es,{allNPCs:lt,currentThemeName:de?de.name:null,history:(Le==null?void 0:Le.history)??[],inventory:rt,isDialogueExiting:aa,isLoading:Ve,isVisible:!!Le,mapData:Me.nodes,onClose:Qs,onOptionSelect:Ao,options:(Le==null?void 0:Le.options)??[],participants:(Le==null?void 0:Le.participants)??[]}),a.jsx(pi,{badFacts:pa,debugLore:da,debugPacket:eo[0],gameStateStack:Zs,goodFacts:ua,isVisible:T,onApplyGameState:lo,onClearFacts:uo,onClose:V,onDistillFacts:fo,onSaveFacts:co,onToggleDebugLore:io,onUndoTurn:no,travelPath:Wo}),a.jsx(As,{isGameActive:ve,isVisible:ga,onClose:ue,onCustomGame:Uo,onLoadGame:Mo,onNewGame:Eo,onOpenInfo:_o,onOpenSettings:Oo,onOpenGeminiKeyModal:Ue,onSaveGame:ve?Ro:void 0}),a.jsx(En,{isVisible:P,onClose:Bo,onThemeSelected:zo}),a.jsx(En,{descriptionText:"Choose the theme you wish to manually shift your reality to. The current theme is disabled.",disabledThemeName:de?de.name:null,isVisible:b,onClose:Lo,onThemeSelected:ko,titleText:"Select Destination Theme"}),a.jsx(Pl,{chaosLevel:d,enabledThemePacks:c,isCustomGameMode:Wt,isVisible:N,onChaosChange:m,onClose:Fo,onPlayerGenderChange:o,onStabilityChange:i,onToggleThemePack:Po,playerGender:s,stabilityLevel:h}),a.jsx(Ml,{isVisible:O,onClose:Go}),a.jsx($l,{facts:re,isVisible:X,onClose:Se,onSubmit:ge}),a.jsx(Rl,{isVisible:Ne,onClose:kt}),ve&&de?a.jsx(Zl,{allNPCs:lt,canInspectJournal:vo,canWriteJournal:bo,currentMapNodeId:Qe,currentQuest:Lt,currentScene:qe,currentTheme:de,currentThemeName:de.name,destinationNodeId:vt,gameLog:it,handleCancelLoadGameFromMenu:No,handleCancelNewCustomGame:Io,handleCancelNewGameFromMenu:jo,handleCancelShift:To,handleConfirmLoadGameFromMenu:$o,handleConfirmNewCustomGame:Vo,handleConfirmNewGameFromMenu:Do,handleConfirmShift:go,initialLayoutConfig:Et,initialViewBox:Ho,inventory:rt,isCustomGameModeShift:Wt,isHistoryVisible:I,isKnowledgeBaseVisible:E,isMapVisible:F,isPageVisible:K,isVisualizerVisible:j,isWritingJournal:Yt,itemPresenceByNode:Bs,lastJournalWriteTurn:ct,loadGameFromMenuConfirmOpen:M,localEnvironment:pn,localPlace:mn,localTime:un,mapData:Me,newCustomGameConfirmOpen:_,newGameFromMenuConfirmOpen:U,onCloseHistory:we,onCloseKnowledgeBase:z,onCloseMap:q,onClosePage:dt,onCloseVisualizer:W,onItemInspect:Co,onLayoutConfigChange:to,onNodesPositioned:hn,onSelectDestination:ao,onViewBoxChange:so,onWriteJournal:wo,pageItemId:et,pageStartChapterIndex:Pt,playerJournal:Ye,setGeneratedImage:ho,shiftConfirmOpen:R,storytellerThoughts:((wa=ut==null?void 0:ut.storytellerThoughts)==null?void 0:wa.slice(-1)[0])??"",themeHistory:Jn,updateItemContent:oo,updatePlayerJournalContent:ro,visualizerImageScene:A,visualizerImageUrl:$}):null]}):a.jsxs("div",{className:"min-h-screen bg-slate-900 text-slate-200 flex flex-col items-center justify-center p-4",children:[a.jsx(gt,{}),a.jsx("p",{className:"mt-4 text-xl text-sky-400",children:"Initializing application..."})]})}const Us=document.getElementById("root");if(!Us)throw new Error("Could not find root element to mount to");const Ac=Qo.createRoot(Us);Ac.render(a.jsx(r.StrictMode,{children:a.jsx(Lc,{})}));
